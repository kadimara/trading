var as=Object.defineProperty;var zr=e=>{throw TypeError(e)};var cs=(e,r,t)=>r in e?as(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t;var W=(e,r,t)=>cs(e,typeof r!="symbol"?r+"":r,t),Kr=(e,r,t)=>r.has(e)||zr("Cannot "+t);var ie=(e,r,t)=>(Kr(e,r,"read from private field"),t?t.call(e):r.get(e)),ye=(e,r,t)=>r.has(e)?zr("Cannot add the same private member more than once"):r instanceof WeakSet?r.add(e):r.set(e,t),Jr=(e,r,t,o)=>(Kr(e,r,"write to private field"),o?o.call(e,t):r.set(e,t),t);import{a as L,t as M,n as He,c as dr,b as _e}from"../chunks/disclose-version.BibnFRCd.js";import{R as vt,Q as gr,J as ls,h as z,a as Et,as as Tt,at as us,au as ps,b as bt,p as wt,e as vr,f as he,U as ds,D as gs,s as Ze,aq as yt,H as hs,r as Qr,c as er,av as $e,d as kt,G as Yr,aw as Xr,ax as ms,ap as fs,ay as _s,C as vs,F as Es,am as Ts,ag as bs,X as ws,az as Er,aA as Tr,aa as ys,L as Zr,aB as Pt,aC as ks,aD as Ps,ak as Gs,aE as Os,aF as Rs,aG as As,q as Ss,W as Fs,V as Gt,g as se,k as N,m as $,l as x,t as j,x as p,j as oe,z as Z,i as le,ae as te,N as K,n as Ot}from"../chunks/runtime.BCcXHmBy.js";import{d as Cs,i as Ds,e as Us,f as Ce,g as Ls,n as xs,j as Is,l as Rt,a as Q,k as At}from"../chunks/store.D6zCbj6_.js";import{i as re}from"../chunks/if.CXXDT0Y1.js";import{i as js,p as B,r as De,b as br,o as qs,a as ue}from"../chunks/index-client.CRlUgUcE.js";import{i as Ve}from"../chunks/legacy.CMF9vnzL.js";const $s=[];function St(e,r=!1){return Ne(e,new Map,"",$s)}function Ne(e,r,t,o,s=null){if(typeof e=="object"&&e!==null){const a=r.get(e);if(a!==void 0)return a;if(e instanceof Map)return new Map(e);if(e instanceof Set)return new Set(e);if(vt(e)){const c=[];r.set(e,c),s!==null&&r.set(s,c);for(let d=0;d<e.length;d+=1)c.push(Ne(e[d],r,t,o));return c}if(gr(e)===ls){const c={};r.set(e,c),s!==null&&r.set(s,c);for(var i in e)c[i]=Ne(e[i],r,t,o);return c}if(e instanceof Date)return structuredClone(e);if(typeof e.toJSON=="function")return Ne(e.toJSON(),r,t,o,e)}if(e instanceof EventTarget)return e;try{return structuredClone(e)}catch{return e}}function Ns(e,r,t){z&&Et();var o=e,s=ds,i,a=Tt()?us:ps;bt(()=>{a(s,s=r())&&(i&&wt(i),i=vr(()=>t(o)))}),z&&(o=he)}function We(e,r){return r}function Bs(e,r,t,o){for(var s=[],i=r.length,a=0;a<i;a++)ms(r[a].e,s,!0);var c=i>0&&s.length===0&&t!==null;if(c){var d=t.parentNode;fs(d),d.append(t),o.clear(),ae(e,r[0].prev,r[i-1].next)}_s(s,()=>{for(var v=0;v<i;v++){var f=r[v];c||(o.delete(f.k),ae(e,f.prev,f.next)),vs(f.e,!c)}})}function Re(e,r,t,o,s,i=null){var a=e,c={flags:r,items:new Map,first:null},d=(r&Pt)!==0;if(d){var v=e;a=z?Ze(Es(v)):v.appendChild(gs())}z&&Et();var f=null,b=!1;bt(()=>{var E=t(),h=vt(E)?E:E==null?[]:yt(E),P=h.length;if(b&&P===0)return;b=P===0;let S=!1;if(z){var _=a.data===hs;_!==(P===0)&&(a=Qr(),Ze(a),er(!1),S=!0)}if(z){for(var y=null,O,k=0;k<P;k++){if(he.nodeType===8&&he.data===Ts){a=he,S=!0,er(!1);break}var w=h[k],G=o(w,k);O=Ft(he,c,y,null,w,G,k,s,r),c.items.set(G,O),y=O}P>0&&Ze(Qr())}if(!z){var C=bs;Ms(h,c,a,s,r,(C.f&$e)!==0,o)}i!==null&&(P===0?f?kt(f):f=vr(()=>i(a)):f!==null&&wt(f,()=>{f=null})),S&&er(!0),t()}),z&&(a=he)}function Ms(e,r,t,o,s,i,a){var Ee,Te,Le,be;var c=(s&ks)!==0,d=(s&(Er|Tr))!==0,v=e.length,f=r.items,b=r.first,E=b,h,P=null,S,_=[],y=[],O,k,w,G;if(c)for(G=0;G<v;G+=1)O=e[G],k=a(O,G),w=f.get(k),w!==void 0&&((Ee=w.a)==null||Ee.measure(),(S??(S=new Set)).add(w));for(G=0;G<v;G+=1){if(O=e[G],k=a(O,G),w=f.get(k),w===void 0){var C=E?E.e.nodes_start:t;P=Ft(C,r,P,P===null?r.first:P.next,O,k,G,o,s),f.set(k,P),_=[],y=[],E=P.next;continue}if(d&&Ws(w,O,G,s),w.e.f&$e&&(kt(w.e),c&&((Te=w.a)==null||Te.unfix(),(S??(S=new Set)).delete(w))),w!==E){if(h!==void 0&&h.has(w)){if(_.length<y.length){var D=y[0],A;P=D.prev;var I=_[0],U=_[_.length-1];for(A=0;A<_.length;A+=1)et(_[A],D,t);for(A=0;A<y.length;A+=1)h.delete(y[A]);ae(r,I.prev,U.next),ae(r,P,I),ae(r,U,D),E=D,P=U,G-=1,_=[],y=[]}else h.delete(w),et(w,E,t),ae(r,w.prev,w.next),ae(r,w,P===null?r.first:P.next),ae(r,P,w),P=w;continue}for(_=[],y=[];E!==null&&E.k!==k;)(i||!(E.e.f&$e))&&(h??(h=new Set)).add(E),y.push(E),E=E.next;if(E===null)continue;w=E}_.push(w),P=w,E=w.next}if(E!==null||h!==void 0){for(var Y=h===void 0?[]:yt(h);E!==null;)(i||!(E.e.f&$e))&&Y.push(E),E=E.next;var ee=Y.length;if(ee>0){var ve=s&Pt&&v===0?t:null;if(c){for(G=0;G<ee;G+=1)(Le=Y[G].a)==null||Le.measure();for(G=0;G<ee;G+=1)(be=Y[G].a)==null||be.fix()}Bs(r,Y,ve,f)}}c&&ws(()=>{var xe;if(S!==void 0)for(w of S)(xe=w.a)==null||xe.apply()}),Yr.first=r.first&&r.first.e,Yr.last=P&&P.e}function Ws(e,r,t,o){o&Er&&Xr(e.v,r),o&Tr?Xr(e.i,t):e.i=t}function Ft(e,r,t,o,s,i,a,c,d){var v=(d&Er)!==0,f=(d&Ps)===0,b=v?f?ys(s):Zr(s):s,E=d&Tr?Zr(a):a,h={i:E,v:b,k:i,a:null,e:null,prev:t,next:o};try{return h.e=vr(()=>c(e,b,E),z),h.e.prev=t&&t.e,h.e.next=o&&o.e,t===null?r.first=h:(t.next=h,t.e.next=h.e),o!==null&&(o.prev=h,o.e.prev=h.e),h}finally{}}function et(e,r,t){for(var o=e.next?e.next.e.nodes_start:t,s=r?r.e.nodes_start:t,i=e.e.nodes_start;i!==o;){var a=Gs(i);s.before(i),i=a}}function ae(e,r,t){r===null?e.first=t:(r.next=t,r.e.next=t&&t.e),t!==null&&(t.prev=r,t.e.prev=r&&r.e)}function wr(e){if(z){var r=!1,t=()=>{if(!r){if(r=!0,e.hasAttribute("value")){var o=e.value;H(e,"value",null),e.value=o}if(e.hasAttribute("checked")){var s=e.checked;H(e,"checked",null),e.checked=s}}};e.__on_r=t,Os(t),Cs()}}function H(e,r,t,o){var s=e.__attributes??(e.__attributes={});z&&(s[r]=e.getAttribute(r),r==="src"||r==="srcset"||r==="href"&&e.nodeName==="LINK")||s[r]!==(s[r]=t)&&(r==="style"&&"__styles"in e&&(e.__styles={}),r==="loading"&&(e[Rs]=t),t==null?e.removeAttribute(r):typeof t!="string"&&Ct(e).includes(r)?e[r]=t:e.setAttribute(r,t))}function Ue(e,r,t,o,s=!1,i=!1,a=!1){var c=r||{},d=e.tagName==="OPTION";for(var v in r)v in t||(t[v]=null);o!==void 0&&(t.class=t.class?t.class+" "+o:o);var f=Ct(e),b=e.__attributes??(e.__attributes={});for(const _ in t){let y=t[_];if(d&&_==="value"&&y==null){e.value=e.__value="",c[_]=y;continue}var E=c[_];if(y!==E){c[_]=y;var h=_[0]+_[1];if(h!=="$$"){if(h==="on"){const O={},k="$$"+_;let w=_.slice(2);var P=Is(w);if(Ds(w)&&(w=w.slice(0,-7),O.capture=!0),!P&&E){if(y!=null)continue;e.removeEventListener(w,c[k],O),c[k]=null}if(y!=null)if(P)e[`__${w}`]=y,Ce([w]);else{let G=function(C){c[_].call(this,C)};c[k]=Us(w,e,G,O)}else P&&(e[`__${w}`]=void 0)}else if(_==="style"&&y!=null)e.style.cssText=y+"";else if(_==="autofocus")Ls(e,!!y);else if(_==="__value"||_==="value"&&y!=null)e.value=e[_]=e.__value=y;else{var S=_;s||(S=xs(S)),y==null&&!i?(b[_]=null,e.removeAttribute(_)):f.includes(S)&&(i||typeof y!="string")?e[S]=y:typeof y!="function"&&(z&&(S==="src"||S==="href"||S==="srcset")||H(e,S,y))}_==="style"&&"__styles"in e&&(e.__styles={})}}}return c}var rt=new Map;function Ct(e){var r=rt.get(e.nodeName);if(r)return r;rt.set(e.nodeName,r=[]);for(var t,o=gr(e),s=Element.prototype;s!==o;){t=As(o);for(var i in t)t[i].set&&r.push(i);o=gr(o)}return r}function ze(e,r){var t=e.__className,o=Dt(r);z&&e.getAttribute("class")===o?e.__className=o:(t!==o||z&&e.getAttribute("class")!==o)&&(o===""?e.removeAttribute("class"):e.setAttribute("class",o),e.__className=o)}function Be(e,r){var t=e.__className,o=Dt(r);z&&e.className===o?e.__className=o:(t!==o||z&&e.className!==o)&&(r==null?e.removeAttribute("class"):e.className=o,e.__className=o)}function Dt(e){return e??""}function yr(e,r,t=r){var o=Tt();Rt(e,"input",s=>{var i=s?e.defaultValue:e.value;i=rr(e)?tr(i):i,t(i),o&&i!==(i=r())&&(e.value=i??"")}),(z&&e.defaultValue!==e.value||Ss(r)==null&&e.value)&&t(rr(e)?tr(e.value):e.value),Fs(()=>{var s=r();rr(e)&&s===tr(e.value)||e.type==="date"&&!s&&!e.value||s!==e.value&&(e.value=s??"")})}function rr(e){var r=e.type;return r==="number"||r==="range"}function tr(e){return e===""?null:+e}function Ut(e,r,t){if(e.multiple)return zs(e,r);for(var o of e.options){var s=Ge(o);if(js(s,r)){o.selected=!0;return}}(!t||r!==void 0)&&(e.selectedIndex=-1)}function Hs(e,r){Gt(()=>{var t=new MutationObserver(()=>{var o=e.__value;Ut(e,o)});return t.observe(e,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["value"]}),()=>{t.disconnect()}})}function Vs(e,r,t=r){var o=!0;Rt(e,"change",s=>{var i=s?"[selected]":":checked",a;if(e.multiple)a=[].map.call(e.querySelectorAll(i),Ge);else{var c=e.querySelector(i)??e.querySelector("option:not([disabled])");a=c&&Ge(c)}t(a)}),Gt(()=>{var s=r();if(Ut(e,s,o),o&&s===void 0){var i=e.querySelector(":checked");i!==null&&(s=Ge(i),t(s))}e.__value=s,o=!1}),Hs(e)}function zs(e,r){for(var t of e.options)t.selected=~r.indexOf(Ge(t))}function Ge(e){return"__value"in e?e.__value:e.value}const Ks=["Accumulation fase","Breakout","Consolidation","Distribution fase","Downtrend","Entry in price","Gain","Impulse down","Impulse up","Long","Loss","Momentum decreases","Pullback","Range high","Range low","Resistance","Reversal","Short","Support","Trend","Uptrend","Void"],Js=["FOMO","Fear of losing profits","Front runner","No plan","Stop loss didn't cover enough","No support/resistance level"];var Qs=M('<a target="_blank"> </a>'),Ys=M("<input>"),Xs=M('<div class="flex-column gap-1 svelte-1ywe1ky"><!> <img tabindex="-1" alt="Chart" class="svelte-1ywe1ky"></div>');function tt(e,r){se(r,!0);let t=B(r,"value",15),o=De(r,["$$slots","$$events","$$legacy","value","disabled"]),s=Z(()=>{var h;if(!t())return"";const f=t().match(new RegExp("(?<=https:\\/\\/www.tradingview.com\\/x\\/)(.*)(?=\\/)","g")),b=f==null?void 0:f[0];return`https://s3.tradingview.com/snapshots/${(h=b==null?void 0:b[0])==null?void 0:h.toLowerCase()}/${b}.png`});var i=Xs(),a=N(i);{var c=f=>{var b=Qs(),E=N(b,!0);x(b),j(()=>{H(b,"href",t()),Q(E,t())}),L(f,b)},d=f=>{var b=Ys();wr(b);let E;j(()=>E=Ue(b,E,{placeholder:"https://www.tradingview.com/x/HEUPOgtN/",disabled:r.disabled,...o},"svelte-1ywe1ky")),yr(b,t),L(f,b)};re(a,f=>{r.disabled?f(c):f(d,!1)})}var v=$(a,2);x(i),j(()=>H(v,"src",p(s))),L(e,i),oe()}var Zs=He('<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"><line x1="12" y1="2" x2="12" y2="6"></line><line x1="12" y1="18" x2="12" y2="22"></line><line x1="4.93" y1="4.93" x2="7.76" y2="7.76"></line><line x1="16.24" y1="16.24" x2="19.07" y2="19.07"></line><line x1="2" y1="12" x2="6" y2="12"></line><line x1="18" y1="12" x2="22" y2="12"></line><line x1="4.93" y1="19.07" x2="7.76" y2="16.24"></line><line x1="16.24" y1="7.76" x2="19.07" y2="4.93"></line></svg>');function eo(e,r){se(r,!1);let t=B(r,"size",12,"24"),o=B(r,"strokeWidth",8,2),s=B(r,"class",8,"");t()!=="100%"&&t(t().slice(-1)==="x"?t().slice(0,t().length-1)+"em":parseInt(t())+"px"),Ve();var i=Zs();j(()=>{H(i,"width",t()),H(i,"height",t()),H(i,"stroke-width",o()),ze(i,`feather feather-loader ${s()??""}`)}),L(e,i),oe()}var ro=He('<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect></svg>');function to(e,r){se(r,!1);let t=B(r,"size",12,"24"),o=B(r,"strokeWidth",8,2),s=B(r,"class",8,"");t()!=="100%"&&t(t().slice(-1)==="x"?t().slice(0,t().length-1)+"em":parseInt(t())+"px"),Ve();var i=ro();j(()=>{H(i,"width",t()),H(i,"height",t()),H(i,"stroke-width",o()),ze(i,`feather feather-square ${s()??""}`)}),L(e,i),oe()}var so=He('<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"><rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="9" y1="9" x2="15" y2="15"></line><line x1="15" y1="9" x2="9" y2="15"></line></svg>');function oo(e,r){se(r,!1);let t=B(r,"size",12,"24"),o=B(r,"strokeWidth",8,2),s=B(r,"class",8,"");t()!=="100%"&&t(t().slice(-1)==="x"?t().slice(0,t().length-1)+"em":parseInt(t())+"px"),Ve();var i=so();j(()=>{H(i,"width",t()),H(i,"height",t()),H(i,"stroke-width",o()),ze(i,`feather feather-x-square ${s()??""}`)}),L(e,i),oe()}var no=He('<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>');function io(e,r){se(r,!1);let t=B(r,"size",12,"24"),o=B(r,"strokeWidth",8,2),s=B(r,"class",8,"");t()!=="100%"&&t(t().slice(-1)==="x"?t().slice(0,t().length-1)+"em":parseInt(t())+"px"),Ve();var i=no();j(()=>{H(i,"width",t()),H(i,"height",t()),H(i,"stroke-width",o()),ze(i,`feather feather-x ${s()??""}`)}),L(e,i),oe()}var ao=(e,r,t)=>r(p(t)),co=M('<button class="svelte-1ave2xl"> </button>'),lo=M('<div class="suggestions svelte-1ave2xl"></div>'),uo=M("<div><input> <!></div>"),po=M('<span class="icon svelte-1ave2xl"><!></span>'),go=M('<div class="tag svelte-1ave2xl"> <!></div>'),ho=M('<div class="tag svelte-1ave2xl"> </div>'),mo=M('<!> <div class="flex-row flex-wrap gap-1"><!> <!></div>',1);function st(e,r){se(r,!0);let t=B(r,"value",15),o=De(r,["$$slots","$$events","$$legacy","value","suggestions","disabled"]),s=te(void 0),i=te(""),a=Z(()=>{var O,k;return typeof t()=="string"?(k=(O=t().split(".")||[])==null?void 0:O.map(w=>w.trim()))==null?void 0:k.filter(w=>w!==""):[]}),c=Z(()=>{var O;return p(i)?(O=r.suggestions)==null?void 0:O.filter(k=>k.toLowerCase().includes(p(i).toLowerCase())):[]});const d=O=>{t([...p(a),O].join(". ")),K(i,"")},v=O=>{t(p(a).toSpliced(O,1).join(". ")),K(i,"")},f=O=>{var k;O.key=="Enter"&&d(((k=p(c))==null?void 0:k.length)==1?p(c)[0]:p(i))};var b=mo(),E=le(b);{var h=O=>{var k=uo(),w=N(k);wr(w);let G;br(w,A=>K(s,A),()=>p(s));var C=$(w,2);{var D=A=>{var I=lo();Re(I,21,()=>p(c),We,(U,Y)=>{var ee=co();ee.__pointerdown=[ao,d,Y];var ve=N(ee,!0);x(ee),j(()=>Q(ve,p(Y))),L(U,ee)}),x(I),L(A,I)};re(C,A=>{p(c)&&A(D)})}x(k),j(()=>G=Ue(w,G,{type:"text",onkeyup:f,...o},"svelte-1ave2xl")),yr(w,()=>p(i),A=>K(i,A)),L(O,k)};re(E,O=>{r.disabled||O(h)})}var P=$(E,2),S=N(P);Re(S,17,()=>p(a),We,(O,k,w)=>{var G=go(),C=N(G),D=$(C);{var A=I=>{var U=po();U.__click=()=>v(w);var Y=N(U);io(Y,{}),x(U),L(I,U)};re(D,I=>{r.disabled||I(A)})}x(G),j(()=>Q(C,`${p(k)??""} `)),L(O,G)});var _=$(S,2);{var y=O=>{var k=ho(),w=N(k,!0);x(k),j(()=>Q(w,p(i))),L(O,k)};re(_,O=>{p(i)&&O(y)})}x(P),L(e,b),oe()}Ce(["pointerdown","click"]);var fo=M('<div class="flex-column gap-1 svelte-qf2jfx"><!> <!> <hr> <div class="flex-row gap-1 charts svelte-qf2jfx"><!> <hr class="vertical"> <!></div></div>'),_o=M('<dialog class="svelte-qf2jfx"><!></dialog>');function vo(e,r){se(r,!0);let t=te(void 0),o=te(void 0),s=te([]),i=te(h=>{}),a=Z(()=>p(o)==null||p(o).status=="closed"||p(o).status=="canceled");const c=()=>{var h;p(i)(p(o)),(h=p(t))==null||h.close()},d=(h,P,S)=>{var _;K(o,ue(h)),K(s,P),K(i,ue(S)),(_=p(t))==null||_.showModal()},v=h=>{var P;if(!(!p(a)||((P=document.activeElement)==null?void 0:P.tagName)=="INPUT")&&(h.code=="ArrowLeft"||h.code=="ArrowRight")){const S=p(s).findIndex(O=>{var k;return((k=p(o))==null?void 0:k.date)==O.date}),_=h.code=="ArrowLeft"?-1:1,y=Math.min(Math.max(S+_,0),p(s).length-1);K(o,ue(p(s)[y]))}};qs(()=>{var h;(h=p(t))==null||h.addEventListener("keydown",v)});var f=_o(),b=N(f);{var E=h=>{var P=dr(),S=le(P);Ns(S,()=>{var _;return(_=p(o))==null?void 0:_.date},_=>{var y=fo(),O=N(y);st(O,{suggestions:Ks,placeholder:"Plan of the trade",get disabled(){return p(a)},get value(){return p(o).plan},set value(D){p(o).plan=D}});var k=$(O,2);st(k,{suggestions:Js,placeholder:"Reflection of the trade",get value(){return p(o).reflection},set value(D){p(o).reflection=D}});var w=$(k,4),G=N(w);tt(G,{placeholder:"Higher time frame https://www.tradingview.com/x/HEUPOgtN/",get disabled(){return p(a)},get value(){return p(o).htfLink},set value(D){p(o).htfLink=D}});var C=$(G,4);tt(C,{placeholder:"Link https://www.tradingview.com/x/HEUPOgtN/",get disabled(){return p(a)},get value(){return p(o).link},set value(D){p(o).link=D}}),x(w),x(y),L(_,y)}),L(h,P)};re(b,h=>{p(o)&&h(E)})}return x(f),br(f,h=>K(t,h),()=>p(t)),At("close",f,c),L(e,f),oe({show:d})}const Eo=["created","open","closed","canceled"],To=["btc","eth","ada"],bo=["1min","3min","5min","15min"],hr={taker:5e-4,maker:0};class X{static combineChanges(r,t){const o=[...t];for(const s of r){const i=o.findIndex(a=>a.date===s.date);i!==-1?o[i]={...o[i],...s}:o.push({...X.getDefaultTrade(),...s})}return o.sort((s,i)=>i.date-s.date)}static getChanges(r,t){var i;const o=[],s=new Map;for(const a of t)s.set(a.date.toString(),a);for(const a of r){const c=s.get((i=a.date)==null?void 0:i.toString());if(c){const d={};for(const v in a)a[v]!==c[v]&&(d.date=a.date,d[v]=a[v]);Object.keys(d).length>0&&o.push(d)}else o.push(a)}return o}static getTotalPnl(r){return parseFloat(r.filter(t=>t.status!="canceled").reduce((t,o)=>t+o.pnl,0).toFixed(2))}static getAvarageAccount(r){return Math.round(r.filter(t=>t.status!="canceled").reduce((t,o)=>t+o.account,0)/r.length)}static getDefaultTrade(r=null){return{status:"created",date:Date.now(),link:"",htfLink:"",plan:"",reflection:"",symbol:(r==null?void 0:r.symbol)||"btc",timeFrame:(r==null?void 0:r.timeFrame)||"5min",longShort:"long",risk:0,riskRewardRatio:"",account:(r==null?void 0:r.account)||0,amount:0,entry:0,stopLoss:0,pnl:0}}static getRisk(r,t,o,s){if(!s||!o)return 0;const i=t/r,a=Math.abs(s/o-1);return X.round(i*a,4)}static getLongShort(r,t){return t<r?"long":"short"}static getPnL({longShort:r,entry:t,exit1:o,exit2:s}){if(!t)return 0;const i=X.getPnlExit(o,t,r),a=X.getPnlExit(s,t,r);return X.round(i+a,2)}static getPnlExit(r,t,o){if(!r||!t)return 0;const s=hr[r.type]*r.amount,i=r.amount-r.price/t*r.amount;return(o=="long"?i*-1:i)-s}static getRiskRewardRatio(r,t,o){const s=Math.abs(r-o),i=Math.abs(r-t),a=Math.min(s,i),c=Math.round(s/a*10)/10,d=Math.round(i/a*10)/10;return c+" / "+d}static round(r,t){return parseFloat(r.toFixed(t))}static getFee(r,t){return r*hr[t]}}var wo=M("<td><!></td>");function je(e,r){se(r,!0);let t=B(r,"value",15),o=B(r,"disabled",3,!0),s=De(r,["$$slots","$$events","$$legacy","value","disabled"]);const i=h=>{const P=h.currentTarget,S=document.createRange();S.selectNodeContents(P);const _=window.getSelection();_==null||_.removeAllRanges(),_==null||_.addRange(S)},a=h=>{t(Number(h.currentTarget.innerText));const P=new Event("change",{bubbles:!0});h.currentTarget.dispatchEvent(P)};var c=wo(),d=h=>!o()&&h.stopPropagation();let v;var f=N(c);{var b=h=>{var P=_e();j(()=>Q(P,`$${Math.round(t())??""}`)),L(h,P)},E=h=>{var P=_e();j(()=>Q(P,Math.round(t()))),L(h,P)};re(f,h=>{o()?h(b):h(E,!1)})}x(c),j(()=>v=Ue(c,v,{contenteditable:o()?!1:"plaintext-only",onfocus:i,onblur:a,ondblclick:d,...s},"svelte-9t7ht9")),L(e,c),oe()}const yo=(e,r,t,o)=>{r()||!t()||(t({...t(),type:t().type==="maker"?"taker":"maker"}),o(e))};var ko=(e,r)=>!r()&&e.stopPropagation(),Po=M('<td><!></td> <td class="fees svelte-1n94k6p"><!></td>',1);function ot(e,r){se(r,!0);let t=B(r,"exit",15),o=B(r,"disabled",3,!0),s=De(r,["$$slots","$$events","$$legacy","exit","disabled"]);const i=Z(()=>t()?X.round(hr[t().type]*(t().amount||0),2):0),a=Z(()=>t()?`${Math.round(t().amount)} / ${Math.round(t().price)}`:""),c=k=>{const w=new Event("change",{bubbles:!0});k.currentTarget.dispatchEvent(w)},d=k=>{const w=k.currentTarget,G=document.createRange();G.selectNodeContents(w);const C=window.getSelection();C==null||C.removeAllRanges(),C==null||C.addRange(G)},v=k=>{var D;var w=k.currentTarget.innerText.split("/"),G=Math.round(Number(w[0]))||0,C=Math.round(Number(w[1]))||0;t(C||G?{price:C,amount:G,type:((D=t())==null?void 0:D.type)||"maker"}:void 0),c(k)};var f=Po(),b=le(f),E=k=>!o()&&k.stopPropagation();let h;var P=N(b);{var S=k=>{var w=dr(),G=le(w);{var C=A=>{var I=_e();j(()=>Q(I,`$${p(a)??""}`)),L(A,I)},D=A=>{var I=_e();j(()=>Q(I,p(a))),L(A,I)};re(G,A=>{o()?A(C):A(D,!1)})}L(k,w)};re(P,k=>{t()&&k(S)})}x(b);var _=$(b,2);_.__click=[yo,o,t,c],_.__dblclick=[ko,o];var y=N(_);{var O=k=>{var w=dr(),G=le(w);{var C=A=>{oo(A,{size:"0.9x"})},D=A=>{to(A,{size:"0.9x"})};re(G,A=>{var I;((I=t())==null?void 0:I.type)==="taker"?A(C):A(D,!1)})}L(k,w)};re(y,k=>{t()&&k(O)})}x(_),j(()=>{var k;h=Ue(b,h,{contenteditable:o()?!1:"plaintext-only",onfocus:d,onblur:v,ondblclick:E,...s},"svelte-1n94k6p"),H(_,"title",`${(k=t())==null?void 0:k.type}: ${p(i)} `)}),L(e,f),oe()}Ce(["click","dblclick"]);var Go=M("<option> </option>"),Oo=M('<select class="svelte-khxry8"></select>'),Ro=M("<td><!></td>");function sr(e,r){let t=B(r,"value",15),o=B(r,"options",19,()=>[]),s=B(r,"disabled",3,!0),i=De(r,["$$slots","$$events","$$legacy","value","options","disabled"]);var a=Ro(),c=E=>!s()&&E.stopPropagation();let d;var v=N(a);{var f=E=>{var h=_e();j(()=>Q(h,t())),L(E,h)},b=E=>{var h=Oo();Re(h,21,o,We,(P,S)=>{var _=Go(),y={},O=N(_,!0);x(_),j(()=>{y!==(y=p(S))&&(_.value=(_.__value=p(S))==null?"":p(S)),Q(O,p(S))}),L(P,_)}),x(h),j(()=>h.disabled=s()),Vs(h,t),L(E,h)};re(v,E=>{s()?E(f):E(b,!1)})}x(a),j(()=>d=Ue(a,d,{ondblclick:c,...i},"svelte-khxry8")),L(e,a)}var Ao=(e,r,t)=>r()(St(p(t))),So=M("<tr><!><td> </td><!><!><td> </td><!><!><!><!><!><!><td> </td><td> </td></tr>");function Fo(e,r){se(r,!0);let t=B(r,"onchange",3,()=>{}),o=B(r,"ondblclick",3,()=>{}),s=te(ue(r.trade));Ot(()=>{K(s,ue(r.trade))});let i=Z(()=>p(s).status=="closed"||p(s).status=="canceled");const a=()=>{K(s,ue({...p(s),longShort:X.getLongShort(p(s).entry,p(s).stopLoss),risk:X.getRisk(p(s).account,p(s).amount,p(s).entry,p(s).stopLoss),pnl:X.getPnL(p(s))})),t()(St(p(s)))};var c=So();c.__dblclick=[Ao,o,s],c.__change=a;var d=N(c);sr(d,{options:Eo,disabled:!1,get value(){return p(s).status},set value(U){p(s).status=U}});var v=$(d),f=N(v,!0);j(()=>Q(f,new Date(Number(p(s).date)).toLocaleString("en-GB",{timeZone:"UTC",dateStyle:"short",timeStyle:"short"}))),x(v);var b=$(v);sr(b,{options:To,get disabled(){return p(i)},get value(){return p(s).symbol},set value(U){p(s).symbol=U}});var E=$(b);sr(E,{options:bo,get disabled(){return p(i)},get value(){return p(s).timeFrame},set value(U){p(s).timeFrame=U}});var h=$(E),P=N(h,!0);x(h);var S=$(h);je(S,{get disabled(){return p(i)},get value(){return p(s).account},set value(U){p(s).account=U}});var _=$(S);je(_,{get disabled(){return p(i)},get value(){return p(s).amount},set value(U){p(s).amount=U}});var y=$(_);je(y,{get disabled(){return p(i)},get value(){return p(s).entry},set value(U){p(s).entry=U}});var O=$(y);je(O,{get disabled(){return p(i)},get value(){return p(s).stopLoss},set value(U){p(s).stopLoss=U}});var k=$(O);ot(k,{get disabled(){return p(i)},get exit(){return p(s).exit1},set exit(U){p(s).exit1=U}});var w=$(k);ot(w,{get disabled(){return p(i)},get exit(){return p(s).exit2},set exit(U){p(s).exit2=U}});var G=$(w),C=N(G,!0);j(()=>Q(C,"%"+(p(s).risk*100).toFixed(2))),x(G);var D=$(G);const A=Z(()=>`pnl${Math.sign(p(s).pnl)??""}`);j(()=>H(D,"title",(100/p(s).account*p(s).pnl).toFixed(2)+"%"));var I=N(D);j(()=>Q(I,`$${p(s).pnl.toFixed(2)??""}`)),x(D),x(c),j(()=>{Be(c,`${p(s).status??""} svelte-xjkcez`),Be(h,p(s).longShort),Q(P,p(s).longShort),Be(D,p(A))}),At("blur",c,a),L(e,c),oe()}Ce(["dblclick","change"]);var Co=M('<tr class="summary svelte-1g3r0f0"><td> </td><td colspan="13"></td><td> </td></tr> <!>',1),Do=M('<table><thead><tr><th class="svelte-1g3r0f0">STATUS</th><th class="svelte-1g3r0f0">DATE</th><th class="svelte-1g3r0f0">SYMBOL</th><th class="svelte-1g3r0f0">TF</th><th class="svelte-1g3r0f0">L / S</th><th class="svelte-1g3r0f0">ACCOUNT</th><th class="svelte-1g3r0f0">AMOUNT</th><th class="svelte-1g3r0f0">ENTRY</th><th class="svelte-1g3r0f0">SL</th><th colspan="2" class="svelte-1g3r0f0">EXIT 1</th><th colspan="2" class="svelte-1g3r0f0">EXIT 2</th><th class="svelte-1g3r0f0">RISK</th><th class="svelte-1g3r0f0">PNL</th></tr></thead><tbody></tbody></table>');function Uo(e,r){se(r,!0);const t=(c,d)=>{r.onchange(r.trades.toSpliced(c,1,d))},o=Z(()=>{const c=new Map;return r.trades.forEach(d=>{var f;const v=new Date(d.date).toLocaleString("default",{month:"long"});c.has(v)||c.set(v,[]),(f=c.get(v))==null||f.push(d)}),c});var s=Do(),i=$(N(s));Re(i,21,()=>p(o),We,(c,d)=>{let v=()=>p(d)[0],f=()=>p(d)[1];var b=Co();const E=Z(()=>X.getTotalPnl(f())),h=Z(()=>100/X.getAvarageAccount(f())*p(E));var P=le(b),S=N(P),_=N(S);j(()=>Q(_,`${v().toUpperCase()??""} (${f().length??""})`)),x(S);var y=$(S,2);const O=Z(()=>`pnl${Math.sign(p(E))??""} svelte-1g3r0f0`);j(()=>H(y,"title",p(h).toFixed(2)+"%"));var k=N(y);x(y),x(P);var w=$(P,2);Re(w,19,f,G=>G.date,(G,C,D)=>{Fo(G,{get trade(){return p(C)},onchange:A=>t(p(D),A),get ondblclick(){return r.ondblclick}})}),j(()=>{Be(y,p(O)),Q(k,`$${p(E)??""}`)}),L(c,b)}),x(i),x(s),L(e,s),oe()}const or="trading",nr="trades.json",ir="database";class ar{static async getUser(r){try{const{data:t}=await r.rest.users.getAuthenticated();return console.log("Token is valid. Authenticated as:",t.login),t}catch(t){return console.error("An error occurred:",t),null}}static async getTrades(r,t){try{const{data:o}=await r.rest.repos.getContent({owner:t||"",repo:or,path:nr,ref:ir,headers:{"If-None-Match":""}});return"content"in o?JSON.parse(atob(o.content)):[]}catch(o){return console.error("An error occurred while fetching trades:",o),[]}}static async setTrades(r,t,o){try{const{data:s}=await r.rest.repos.getContent({owner:t||"",repo:or,path:nr,ref:ir}),i=Array.isArray(s)?s[0]:s;if("sha"in i){const a=btoa(JSON.stringify(o));return await r.rest.repos.createOrUpdateFileContents({owner:t,repo:or,path:nr,branch:ir,message:"Trades synced",content:a,sha:i.sha}),console.log("File updated successfully!"),!0}}catch(s){console.error("An error occurred while setting trades:",s)}return!1}}function Ke(){return typeof navigator=="object"&&"userAgent"in navigator?navigator.userAgent:typeof process=="object"&&process.version!==void 0?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}function kr(e,r,t,o){if(typeof t!="function")throw new Error("method for before hook must be a function");return o||(o={}),Array.isArray(r)?r.reverse().reduce((s,i)=>kr.bind(null,e,i,s,o),t)():Promise.resolve().then(()=>e.registry[r]?e.registry[r].reduce((s,i)=>i.hook.bind(null,s,o),t)():t(o))}function Lo(e,r,t,o){const s=o;e.registry[t]||(e.registry[t]=[]),r==="before"&&(o=(i,a)=>Promise.resolve().then(s.bind(null,a)).then(i.bind(null,a))),r==="after"&&(o=(i,a)=>{let c;return Promise.resolve().then(i.bind(null,a)).then(d=>(c=d,s(c,a))).then(()=>c)}),r==="error"&&(o=(i,a)=>Promise.resolve().then(i.bind(null,a)).catch(c=>s(c,a))),e.registry[t].push({hook:o,orig:s})}function xo(e,r,t){if(!e.registry[r])return;const o=e.registry[r].map(s=>s.orig).indexOf(t);o!==-1&&e.registry[r].splice(o,1)}const nt=Function.bind,it=nt.bind(nt);function Lt(e,r,t){const o=it(xo,null).apply(null,t?[r,t]:[r]);e.api={remove:o},e.remove=o,["before","error","after","wrap"].forEach(s=>{const i=t?[r,s,t]:[r,s];e[s]=e.api[s]=it(Lo,null).apply(null,i)})}function Io(){const e=Symbol("Singular"),r={registry:{}},t=kr.bind(null,r,e);return Lt(t,r,e),t}function jo(){const e={registry:{}},r=kr.bind(null,e);return Lt(r,e),r}const qo={Singular:Io,Collection:jo};var $o="0.0.0-development",No=`octokit-endpoint.js/${$o} ${Ke()}`,Bo={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":No},mediaType:{format:""}};function Mo(e){return e?Object.keys(e).reduce((r,t)=>(r[t.toLowerCase()]=e[t],r),{}):{}}function Wo(e){if(typeof e!="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]")return!1;const r=Object.getPrototypeOf(e);if(r===null)return!0;const t=Object.prototype.hasOwnProperty.call(r,"constructor")&&r.constructor;return typeof t=="function"&&t instanceof t&&Function.prototype.call(t)===Function.prototype.call(e)}function xt(e,r){const t=Object.assign({},e);return Object.keys(r).forEach(o=>{Wo(r[o])?o in e?t[o]=xt(e[o],r[o]):Object.assign(t,{[o]:r[o]}):Object.assign(t,{[o]:r[o]})}),t}function at(e){for(const r in e)e[r]===void 0&&delete e[r];return e}function mr(e,r,t){var s;if(typeof r=="string"){let[i,a]=r.split(" ");t=Object.assign(a?{method:i,url:a}:{url:i},t)}else t=Object.assign({},r);t.headers=Mo(t.headers),at(t),at(t.headers);const o=xt(e||{},t);return t.url==="/graphql"&&(e&&((s=e.mediaType.previews)!=null&&s.length)&&(o.mediaType.previews=e.mediaType.previews.filter(i=>!o.mediaType.previews.includes(i)).concat(o.mediaType.previews)),o.mediaType.previews=(o.mediaType.previews||[]).map(i=>i.replace(/-preview/,""))),o}function Ho(e,r){const t=/\?/.test(e)?"&":"?",o=Object.keys(r);return o.length===0?e:e+t+o.map(s=>s==="q"?"q="+r.q.split("+").map(encodeURIComponent).join("+"):`${s}=${encodeURIComponent(r[s])}`).join("&")}var Vo=/\{[^}]+\}/g;function zo(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function Ko(e){const r=e.match(Vo);return r?r.map(zo).reduce((t,o)=>t.concat(o),[]):[]}function ct(e,r){const t={__proto__:null};for(const o of Object.keys(e))r.indexOf(o)===-1&&(t[o]=e[o]);return t}function It(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(r){return/%[0-9A-Fa-f]/.test(r)||(r=encodeURI(r).replace(/%5B/g,"[").replace(/%5D/g,"]")),r}).join("")}function me(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(r){return"%"+r.charCodeAt(0).toString(16).toUpperCase()})}function ke(e,r,t){return r=e==="+"||e==="#"?It(r):me(r),t?me(t)+"="+r:r}function de(e){return e!=null}function cr(e){return e===";"||e==="&"||e==="?"}function Jo(e,r,t,o){var s=e[t],i=[];if(de(s)&&s!=="")if(typeof s=="string"||typeof s=="number"||typeof s=="boolean")s=s.toString(),o&&o!=="*"&&(s=s.substring(0,parseInt(o,10))),i.push(ke(r,s,cr(r)?t:""));else if(o==="*")Array.isArray(s)?s.filter(de).forEach(function(a){i.push(ke(r,a,cr(r)?t:""))}):Object.keys(s).forEach(function(a){de(s[a])&&i.push(ke(r,s[a],a))});else{const a=[];Array.isArray(s)?s.filter(de).forEach(function(c){a.push(ke(r,c))}):Object.keys(s).forEach(function(c){de(s[c])&&(a.push(me(c)),a.push(ke(r,s[c].toString())))}),cr(r)?i.push(me(t)+"="+a.join(",")):a.length!==0&&i.push(a.join(","))}else r===";"?de(s)&&i.push(me(t)):s===""&&(r==="&"||r==="?")?i.push(me(t)+"="):s===""&&i.push("");return i}function Qo(e){return{expand:Yo.bind(null,e)}}function Yo(e,r){var t=["+","#",".","/",";","?","&"];return e=e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(o,s,i){if(s){let c="";const d=[];if(t.indexOf(s.charAt(0))!==-1&&(c=s.charAt(0),s=s.substr(1)),s.split(/,/g).forEach(function(v){var f=/([^:\*]*)(?::(\d+)|(\*))?/.exec(v);d.push(Jo(r,c,f[1],f[2]||f[3]))}),c&&c!=="+"){var a=",";return c==="?"?a="&":c!=="#"&&(a=c),(d.length!==0?c:"")+d.join(a)}else return d.join(",")}else return It(i)}),e==="/"?e:e.replace(/\/$/,"")}function jt(e){var f;let r=e.method.toUpperCase(),t=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),o=Object.assign({},e.headers),s,i=ct(e,["method","baseUrl","url","headers","request","mediaType"]);const a=Ko(t);t=Qo(t).expand(i),/^http/.test(t)||(t=e.baseUrl+t);const c=Object.keys(e).filter(b=>a.includes(b)).concat("baseUrl"),d=ct(i,c);if(!/application\/octet-stream/i.test(o.accept)&&(e.mediaType.format&&(o.accept=o.accept.split(/,/).map(b=>b.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`)).join(",")),t.endsWith("/graphql")&&(f=e.mediaType.previews)!=null&&f.length)){const b=o.accept.match(/[\w-]+(?=-preview)/g)||[];o.accept=b.concat(e.mediaType.previews).map(E=>{const h=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${E}-preview${h}`}).join(",")}return["GET","HEAD"].includes(r)?t=Ho(t,d):"data"in d?s=d.data:Object.keys(d).length&&(s=d),!o["content-type"]&&typeof s<"u"&&(o["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(r)&&typeof s>"u"&&(s=""),Object.assign({method:r,url:t,headers:o},typeof s<"u"?{body:s}:null,e.request?{request:e.request}:null)}function Xo(e,r,t){return jt(mr(e,r,t))}function qt(e,r){const t=mr(e,r),o=Xo.bind(null,t);return Object.assign(o,{DEFAULTS:t,defaults:qt.bind(null,t),merge:mr.bind(null,t),parse:jt})}var Zo=qt(null,Bo),lt=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function en(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var ge={},ut;function rn(){if(ut)return ge;ut=1;const e=function(){};e.prototype=Object.create(null);const r=/; *([!#$%&'*+.^\w`|~-]+)=("(?:[\v\u0020\u0021\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\v\u0020-\u00ff])*"|[!#$%&'*+.^\w`|~-]+) */gu,t=/\\([\v\u0020-\u00ff])/gu,o=/^[!#$%&'*+.^\w|~-]+\/[!#$%&'*+.^\w|~-]+$/u,s={type:"",parameters:new e};Object.freeze(s.parameters),Object.freeze(s);function i(c){if(typeof c!="string")throw new TypeError("argument header is required and must be a string");let d=c.indexOf(";");const v=d!==-1?c.slice(0,d).trim():c.trim();if(o.test(v)===!1)throw new TypeError("invalid media type");const f={type:v.toLowerCase(),parameters:new e};if(d===-1)return f;let b,E,h;for(r.lastIndex=d;E=r.exec(c);){if(E.index!==d)throw new TypeError("invalid parameter format");d+=E[0].length,b=E[1].toLowerCase(),h=E[2],h[0]==='"'&&(h=h.slice(1,h.length-1),t.test(h)&&(h=h.replace(t,"$1"))),f.parameters[b]=h}if(d!==c.length)throw new TypeError("invalid parameter format");return f}function a(c){if(typeof c!="string")return s;let d=c.indexOf(";");const v=d!==-1?c.slice(0,d).trim():c.trim();if(o.test(v)===!1)return s;const f={type:v.toLowerCase(),parameters:new e};if(d===-1)return f;let b,E,h;for(r.lastIndex=d;E=r.exec(c);){if(E.index!==d)return s;d+=E[0].length,b=E[1].toLowerCase(),h=E[2],h[0]==='"'&&(h=h.slice(1,h.length-1),t.test(h)&&(h=h.replace(t,"$1"))),f.parameters[b]=h}return d!==c.length?s:f}return ge.default={parse:i,safeParse:a},ge.parse=i,ge.safeParse=a,ge.defaultContentType=s,ge}var tn=rn();class Pe extends Error{constructor(t,o,s){super(t);W(this,"name");W(this,"status");W(this,"request");W(this,"response");this.name="HttpError",this.status=Number.parseInt(o),Number.isNaN(this.status)&&(this.status=0),"response"in s&&(this.response=s.response);const i=Object.assign({},s.request);s.request.headers.authorization&&(i.headers=Object.assign({},s.request.headers,{authorization:s.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),i.url=i.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=i}}var sn="0.0.0-development",on={headers:{"user-agent":`octokit-request.js/${sn} ${Ke()}`}};function nn(e){if(typeof e!="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]")return!1;const r=Object.getPrototypeOf(e);if(r===null)return!0;const t=Object.prototype.hasOwnProperty.call(r,"constructor")&&r.constructor;return typeof t=="function"&&t instanceof t&&Function.prototype.call(t)===Function.prototype.call(e)}async function pt(e){var b,E,h,P,S;const r=((b=e.request)==null?void 0:b.fetch)||globalThis.fetch;if(!r)throw new Error("fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing");const t=((E=e.request)==null?void 0:E.log)||console,o=((h=e.request)==null?void 0:h.parseSuccessResponseBody)!==!1,s=nn(e.body)||Array.isArray(e.body)?JSON.stringify(e.body):e.body,i=Object.fromEntries(Object.entries(e.headers).map(([_,y])=>[_,String(y)]));let a;try{a=await r(e.url,{method:e.method,body:s,redirect:(P=e.request)==null?void 0:P.redirect,headers:i,signal:(S=e.request)==null?void 0:S.signal,...e.body&&{duplex:"half"}})}catch(_){let y="Unknown Error";if(_ instanceof Error){if(_.name==="AbortError")throw _.status=500,_;y=_.message,_.name==="TypeError"&&"cause"in _&&(_.cause instanceof Error?y=_.cause.message:typeof _.cause=="string"&&(y=_.cause))}const O=new Pe(y,500,{request:e});throw O.cause=_,O}const c=a.status,d=a.url,v={};for(const[_,y]of a.headers)v[_]=y;const f={url:d,status:c,headers:v,data:""};if("deprecation"in v){const _=v.link&&v.link.match(/<([^>]+)>; rel="deprecation"/),y=_&&_.pop();t.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${v.sunset}${y?`. See ${y}`:""}`)}if(c===204||c===205)return f;if(e.method==="HEAD"){if(c<400)return f;throw new Pe(a.statusText,c,{response:f,request:e})}if(c===304)throw f.data=await lr(a),new Pe("Not modified",c,{response:f,request:e});if(c>=400)throw f.data=await lr(a),new Pe(an(f.data),c,{response:f,request:e});return f.data=o?await lr(a):a.body,f}async function lr(e){var o;const r=e.headers.get("content-type");if(!r)return e.text().catch(()=>"");const t=tn.safeParse(r);if(t.type==="application/json"){let s="";try{return s=await e.text(),JSON.parse(s)}catch{return s}}else return t.type.startsWith("text/")||((o=t.parameters.charset)==null?void 0:o.toLowerCase())==="utf-8"?e.text().catch(()=>""):e.arrayBuffer().catch(()=>new ArrayBuffer(0))}function an(e){if(typeof e=="string")return e;if(e instanceof ArrayBuffer)return"Unknown error";if("message"in e){const r="documentation_url"in e?` - ${e.documentation_url}`:"";return Array.isArray(e.errors)?`${e.message}: ${e.errors.map(t=>JSON.stringify(t)).join(", ")}${r}`:`${e.message}${r}`}return`Unknown error: ${JSON.stringify(e)}`}function fr(e,r){const t=e.defaults(r);return Object.assign(function(s,i){const a=t.merge(s,i);if(!a.request||!a.request.hook)return pt(t.parse(a));const c=(d,v)=>pt(t.parse(t.merge(d,v)));return Object.assign(c,{endpoint:t,defaults:fr.bind(null,t)}),a.request.hook(c,a)},{endpoint:t,defaults:fr.bind(null,t)})}var _r=fr(Zo,on),cn="0.0.0-development";function ln(e){return`Request failed due to following response errors:
`+e.errors.map(r=>` - ${r.message}`).join(`
`)}var un=class extends Error{constructor(r,t,o){super(ln(o));W(this,"name","GraphqlResponseError");W(this,"errors");W(this,"data");this.request=r,this.headers=t,this.response=o,this.errors=o.errors,this.data=o.data,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},pn=["method","baseUrl","url","headers","request","query","mediaType"],dn=["query","method","url"],dt=/\/api\/v3\/?$/;function gn(e,r,t){if(t){if(typeof r=="string"&&"query"in t)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(const a in t)if(dn.includes(a))return Promise.reject(new Error(`[@octokit/graphql] "${a}" cannot be used as variable name`))}const o=typeof r=="string"?Object.assign({query:r},t):r,s=Object.keys(o).reduce((a,c)=>pn.includes(c)?(a[c]=o[c],a):(a.variables||(a.variables={}),a.variables[c]=o[c],a),{}),i=o.baseUrl||e.endpoint.DEFAULTS.baseUrl;return dt.test(i)&&(s.url=i.replace(dt,"/api/graphql")),e(s).then(a=>{if(a.data.errors){const c={};for(const d of Object.keys(a.headers))c[d]=a.headers[d];throw new un(s,c,a.data)}return a.data.data})}function Pr(e,r){const t=e.defaults(r);return Object.assign((s,i)=>gn(t,s,i),{defaults:Pr.bind(null,t),endpoint:t.endpoint})}Pr(_r,{headers:{"user-agent":`octokit-graphql.js/${cn} ${Ke()}`},method:"POST",url:"/graphql"});function hn(e){return Pr(e,{method:"POST",url:"/graphql"})}var mn=/^v1\./,fn=/^ghs_/,_n=/^ghu_/;async function vn(e){const r=e.split(/\./).length===3,t=mn.test(e)||fn.test(e),o=_n.test(e);return{type:"token",token:e,tokenType:r?"app":t?"installation":o?"user-to-server":"oauth"}}function En(e){return e.split(/\./).length===3?`bearer ${e}`:`token ${e}`}async function Tn(e,r,t,o){const s=r.endpoint.merge(t,o);return s.headers.authorization=En(e),r(s)}var bn=function(r){if(!r)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if(typeof r!="string")throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return r=r.replace(/^(token|bearer) +/i,""),Object.assign(vn.bind(null,r),{hook:Tn.bind(null,r)})};const $t="6.1.2",gt=()=>{},wn=console.warn.bind(console),yn=console.error.bind(console),ht=`octokit-core.js/${$t} ${Ke()}`;var qe;let kn=(qe=class{constructor(r={}){W(this,"request");W(this,"graphql");W(this,"log");W(this,"hook");W(this,"auth");const t=new qo.Collection,o={baseUrl:_r.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},r.request,{hook:t.bind(null,"request")}),mediaType:{previews:[],format:""}};if(o.headers["user-agent"]=r.userAgent?`${r.userAgent} ${ht}`:ht,r.baseUrl&&(o.baseUrl=r.baseUrl),r.previews&&(o.mediaType.previews=r.previews),r.timeZone&&(o.headers["time-zone"]=r.timeZone),this.request=_r.defaults(o),this.graphql=hn(this.request).defaults(o),this.log=Object.assign({debug:gt,info:gt,warn:wn,error:yn},r.log),this.hook=t,r.authStrategy){const{authStrategy:i,...a}=r,c=i(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:a},r.auth));t.wrap("request",c.hook),this.auth=c}else if(!r.auth)this.auth=async()=>({type:"unauthenticated"});else{const i=bn(r.auth);t.wrap("request",i.hook),this.auth=i}const s=this.constructor;for(let i=0;i<s.plugins.length;++i)Object.assign(this,s.plugins[i](this,r))}static defaults(r){return class extends this{constructor(...o){const s=o[0]||{};if(typeof r=="function"){super(r(s));return}super(Object.assign({},r,s,s.userAgent&&r.userAgent?{userAgent:`${s.userAgent} ${r.userAgent}`}:null))}}}static plugin(...r){var s;const t=this.plugins;return s=class extends this{},W(s,"plugins",t.concat(r.filter(i=>!t.includes(i)))),s}},W(qe,"VERSION",$t),W(qe,"plugins",[]),qe);var Pn="0.0.0-development";function Gn(e){if(!e.data)return{...e,data:[]};if(!("total_count"in e.data&&!("url"in e.data)))return e;const t=e.data.incomplete_results,o=e.data.repository_selection,s=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;const i=Object.keys(e.data)[0],a=e.data[i];return e.data=a,typeof t<"u"&&(e.data.incomplete_results=t),typeof o<"u"&&(e.data.repository_selection=o),e.data.total_count=s,e}function Gr(e,r,t){const o=typeof r=="function"?r.endpoint(t):e.request.endpoint(r,t),s=typeof r=="function"?r:e.request,i=o.method,a=o.headers;let c=o.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!c)return{done:!0};try{const d=await s({method:i,url:c,headers:a}),v=Gn(d);return c=((v.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:v}}catch(d){if(d.status!==409)throw d;return c="",{value:{status:200,headers:{},data:[]}}}}})}}function Nt(e,r,t,o){return typeof t=="function"&&(o=t,t=void 0),Bt(e,[],Gr(e,r,t)[Symbol.asyncIterator](),o)}function Bt(e,r,t,o){return t.next().then(s=>{if(s.done)return r;let i=!1;function a(){i=!0}return r=r.concat(o?o(s.value,a):s.value.data),i?r:Bt(e,r,t,o)})}Object.assign(Nt,{iterator:Gr});function Mt(e){return{paginate:Object.assign(Nt.bind(null,e),{iterator:Gr.bind(null,e)})}}Mt.VERSION=Pn;var On=(e,r)=>`The cursor at "${e.join(",")}" did not change its value "${r}" after a page transition. Please make sure your that your query is set up correctly.`,Rn=class extends Error{constructor(r,t){super(On(r.pathInQuery,t));W(this,"name","MissingCursorChangeError");this.pageInfo=r,this.cursorValue=t,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},An=class extends Error{constructor(r){super(`No pageInfo property found in response. Please make sure to specify the pageInfo in your query. Response-Data: ${JSON.stringify(r,null,2)}`);W(this,"name","MissingPageInfo");this.response=r,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},Sn=e=>Object.prototype.toString.call(e)==="[object Object]";function Wt(e){const r=Ht(e,"pageInfo");if(r.length===0)throw new An(e);return r}var Ht=(e,r,t=[])=>{for(const o of Object.keys(e)){const s=[...t,o],i=e[o];if(Sn(i)){if(i.hasOwnProperty(r))return s;const a=Ht(i,r,s);if(a.length>0)return a}}return[]},Oe=(e,r)=>r.reduce((t,o)=>t[o],e),ur=(e,r,t)=>{const o=r[r.length-1],s=[...r].slice(0,-1),i=Oe(e,s);typeof t=="function"?i[o]=t(i[o]):i[o]=t},Fn=e=>{const r=Wt(e);return{pathInQuery:r,pageInfo:Oe(e,[...r,"pageInfo"])}},Vt=e=>e.hasOwnProperty("hasNextPage"),Cn=e=>Vt(e)?e.endCursor:e.startCursor,Dn=e=>Vt(e)?e.hasNextPage:e.hasPreviousPage,zt=e=>(r,t={})=>{let o=!0,s={...t};return{[Symbol.asyncIterator]:()=>({async next(){if(!o)return{done:!0,value:{}};const i=await e.graphql(r,s),a=Fn(i),c=Cn(a.pageInfo);if(o=Dn(a.pageInfo),o&&c===s.cursor)throw new Rn(a,c);return s={...s,cursor:c},{done:!1,value:i}}})}},Un=(e,r)=>{if(Object.keys(e).length===0)return Object.assign(e,r);const t=Wt(e),o=[...t,"nodes"],s=Oe(r,o);s&&ur(e,o,d=>[...d,...s]);const i=[...t,"edges"],a=Oe(r,i);a&&ur(e,i,d=>[...d,...a]);const c=[...t,"pageInfo"];return ur(e,c,Oe(r,c)),e},Ln=e=>{const r=zt(e);return async(t,o={})=>{let s={};for await(const i of r(t,o))s=Un(s,i);return s}};function xn(e){return{graphql:Object.assign(e.graphql,{paginate:Object.assign(Ln(e),{iterator:zt(e)})})}}const In="13.2.6",jn={actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createEnvironmentVariable:["POST /repos/{owner}/{repo}/environments/{environment_name}/variables"],createOrUpdateEnvironmentSecret:["PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createOrgVariable:["POST /orgs/{org}/actions/variables"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createRepoVariable:["POST /repos/{owner}/{repo}/actions/variables"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],deleteEnvironmentVariable:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteRepoVariable:["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],forceCancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"],generateRunnerJitconfigForOrg:["POST /orgs/{org}/actions/runners/generate-jitconfig"],generateRunnerJitconfigForRepo:["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getCustomOidcSubClaimForRepo:["GET /repos/{owner}/{repo}/actions/oidc/customization/sub"],getEnvironmentPublicKey:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],getEnvironmentVariable:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getOrgVariable:["GET /orgs/{org}/actions/variables/{name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getRepoVariable:["GET /repos/{owner}/{repo}/actions/variables/{name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets"],listEnvironmentVariables:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listOrgVariables:["GET /orgs/{org}/actions/variables"],listRepoOrganizationSecrets:["GET /repos/{owner}/{repo}/actions/organization-secrets"],listRepoOrganizationVariables:["GET /repos/{owner}/{repo}/actions/organization-variables"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoVariables:["GET /repos/{owner}/{repo}/actions/variables"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedReposForOrgVariable:["GET /orgs/{org}/actions/variables/{name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],reviewCustomGatesForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setCustomOidcSubClaimForRepo:["PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedReposForOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"],updateEnvironmentVariable:["PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],updateOrgVariable:["PATCH /orgs/{org}/actions/variables/{name}"],updateRepoVariable:["PATCH /repos/{owner}/{repo}/actions/variables/{name}"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsDone:["DELETE /notifications/threads/{thread_id}"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallationRequestsForAuthenticatedApp:["GET /app/installation-requests"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getCodeqlDatabase:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getDefaultSetup:["GET /repos/{owner}/{repo}/code-scanning/default-setup"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listCodeqlDatabases:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],updateDefaultSetup:["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],checkPermissionsForDevcontainer:["GET /repos/{owner}/{repo}/codespaces/permissions_check"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getCodespacesForUserInOrg:["GET /orgs/{org}/members/{username}/codespaces"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getOrgPublicKey:["GET /orgs/{org}/codespaces/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listOrgSecrets:["GET /orgs/{org}/codespaces/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],preFlightWithRepoForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/new"],publishForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/publish"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},copilot:{addCopilotSeatsForTeams:["POST /orgs/{org}/copilot/billing/selected_teams"],addCopilotSeatsForUsers:["POST /orgs/{org}/copilot/billing/selected_users"],cancelCopilotSeatAssignmentForTeams:["DELETE /orgs/{org}/copilot/billing/selected_teams"],cancelCopilotSeatAssignmentForUsers:["DELETE /orgs/{org}/copilot/billing/selected_users"],getCopilotOrganizationDetails:["GET /orgs/{org}/copilot/billing"],getCopilotSeatDetailsForUser:["GET /orgs/{org}/members/{username}/copilot"],listCopilotSeats:["GET /orgs/{org}/copilot/billing/seats"],usageMetricsForEnterprise:["GET /enterprises/{enterprise}/copilot/usage"],usageMetricsForOrg:["GET /orgs/{org}/copilot/usage"],usageMetricsForTeam:["GET /orgs/{org}/team/{team_slug}/copilot/usage"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getAlert:["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/dependabot/alerts"],listAlertsForOrg:["GET /orgs/{org}/dependabot/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/dependabot/alerts"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],updateAlert:["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],exportSbom:["GET /repos/{owner}/{repo}/dependency-graph/sbom"]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],checkUserCanBeAssignedToIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getAllVersions:["GET /versions"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"]},oidc:{getOidcCustomSubTemplateForOrg:["GET /orgs/{org}/actions/oidc/customization/sub"],updateOidcCustomSubTemplateForOrg:["PUT /orgs/{org}/actions/oidc/customization/sub"]},orgs:{addSecurityManagerTeam:["PUT /orgs/{org}/security-managers/teams/{team_slug}"],assignTeamToOrgRole:["PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],assignUserToOrgRole:["PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createCustomOrganizationRole:["POST /orgs/{org}/organization-roles"],createInvitation:["POST /orgs/{org}/invitations"],createOrUpdateCustomProperties:["PATCH /orgs/{org}/properties/schema"],createOrUpdateCustomPropertiesValuesForRepos:["PATCH /orgs/{org}/properties/values"],createOrUpdateCustomProperty:["PUT /orgs/{org}/properties/schema/{custom_property_name}"],createWebhook:["POST /orgs/{org}/hooks"],delete:["DELETE /orgs/{org}"],deleteCustomOrganizationRole:["DELETE /orgs/{org}/organization-roles/{role_id}"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],enableOrDisableSecurityProductOnAllOrgRepos:["POST /orgs/{org}/{security_product}/{enablement}"],get:["GET /orgs/{org}"],getAllCustomProperties:["GET /orgs/{org}/properties/schema"],getCustomProperty:["GET /orgs/{org}/properties/schema/{custom_property_name}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getOrgRole:["GET /orgs/{org}/organization-roles/{role_id}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listCustomPropertiesValuesForRepos:["GET /orgs/{org}/properties/values"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOrgRoleTeams:["GET /orgs/{org}/organization-roles/{role_id}/teams"],listOrgRoleUsers:["GET /orgs/{org}/organization-roles/{role_id}/users"],listOrgRoles:["GET /orgs/{org}/organization-roles"],listOrganizationFineGrainedPermissions:["GET /orgs/{org}/organization-fine-grained-permissions"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPatGrantRepositories:["GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"],listPatGrantRequestRepositories:["GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"],listPatGrantRequests:["GET /orgs/{org}/personal-access-token-requests"],listPatGrants:["GET /orgs/{org}/personal-access-tokens"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listSecurityManagerTeams:["GET /orgs/{org}/security-managers"],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],patchCustomOrganizationRole:["PATCH /orgs/{org}/organization-roles/{role_id}"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeCustomProperty:["DELETE /orgs/{org}/properties/schema/{custom_property_name}"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],removeSecurityManagerTeam:["DELETE /orgs/{org}/security-managers/teams/{team_slug}"],reviewPatGrantRequest:["POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"],reviewPatGrantRequestsInBulk:["POST /orgs/{org}/personal-access-token-requests"],revokeAllOrgRolesTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}"],revokeAllOrgRolesUser:["DELETE /orgs/{org}/organization-roles/users/{username}"],revokeOrgRoleTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],revokeOrgRoleUser:["DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updatePatAccess:["POST /orgs/{org}/personal-access-tokens/{pat_id}"],updatePatAccesses:["POST /orgs/{org}/personal-access-tokens"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listDockerMigrationConflictingPackagesForAuthenticatedUser:["GET /user/docker/conflicts"],listDockerMigrationConflictingPackagesForOrganization:["GET /orgs/{org}/docker/conflicts"],listDockerMigrationConflictingPackagesForUser:["GET /users/{username}/docker/conflicts"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}"],createCard:["POST /projects/columns/{column_id}/cards"],createColumn:["POST /projects/{project_id}/columns"],createForAuthenticatedUser:["POST /user/projects"],createForOrg:["POST /orgs/{org}/projects"],createForRepo:["POST /repos/{owner}/{repo}/projects"],delete:["DELETE /projects/{project_id}"],deleteCard:["DELETE /projects/columns/cards/{card_id}"],deleteColumn:["DELETE /projects/columns/{column_id}"],get:["GET /projects/{project_id}"],getCard:["GET /projects/columns/cards/{card_id}"],getColumn:["GET /projects/columns/{column_id}"],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission"],listCards:["GET /projects/columns/{column_id}/cards"],listCollaborators:["GET /projects/{project_id}/collaborators"],listColumns:["GET /projects/{project_id}/columns"],listForOrg:["GET /orgs/{org}/projects"],listForRepo:["GET /repos/{owner}/{repo}/projects"],listForUser:["GET /users/{username}/projects"],moveCard:["POST /projects/columns/cards/{card_id}/moves"],moveColumn:["POST /projects/columns/{column_id}/moves"],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}"],update:["PATCH /projects/{project_id}"],updateCard:["PATCH /projects/columns/cards/{card_id}"],updateColumn:["PATCH /projects/columns/{column_id}"]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],cancelPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"],checkAutomatedSecurityFixes:["GET /repos/{owner}/{repo}/automated-security-fixes"],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkPrivateVulnerabilityReporting:["GET /repos/{owner}/{repo}/private-vulnerability-reporting"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentBranchPolicy:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],createDeploymentProtectionRule:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateCustomPropertiesValues:["PATCH /repos/{owner}/{repo}/properties/values"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createOrgRuleset:["POST /orgs/{org}/rulesets"],createPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createRepoRuleset:["POST /repos/{owner}/{repo}/rulesets"],createTagProtection:["POST /repos/{owner}/{repo}/tags/protection"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDeploymentBranchPolicy:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deleteOrgRuleset:["DELETE /orgs/{org}/rulesets/{ruleset_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteRepoRuleset:["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],deleteTagProtection:["DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableDeploymentProtectionRule:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],disablePrivateVulnerabilityReporting:["DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enablePrivateVulnerabilityReporting:["PUT /repos/{owner}/{repo}/private-vulnerability-reporting"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllDeploymentProtectionRules:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getBranchRules:["GET /repos/{owner}/{repo}/rules/branches/{branch}"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getCustomDeploymentProtectionRule:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],getCustomPropertiesValues:["GET /repos/{owner}/{repo}/properties/values"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentBranchPolicy:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getOrgRuleSuite:["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],getOrgRuleSuites:["GET /orgs/{org}/rulesets/rule-suites"],getOrgRuleset:["GET /orgs/{org}/rulesets/{ruleset_id}"],getOrgRulesets:["GET /orgs/{org}/rulesets"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesDeployment:["GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getRepoRuleSuite:["GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"],getRepoRuleSuites:["GET /repos/{owner}/{repo}/rulesets/rule-suites"],getRepoRuleset:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],getRepoRulesets:["GET /repos/{owner}/{repo}/rulesets"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listActivities:["GET /repos/{owner}/{repo}/activity"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listCustomDeploymentRuleIntegrations:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentBranchPolicies:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTagProtection:["GET /repos/{owner}/{repo}/tags/protection"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateDeploymentBranchPolicy:["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateOrgRuleset:["PUT /orgs/{org}/rulesets/{ruleset_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateRepoRuleset:["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},securityAdvisories:{createFork:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"],createPrivateVulnerabilityReport:["POST /repos/{owner}/{repo}/security-advisories/reports"],createRepositoryAdvisory:["POST /repos/{owner}/{repo}/security-advisories"],createRepositoryAdvisoryCveRequest:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"],getGlobalAdvisory:["GET /advisories/{ghsa_id}"],getRepositoryAdvisory:["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],listGlobalAdvisories:["GET /advisories"],listOrgRepositoryAdvisories:["GET /orgs/{org}/security-advisories"],listRepositoryAdvisories:["GET /repos/{owner}/{repo}/security-advisories"],updateRepositoryAdvisory:["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects"],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],addSocialAccountForAuthenticatedUser:["POST /user/social_accounts"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],createSshSigningKeyForAuthenticatedUser:["POST /user/ssh_signing_keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],deleteSocialAccountForAuthenticatedUser:["DELETE /user/social_accounts"],deleteSshSigningKeyForAuthenticatedUser:["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],getSshSigningKeyForAuthenticatedUser:["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],listSocialAccountsForAuthenticatedUser:["GET /user/social_accounts"],listSocialAccountsForUser:["GET /users/{username}/social_accounts"],listSshSigningKeysForAuthenticatedUser:["GET /user/ssh_signing_keys"],listSshSigningKeysForUser:["GET /users/{username}/ssh_signing_keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};var qn=jn;const pe=new Map;for(const[e,r]of Object.entries(qn))for(const[t,o]of Object.entries(r)){const[s,i,a]=o,[c,d]=s.split(/ /),v=Object.assign({method:c,url:d},i);pe.has(e)||pe.set(e,new Map),pe.get(e).set(t,{scope:e,methodName:t,endpointDefaults:v,decorations:a})}const $n={has({scope:e},r){return pe.get(e).has(r)},getOwnPropertyDescriptor(e,r){return{value:this.get(e,r),configurable:!0,writable:!0,enumerable:!0}},defineProperty(e,r,t){return Object.defineProperty(e.cache,r,t),!0},deleteProperty(e,r){return delete e.cache[r],!0},ownKeys({scope:e}){return[...pe.get(e).keys()]},set(e,r,t){return e.cache[r]=t},get({octokit:e,scope:r,cache:t},o){if(t[o])return t[o];const s=pe.get(r).get(o);if(!s)return;const{endpointDefaults:i,decorations:a}=s;return a?t[o]=Bn(e,r,o,i,a):t[o]=e.request.defaults(i),t[o]}};function Nn(e){const r={};for(const t of pe.keys())r[t]=new Proxy({octokit:e,scope:t,cache:{}},$n);return r}function Bn(e,r,t,o,s){const i=e.request.defaults(o);function a(...c){let d=i.endpoint.merge(...c);if(s.mapToData)return d=Object.assign({},d,{data:d[s.mapToData],[s.mapToData]:void 0}),i(d);if(s.renamed){const[v,f]=s.renamed;e.log.warn(`octokit.${r}.${t}() has been renamed to octokit.${v}.${f}()`)}if(s.deprecated&&e.log.warn(s.deprecated),s.renamedParameters){const v=i.endpoint.merge(...c);for(const[f,b]of Object.entries(s.renamedParameters))f in v&&(e.log.warn(`"${f}" parameter is deprecated for "octokit.${r}.${t}()". Use "${b}" instead`),b in v||(v[b]=v[f]),delete v[f]);return i(v)}return i(...c)}return Object.assign(a,i)}function Kt(e){return{rest:Nn(e)}}Kt.VERSION=In;var Me={exports:{}},Mn=Me.exports,mt;function Wn(){return mt||(mt=1,function(e,r){(function(t,o){e.exports=o()})(Mn,function(){var t=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof lt<"u"?lt:typeof self<"u"?self:{};function o(F){return F&&F.default||F}var s=function(F,l,n={}){var u,g,m;for(u in l)m=l[u],n[u]=(g=F[u])!=null?g:m;return n},i=function(F,l,n={}){var u,g;for(u in F)g=F[u],l[u]!==void 0&&(n[u]=g);return n},a={load:s,overwrite:i},c;c=class{constructor(l,n){this.incr=l,this.decr=n,this._first=null,this._last=null,this.length=0}push(l){var n;this.length++,typeof this.incr=="function"&&this.incr(),n={value:l,prev:this._last,next:null},this._last!=null?(this._last.next=n,this._last=n):this._first=this._last=n}shift(){var l;if(this._first!=null)return this.length--,typeof this.decr=="function"&&this.decr(),l=this._first.value,(this._first=this._first.next)!=null?this._first.prev=null:this._last=null,l}first(){if(this._first!=null)return this._first.value}getArray(){var l,n,u;for(l=this._first,u=[];l!=null;)u.push((n=l,l=l.next,n.value));return u}forEachShift(l){var n;for(n=this.shift();n!=null;)l(n),n=this.shift()}debug(){var l,n,u,g,m;for(l=this._first,m=[];l!=null;)m.push((n=l,l=l.next,{value:n.value,prev:(u=n.prev)!=null?u.value:void 0,next:(g=n.next)!=null?g.value:void 0}));return m}};var d=c,v;v=class{constructor(l){if(this.instance=l,this._events={},this.instance.on!=null||this.instance.once!=null||this.instance.removeAllListeners!=null)throw new Error("An Emitter already exists for this object");this.instance.on=(n,u)=>this._addListener(n,"many",u),this.instance.once=(n,u)=>this._addListener(n,"once",u),this.instance.removeAllListeners=(n=null)=>n!=null?delete this._events[n]:this._events={}}_addListener(l,n,u){var g;return(g=this._events)[l]==null&&(g[l]=[]),this._events[l].push({cb:u,status:n}),this.instance}listenerCount(l){return this._events[l]!=null?this._events[l].length:0}async trigger(l,...n){var u,g;try{return l!=="debug"&&this.trigger("debug",`Event triggered: ${l}`,n),this._events[l]==null?void 0:(this._events[l]=this._events[l].filter(function(m){return m.status!=="none"}),g=this._events[l].map(async m=>{var T,R;if(m.status!=="none"){m.status==="once"&&(m.status="none");try{return R=typeof m.cb=="function"?m.cb(...n):void 0,typeof(R!=null?R.then:void 0)=="function"?await R:R}catch(q){return T=q,this.trigger("error",T),null}}}),(await Promise.all(g)).find(function(m){return m!=null}))}catch(m){return u=m,this.trigger("error",u),null}}};var f=v,b,E,h;b=d,E=f,h=class{constructor(l){this.Events=new E(this),this._length=0,this._lists=(function(){var n,u,g;for(g=[],n=1,u=l;1<=u?n<=u:n>=u;1<=u?++n:--n)g.push(new b(()=>this.incr(),()=>this.decr()));return g}).call(this)}incr(){if(this._length++===0)return this.Events.trigger("leftzero")}decr(){if(--this._length===0)return this.Events.trigger("zero")}push(l){return this._lists[l.options.priority].push(l)}queued(l){return l!=null?this._lists[l].length:this._length}shiftAll(l){return this._lists.forEach(function(n){return n.forEachShift(l)})}getFirst(l=this._lists){var n,u,g;for(n=0,u=l.length;n<u;n++)if(g=l[n],g.length>0)return g;return[]}shiftLastFrom(l){return this.getFirst(this._lists.slice(l).reverse()).shift()}};var P=h,S;S=class extends Error{};var _=S,y,O,k,w,G;w=10,O=5,G=a,y=_,k=class{constructor(l,n,u,g,m,T,R,q){this.task=l,this.args=n,this.rejectOnDrop=m,this.Events=T,this._states=R,this.Promise=q,this.options=G.load(u,g),this.options.priority=this._sanitizePriority(this.options.priority),this.options.id===g.id&&(this.options.id=`${this.options.id}-${this._randomIndex()}`),this.promise=new this.Promise((V,J)=>{this._resolve=V,this._reject=J}),this.retryCount=0}_sanitizePriority(l){var n;return n=~~l!==l?O:l,n<0?0:n>w-1?w-1:n}_randomIndex(){return Math.random().toString(36).slice(2)}doDrop({error:l,message:n="This job has been dropped by Bottleneck"}={}){return this._states.remove(this.options.id)?(this.rejectOnDrop&&this._reject(l??new y(n)),this.Events.trigger("dropped",{args:this.args,options:this.options,task:this.task,promise:this.promise}),!0):!1}_assertStatus(l){var n;if(n=this._states.jobStatus(this.options.id),!(n===l||l==="DONE"&&n===null))throw new y(`Invalid job status ${n}, expected ${l}. Please open an issue at https://github.com/SGrondin/bottleneck/issues`)}doReceive(){return this._states.start(this.options.id),this.Events.trigger("received",{args:this.args,options:this.options})}doQueue(l,n){return this._assertStatus("RECEIVED"),this._states.next(this.options.id),this.Events.trigger("queued",{args:this.args,options:this.options,reachedHWM:l,blocked:n})}doRun(){return this.retryCount===0?(this._assertStatus("QUEUED"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),this.Events.trigger("scheduled",{args:this.args,options:this.options})}async doExecute(l,n,u,g){var m,T,R;this.retryCount===0?(this._assertStatus("RUNNING"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),T={args:this.args,options:this.options,retryCount:this.retryCount},this.Events.trigger("executing",T);try{if(R=await(l!=null?l.schedule(this.options,this.task,...this.args):this.task(...this.args)),n())return this.doDone(T),await g(this.options,T),this._assertStatus("DONE"),this._resolve(R)}catch(q){return m=q,this._onFailure(m,T,n,u,g)}}doExpire(l,n,u){var g,m;return this._states.jobStatus(this.options.id==="RUNNING")&&this._states.next(this.options.id),this._assertStatus("EXECUTING"),m={args:this.args,options:this.options,retryCount:this.retryCount},g=new y(`This job timed out after ${this.options.expiration} ms.`),this._onFailure(g,m,l,n,u)}async _onFailure(l,n,u,g,m){var T,R;if(u())return T=await this.Events.trigger("failed",l,n),T!=null?(R=~~T,this.Events.trigger("retry",`Retrying ${this.options.id} after ${R} ms`,n),this.retryCount++,g(R)):(this.doDone(n),await m(this.options,n),this._assertStatus("DONE"),this._reject(l))}doDone(l){return this._assertStatus("EXECUTING"),this._states.next(this.options.id),this.Events.trigger("done",l)}};var C=k,D,A,I;I=a,D=_,A=class{constructor(l,n,u){this.instance=l,this.storeOptions=n,this.clientId=this.instance._randomIndex(),I.load(u,u,this),this._nextRequest=this._lastReservoirRefresh=this._lastReservoirIncrease=Date.now(),this._running=0,this._done=0,this._unblockTime=0,this.ready=this.Promise.resolve(),this.clients={},this._startHeartbeat()}_startHeartbeat(){var l;return this.heartbeat==null&&(this.storeOptions.reservoirRefreshInterval!=null&&this.storeOptions.reservoirRefreshAmount!=null||this.storeOptions.reservoirIncreaseInterval!=null&&this.storeOptions.reservoirIncreaseAmount!=null)?typeof(l=this.heartbeat=setInterval(()=>{var n,u,g,m,T;if(m=Date.now(),this.storeOptions.reservoirRefreshInterval!=null&&m>=this._lastReservoirRefresh+this.storeOptions.reservoirRefreshInterval&&(this._lastReservoirRefresh=m,this.storeOptions.reservoir=this.storeOptions.reservoirRefreshAmount,this.instance._drainAll(this.computeCapacity())),this.storeOptions.reservoirIncreaseInterval!=null&&m>=this._lastReservoirIncrease+this.storeOptions.reservoirIncreaseInterval&&({reservoirIncreaseAmount:n,reservoirIncreaseMaximum:g,reservoir:T}=this.storeOptions,this._lastReservoirIncrease=m,u=g!=null?Math.min(n,g-T):n,u>0))return this.storeOptions.reservoir+=u,this.instance._drainAll(this.computeCapacity())},this.heartbeatInterval)).unref=="function"?l.unref():void 0:clearInterval(this.heartbeat)}async __publish__(l){return await this.yieldLoop(),this.instance.Events.trigger("message",l.toString())}async __disconnect__(l){return await this.yieldLoop(),clearInterval(this.heartbeat),this.Promise.resolve()}yieldLoop(l=0){return new this.Promise(function(n,u){return setTimeout(n,l)})}computePenalty(){var l;return(l=this.storeOptions.penalty)!=null?l:15*this.storeOptions.minTime||5e3}async __updateSettings__(l){return await this.yieldLoop(),I.overwrite(l,l,this.storeOptions),this._startHeartbeat(),this.instance._drainAll(this.computeCapacity()),!0}async __running__(){return await this.yieldLoop(),this._running}async __queued__(){return await this.yieldLoop(),this.instance.queued()}async __done__(){return await this.yieldLoop(),this._done}async __groupCheck__(l){return await this.yieldLoop(),this._nextRequest+this.timeout<l}computeCapacity(){var l,n;return{maxConcurrent:l,reservoir:n}=this.storeOptions,l!=null&&n!=null?Math.min(l-this._running,n):l!=null?l-this._running:n??null}conditionsCheck(l){var n;return n=this.computeCapacity(),n==null||l<=n}async __incrementReservoir__(l){var n;return await this.yieldLoop(),n=this.storeOptions.reservoir+=l,this.instance._drainAll(this.computeCapacity()),n}async __currentReservoir__(){return await this.yieldLoop(),this.storeOptions.reservoir}isBlocked(l){return this._unblockTime>=l}check(l,n){return this.conditionsCheck(l)&&this._nextRequest-n<=0}async __check__(l){var n;return await this.yieldLoop(),n=Date.now(),this.check(l,n)}async __register__(l,n,u){var g,m;return await this.yieldLoop(),g=Date.now(),this.conditionsCheck(n)?(this._running+=n,this.storeOptions.reservoir!=null&&(this.storeOptions.reservoir-=n),m=Math.max(this._nextRequest-g,0),this._nextRequest=g+m+this.storeOptions.minTime,{success:!0,wait:m,reservoir:this.storeOptions.reservoir}):{success:!1}}strategyIsBlock(){return this.storeOptions.strategy===3}async __submit__(l,n){var u,g,m;if(await this.yieldLoop(),this.storeOptions.maxConcurrent!=null&&n>this.storeOptions.maxConcurrent)throw new D(`Impossible to add a job having a weight of ${n} to a limiter having a maxConcurrent setting of ${this.storeOptions.maxConcurrent}`);return g=Date.now(),m=this.storeOptions.highWater!=null&&l===this.storeOptions.highWater&&!this.check(n,g),u=this.strategyIsBlock()&&(m||this.isBlocked(g)),u&&(this._unblockTime=g+this.computePenalty(),this._nextRequest=this._unblockTime+this.storeOptions.minTime,this.instance._dropAllQueued()),{reachedHWM:m,blocked:u,strategy:this.storeOptions.strategy}}async __free__(l,n){return await this.yieldLoop(),this._running-=n,this._done+=n,this.instance._drainAll(this.computeCapacity()),{running:this._running}}};var U=A,Y,ee;Y=_,ee=class{constructor(l){this.status=l,this._jobs={},this.counts=this.status.map(function(){return 0})}next(l){var n,u;if(n=this._jobs[l],u=n+1,n!=null&&u<this.status.length)return this.counts[n]--,this.counts[u]++,this._jobs[l]++;if(n!=null)return this.counts[n]--,delete this._jobs[l]}start(l){var n;return n=0,this._jobs[l]=n,this.counts[n]++}remove(l){var n;return n=this._jobs[l],n!=null&&(this.counts[n]--,delete this._jobs[l]),n!=null}jobStatus(l){var n;return(n=this.status[this._jobs[l]])!=null?n:null}statusJobs(l){var n,u,g,m,T;if(l!=null){if(u=this.status.indexOf(l),u<0)throw new Y(`status must be one of ${this.status.join(", ")}`);g=this._jobs,m=[];for(n in g)T=g[n],T===u&&m.push(n);return m}else return Object.keys(this._jobs)}statusCounts(){return this.counts.reduce((l,n,u)=>(l[this.status[u]]=n,l),{})}};var ve=ee,Ee,Te;Ee=d,Te=class{constructor(l,n){this.schedule=this.schedule.bind(this),this.name=l,this.Promise=n,this._running=0,this._queue=new Ee}isEmpty(){return this._queue.length===0}async _tryToRun(){var l,n,u,g,m,T,R;if(this._running<1&&this._queue.length>0)return this._running++,{task:R,args:l,resolve:m,reject:g}=this._queue.shift(),n=await async function(){try{return T=await R(...l),function(){return m(T)}}catch(q){return u=q,function(){return g(u)}}}(),this._running--,this._tryToRun(),n()}schedule(l,...n){var u,g,m;return m=g=null,u=new this.Promise(function(T,R){return m=T,g=R}),this._queue.push({task:l,args:n,resolve:m,reject:g}),this._tryToRun(),u}};var Le=Te,be="2.19.5",xe={version:be},Zt=Object.freeze({version:be,default:xe}),Rr=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),Ar=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),es=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),Sr,Fr,Cr,Dr,Ur,Ie;Ie=a,Sr=f,Dr=Rr,Cr=Ar,Ur=es,Fr=(function(){class F{constructor(n={}){this.deleteKey=this.deleteKey.bind(this),this.limiterOptions=n,Ie.load(this.limiterOptions,this.defaults,this),this.Events=new Sr(this),this.instances={},this.Bottleneck=Hr,this._startAutoCleanup(),this.sharedConnection=this.connection!=null,this.connection==null&&(this.limiterOptions.datastore==="redis"?this.connection=new Dr(Object.assign({},this.limiterOptions,{Events:this.Events})):this.limiterOptions.datastore==="ioredis"&&(this.connection=new Cr(Object.assign({},this.limiterOptions,{Events:this.Events}))))}key(n=""){var u;return(u=this.instances[n])!=null?u:(()=>{var g;return g=this.instances[n]=new this.Bottleneck(Object.assign(this.limiterOptions,{id:`${this.id}-${n}`,timeout:this.timeout,connection:this.connection})),this.Events.trigger("created",g,n),g})()}async deleteKey(n=""){var u,g;return g=this.instances[n],this.connection&&(u=await this.connection.__runCommand__(["del",...Ur.allKeys(`${this.id}-${n}`)])),g!=null&&(delete this.instances[n],await g.disconnect()),g!=null||u>0}limiters(){var n,u,g,m;u=this.instances,g=[];for(n in u)m=u[n],g.push({key:n,limiter:m});return g}keys(){return Object.keys(this.instances)}async clusterKeys(){var n,u,g,m,T,R,q,V,J;if(this.connection==null)return this.Promise.resolve(this.keys());for(R=[],n=null,J=`b_${this.id}-`.length,u=9;n!==0;)for([V,g]=await this.connection.__runCommand__(["scan",n??0,"match",`b_${this.id}-*_settings`,"count",1e4]),n=~~V,m=0,q=g.length;m<q;m++)T=g[m],R.push(T.slice(J,-u));return R}_startAutoCleanup(){var n;return clearInterval(this.interval),typeof(n=this.interval=setInterval(async()=>{var u,g,m,T,R,q;R=Date.now(),m=this.instances,T=[];for(g in m){q=m[g];try{await q._store.__groupCheck__(R)?T.push(this.deleteKey(g)):T.push(void 0)}catch(V){u=V,T.push(q.Events.trigger("error",u))}}return T},this.timeout/2)).unref=="function"?n.unref():void 0}updateSettings(n={}){if(Ie.overwrite(n,this.defaults,this),Ie.overwrite(n,n,this.limiterOptions),n.timeout!=null)return this._startAutoCleanup()}disconnect(n=!0){var u;if(!this.sharedConnection)return(u=this.connection)!=null?u.disconnect(n):void 0}}return F.prototype.defaults={timeout:1e3*60*5,connection:null,Promise,id:"group-key"},F}).call(t);var rs=Fr,Lr,xr,Ir;Ir=a,xr=f,Lr=(function(){class F{constructor(n={}){this.options=n,Ir.load(this.options,this.defaults,this),this.Events=new xr(this),this._arr=[],this._resetPromise(),this._lastFlush=Date.now()}_resetPromise(){return this._promise=new this.Promise((n,u)=>this._resolve=n)}_flush(){return clearTimeout(this._timeout),this._lastFlush=Date.now(),this._resolve(),this.Events.trigger("batch",this._arr),this._arr=[],this._resetPromise()}add(n){var u;return this._arr.push(n),u=this._promise,this._arr.length===this.maxSize?this._flush():this.maxTime!=null&&this._arr.length===1&&(this._timeout=setTimeout(()=>this._flush(),this.maxTime)),u}}return F.prototype.defaults={maxTime:null,maxSize:null,Promise},F}).call(t);var ts=Lr,ss=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),os=o(Zt),jr,qr,Je,Qe,$r,Ye,Nr,Br,Mr,Xe,ne,Wr=[].splice;Ye=10,qr=5,ne=a,Nr=P,Qe=C,$r=U,Br=ss,Je=f,Mr=ve,Xe=Le,jr=(function(){class F{constructor(n={},...u){var g,m;this._addToQueue=this._addToQueue.bind(this),this._validateOptions(n,u),ne.load(n,this.instanceDefaults,this),this._queues=new Nr(Ye),this._scheduled={},this._states=new Mr(["RECEIVED","QUEUED","RUNNING","EXECUTING"].concat(this.trackDoneStatus?["DONE"]:[])),this._limiter=null,this.Events=new Je(this),this._submitLock=new Xe("submit",this.Promise),this._registerLock=new Xe("register",this.Promise),m=ne.load(n,this.storeDefaults,{}),this._store=(function(){if(this.datastore==="redis"||this.datastore==="ioredis"||this.connection!=null)return g=ne.load(n,this.redisStoreDefaults,{}),new Br(this,m,g);if(this.datastore==="local")return g=ne.load(n,this.localStoreDefaults,{}),new $r(this,m,g);throw new F.prototype.BottleneckError(`Invalid datastore type: ${this.datastore}`)}).call(this),this._queues.on("leftzero",()=>{var T;return(T=this._store.heartbeat)!=null&&typeof T.ref=="function"?T.ref():void 0}),this._queues.on("zero",()=>{var T;return(T=this._store.heartbeat)!=null&&typeof T.unref=="function"?T.unref():void 0})}_validateOptions(n,u){if(!(n!=null&&typeof n=="object"&&u.length===0))throw new F.prototype.BottleneckError("Bottleneck v2 takes a single object argument. Refer to https://github.com/SGrondin/bottleneck#upgrading-to-v2 if you're upgrading from Bottleneck v1.")}ready(){return this._store.ready}clients(){return this._store.clients}channel(){return`b_${this.id}`}channel_client(){return`b_${this.id}_${this._store.clientId}`}publish(n){return this._store.__publish__(n)}disconnect(n=!0){return this._store.__disconnect__(n)}chain(n){return this._limiter=n,this}queued(n){return this._queues.queued(n)}clusterQueued(){return this._store.__queued__()}empty(){return this.queued()===0&&this._submitLock.isEmpty()}running(){return this._store.__running__()}done(){return this._store.__done__()}jobStatus(n){return this._states.jobStatus(n)}jobs(n){return this._states.statusJobs(n)}counts(){return this._states.statusCounts()}_randomIndex(){return Math.random().toString(36).slice(2)}check(n=1){return this._store.__check__(n)}_clearGlobalState(n){return this._scheduled[n]!=null?(clearTimeout(this._scheduled[n].expiration),delete this._scheduled[n],!0):!1}async _free(n,u,g,m){var T,R;try{if({running:R}=await this._store.__free__(n,g.weight),this.Events.trigger("debug",`Freed ${g.id}`,m),R===0&&this.empty())return this.Events.trigger("idle")}catch(q){return T=q,this.Events.trigger("error",T)}}_run(n,u,g){var m,T,R;return u.doRun(),m=this._clearGlobalState.bind(this,n),R=this._run.bind(this,n,u),T=this._free.bind(this,n,u),this._scheduled[n]={timeout:setTimeout(()=>u.doExecute(this._limiter,m,R,T),g),expiration:u.options.expiration!=null?setTimeout(function(){return u.doExpire(m,R,T)},g+u.options.expiration):void 0,job:u}}_drainOne(n){return this._registerLock.schedule(()=>{var u,g,m,T,R;return this.queued()===0?this.Promise.resolve(null):(R=this._queues.getFirst(),{options:T,args:u}=m=R.first(),n!=null&&T.weight>n?this.Promise.resolve(null):(this.Events.trigger("debug",`Draining ${T.id}`,{args:u,options:T}),g=this._randomIndex(),this._store.__register__(g,T.weight,T.expiration).then(({success:q,wait:V,reservoir:J})=>{var we;return this.Events.trigger("debug",`Drained ${T.id}`,{success:q,args:u,options:T}),q?(R.shift(),we=this.empty(),we&&this.Events.trigger("empty"),J===0&&this.Events.trigger("depleted",we),this._run(g,m,V),this.Promise.resolve(T.weight)):this.Promise.resolve(null)})))})}_drainAll(n,u=0){return this._drainOne(n).then(g=>{var m;return g!=null?(m=n!=null?n-g:n,this._drainAll(m,u+g)):this.Promise.resolve(u)}).catch(g=>this.Events.trigger("error",g))}_dropAllQueued(n){return this._queues.shiftAll(function(u){return u.doDrop({message:n})})}stop(n={}){var u,g;return n=ne.load(n,this.stopDefaults),g=m=>{var T;return T=()=>{var R;return R=this._states.counts,R[0]+R[1]+R[2]+R[3]===m},new this.Promise((R,q)=>T()?R():this.on("done",()=>{if(T())return this.removeAllListeners("done"),R()}))},u=n.dropWaitingJobs?(this._run=function(m,T){return T.doDrop({message:n.dropErrorMessage})},this._drainOne=()=>this.Promise.resolve(null),this._registerLock.schedule(()=>this._submitLock.schedule(()=>{var m,T,R;T=this._scheduled;for(m in T)R=T[m],this.jobStatus(R.job.options.id)==="RUNNING"&&(clearTimeout(R.timeout),clearTimeout(R.expiration),R.job.doDrop({message:n.dropErrorMessage}));return this._dropAllQueued(n.dropErrorMessage),g(0)}))):this.schedule({priority:Ye-1,weight:0},()=>g(1)),this._receive=function(m){return m._reject(new F.prototype.BottleneckError(n.enqueueErrorMessage))},this.stop=()=>this.Promise.reject(new F.prototype.BottleneckError("stop() has already been called")),u}async _addToQueue(n){var u,g,m,T,R,q,V;({args:u,options:T}=n);try{({reachedHWM:R,blocked:g,strategy:V}=await this._store.__submit__(this.queued(),T.weight))}catch(J){return m=J,this.Events.trigger("debug",`Could not queue ${T.id}`,{args:u,options:T,error:m}),n.doDrop({error:m}),!1}return g?(n.doDrop(),!0):R&&(q=V===F.prototype.strategy.LEAK?this._queues.shiftLastFrom(T.priority):V===F.prototype.strategy.OVERFLOW_PRIORITY?this._queues.shiftLastFrom(T.priority+1):V===F.prototype.strategy.OVERFLOW?n:void 0,q!=null&&q.doDrop(),q==null||V===F.prototype.strategy.OVERFLOW)?(q==null&&n.doDrop(),R):(n.doQueue(R,g),this._queues.push(n),await this._drainAll(),R)}_receive(n){return this._states.jobStatus(n.options.id)!=null?(n._reject(new F.prototype.BottleneckError(`A job with the same id already exists (id=${n.options.id})`)),!1):(n.doReceive(),this._submitLock.schedule(this._addToQueue,n))}submit(...n){var u,g,m,T,R,q,V;return typeof n[0]=="function"?(R=n,[g,...n]=R,[u]=Wr.call(n,-1),T=ne.load({},this.jobDefaults)):(q=n,[T,g,...n]=q,[u]=Wr.call(n,-1),T=ne.load(T,this.jobDefaults)),V=(...J)=>new this.Promise(function(we,is){return g(...J,function(...Vr){return(Vr[0]!=null?is:we)(Vr)})}),m=new Qe(V,n,T,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),m.promise.then(function(J){return typeof u=="function"?u(...J):void 0}).catch(function(J){return Array.isArray(J)?typeof u=="function"?u(...J):void 0:typeof u=="function"?u(J):void 0}),this._receive(m)}schedule(...n){var u,g,m;return typeof n[0]=="function"?([m,...n]=n,g={}):[g,m,...n]=n,u=new Qe(m,n,g,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),this._receive(u),u.promise}wrap(n){var u,g;return u=this.schedule.bind(this),g=function(...m){return u(n.bind(this),...m)},g.withOptions=function(m,...T){return u(m,n,...T)},g}async updateSettings(n={}){return await this._store.__updateSettings__(ne.overwrite(n,this.storeDefaults)),ne.overwrite(n,this.instanceDefaults,this),this}currentReservoir(){return this._store.__currentReservoir__()}incrementReservoir(n=0){return this._store.__incrementReservoir__(n)}}return F.default=F,F.Events=Je,F.version=F.prototype.version=os.version,F.strategy=F.prototype.strategy={LEAK:1,OVERFLOW:2,OVERFLOW_PRIORITY:4,BLOCK:3},F.BottleneckError=F.prototype.BottleneckError=_,F.Group=F.prototype.Group=rs,F.RedisConnection=F.prototype.RedisConnection=Rr,F.IORedisConnection=F.prototype.IORedisConnection=Ar,F.Batcher=F.prototype.Batcher=ts,F.prototype.jobDefaults={priority:qr,weight:1,expiration:null,id:"<no-id>"},F.prototype.storeDefaults={maxConcurrent:null,minTime:0,highWater:null,strategy:F.prototype.strategy.LEAK,penalty:null,reservoir:null,reservoirRefreshInterval:null,reservoirRefreshAmount:null,reservoirIncreaseInterval:null,reservoirIncreaseAmount:null,reservoirIncreaseMaximum:null},F.prototype.localStoreDefaults={Promise,timeout:null,heartbeatInterval:250},F.prototype.redisStoreDefaults={Promise,timeout:null,heartbeatInterval:5e3,clientTimeout:1e4,Redis:null,clientOptions:{},clusterNodes:null,clearDatastore:!1,connection:null},F.prototype.instanceDefaults={datastore:"local",connection:null,id:"<no-id>",rejectOnDrop:!0,trackDoneStatus:!1,Promise},F.prototype.stopDefaults={enqueueErrorMessage:"This limiter has been stopped and cannot accept new jobs.",dropWaitingJobs:!0,dropErrorMessage:"This limiter has been stopped."},F}).call(t);var Hr=jr,ns=Hr;return ns})}(Me)),Me.exports}var Hn=Wn();const Jt=en(Hn);var Vn="0.0.0-development";async function Qt(e,r,t,o){if(!t.request||!t.request.request)throw t;if(t.status>=400&&!e.doNotRetry.includes(t.status)){const s=o.request.retries!=null?o.request.retries:e.retries,i=Math.pow((o.request.retryCount||0)+1,2);throw r.retry.retryRequest(t,s,i)}throw t}async function zn(e,r,t,o){const s=new Jt;return s.on("failed",function(i,a){const c=~~i.request.request.retries,d=~~i.request.request.retryAfter;if(o.request.retryCount=a.retryCount+1,c>a.retryCount)return d*e.retryAfterBaseValue}),s.schedule(Kn.bind(null,e,r,t),o)}async function Kn(e,r,t,o){const s=await t(t,o);if(s.data&&s.data.errors&&s.data.errors.length>0&&/Something went wrong while executing your query/.test(s.data.errors[0].message)){const i=new Pe(s.data.errors[0].message,500,{request:o,response:s});return Qt(e,r,i,o)}return s}function Yt(e,r){const t=Object.assign({enabled:!0,retryAfterBaseValue:1e3,doNotRetry:[400,401,403,404,422,451],retries:3},r.retry);return t.enabled&&(e.hook.error("request",Qt.bind(null,t,e)),e.hook.wrap("request",zn.bind(null,t,e))),{retry:{retryRequest:(o,s,i)=>(o.request.request=Object.assign({},o.request.request,{retries:s,retryAfter:i}),o)}}}Yt.VERSION=Vn;var Jn="0.0.0-development",pr=()=>Promise.resolve();function Qn(e,r,t){return e.retryLimiter.schedule(Yn,e,r,t)}async function Yn(e,r,t){const o=t.method!=="GET"&&t.method!=="HEAD",{pathname:s}=new URL(t.url,"http://github.test"),i=t.method==="GET"&&s.startsWith("/search/"),a=s.startsWith("/graphql"),d=~~r.retryCount>0?{priority:0,weight:0}:{};e.clustering&&(d.expiration=1e3*60),(o||a)&&await e.write.key(e.id).schedule(d,pr),o&&e.triggersNotification(s)&&await e.notifications.key(e.id).schedule(d,pr),i&&await e.search.key(e.id).schedule(d,pr);const v=e.global.key(e.id).schedule(d,r,t);if(a){const f=await v;if(f.data.errors!=null&&f.data.errors.some(b=>b.type==="RATE_LIMITED"))throw Object.assign(new Error("GraphQL Rate Limit Exceeded"),{response:f,data:f.data})}return v}var Xn=["/orgs/{org}/invitations","/orgs/{org}/invitations/{invitation_id}","/orgs/{org}/teams/{team_slug}/discussions","/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments","/repos/{owner}/{repo}/collaborators/{username}","/repos/{owner}/{repo}/commits/{commit_sha}/comments","/repos/{owner}/{repo}/issues","/repos/{owner}/{repo}/issues/{issue_number}/comments","/repos/{owner}/{repo}/pulls","/repos/{owner}/{repo}/pulls/{pull_number}/comments","/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies","/repos/{owner}/{repo}/pulls/{pull_number}/merge","/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers","/repos/{owner}/{repo}/pulls/{pull_number}/reviews","/repos/{owner}/{repo}/releases","/teams/{team_id}/discussions","/teams/{team_id}/discussions/{discussion_number}/comments"];function Zn(e){const t=`^(?:${e.map(o=>o.split("/").map(s=>s.startsWith("{")?"(?:.+?)":s).join("/")).map(o=>`(?:${o})`).join("|")})[^/]*$`;return new RegExp(t,"i")}var ft=Zn(Xn),Xt=ft.test.bind(ft),fe={},ei=function(e,r){fe.global=new e.Group({id:"octokit-global",maxConcurrent:10,...r}),fe.search=new e.Group({id:"octokit-search",maxConcurrent:1,minTime:2e3,...r}),fe.write=new e.Group({id:"octokit-write",maxConcurrent:1,minTime:1e3,...r}),fe.notifications=new e.Group({id:"octokit-notifications",maxConcurrent:1,minTime:3e3,...r})};function Or(e,r){const{enabled:t=!0,Bottleneck:o=Jt,id:s="no-id",timeout:i=1e3*60*2,connection:a}=r.throttle||{};if(!t)return{};const c={timeout:i};typeof a<"u"&&(c.connection=a),fe.global==null&&ei(o,c);const d=Object.assign({clustering:a!=null,triggersNotification:Xt,fallbackSecondaryRateRetryAfter:60,retryAfterBaseValue:1e3,retryLimiter:new o,id:s,...fe},r.throttle);if(typeof d.onSecondaryRateLimit!="function"||typeof d.onRateLimit!="function")throw new Error(`octokit/plugin-throttling error:
        You must pass the onSecondaryRateLimit and onRateLimit error handlers.
        See https://octokit.github.io/rest.js/#throttling

        const octokit = new Octokit({
          throttle: {
            onSecondaryRateLimit: (retryAfter, options) => {/* ... */},
            onRateLimit: (retryAfter, options) => {/* ... */}
          }
        })
    `);const v={},f=new o.Events(v);return v.on("secondary-limit",d.onSecondaryRateLimit),v.on("rate-limit",d.onRateLimit),v.on("error",b=>e.log.warn("Error in throttling-plugin limit handler",b)),d.retryLimiter.on("failed",async function(b,E){const[h,P,S]=E.args,{pathname:_}=new URL(S.url,"http://github.test");if(!(_.startsWith("/graphql")&&b.status!==401||b.status===403||b.status===429))return;const O=~~P.retryCount;P.retryCount=O,S.request.retryCount=O;const{wantRetry:k,retryAfter:w=0}=await async function(){var G;if(/\bsecondary rate\b/i.test(b.message)){const C=Number(b.response.headers["retry-after"])||h.fallbackSecondaryRateRetryAfter;return{wantRetry:await f.trigger("secondary-limit",C,S,e,O),retryAfter:C}}if(b.response.headers!=null&&b.response.headers["x-ratelimit-remaining"]==="0"||(((G=b.response.data)==null?void 0:G.errors)??[]).some(C=>C.type==="RATE_LIMITED")){const C=new Date(~~b.response.headers["x-ratelimit-reset"]*1e3).getTime(),D=Math.max(Math.ceil((C-Date.now())/1e3)+1,0);return{wantRetry:await f.trigger("rate-limit",D,S,e,O),retryAfter:D}}return{}}();if(k)return P.retryCount++,w*h.retryAfterBaseValue}),e.hook.wrap("request",Qn.bind(null,d)),{}}Or.VERSION=Jn;Or.triggersNotification=Xt;var ri="0.0.0-development",ti=kn.plugin(Kt,Mt,xn,Yt,Or).defaults({userAgent:`octokit.js/${ri}`,throttle:{onRateLimit:si,onSecondaryRateLimit:oi}});function si(e,r,t){if(t.log.warn(`Request quota exhausted for request ${r.method} ${r.url}`),r.request.retryCount===0)return t.log.info(`Retrying after ${e} seconds!`),!0}function oi(e,r,t){if(t.log.warn(`SecondaryRateLimit detected for request ${r.method} ${r.url}`),r.request.retryCount===0)return t.log.info(`Retrying after ${e} seconds!`),!0}var ce,Ae,Se;class ni{constructor(r){W(this,"auth","");ye(this,ce);ye(this,Ae,te(null));ye(this,Se,te([]));this.auth=r,Jr(this,ce,new ti({auth:r})),ar.getUser(ie(this,ce)).then(t=>{var o;this.user=t,ar.getTrades(ie(this,ce),(o=this.user)==null?void 0:o.login).then(s=>{this.trades=s})})}get user(){return p(ie(this,Ae))}set user(r){K(ie(this,Ae),r)}get trades(){return p(ie(this,Se))}set trades(r){K(ie(this,Se),r)}async set(r){var t;return this.user&&await ar.setTrades(ie(this,ce),(t=this.user)==null?void 0:t.login,r)?(this.trades=r,!0):!1}}ce=new WeakMap,Ae=new WeakMap,Se=new WeakMap;function ii(e){return new ni(e)}var Fe;class ai{constructor(r,t){W(this,"key","");ye(this,Fe,te());this.key=r,this.value=t,this.value=localStorage[r]?JSON.parse(localStorage[r]):t,Ot(()=>{this.value&&(localStorage[r]=JSON.stringify(this.value))})}get value(){return p(ie(this,Fe))}set value(r){K(ie(this,Fe),r)}}Fe=new WeakMap;function _t(e,r){return new ai(e,r)}var ci=M('<header class="flex-row align-items-center gap-1 svelte-rc7rfo"><h1 class="flexible">Trading journal v5</h1> <input class="patInput svelte-rc7rfo" placeholder="Git personal access token"> <button>Add</button> <button><!></button></header> <div class="containerTable overflow-auto svelte-rc7rfo"><!></div> <!>',1);function Pi(e,r){se(r,!0);const t=_t("personalAccessToken",""),o=_t("trades",[]),s=Z(()=>ii(t.value)),i=Z(()=>X.combineChanges(o.value,p(s).trades)),a=Z(()=>o.value.length>0&&!!p(s).user);let c=te(void 0),d=te(!1);const v=A=>{o.value=X.getChanges(A,p(s).trades)},f=A=>{var I;(I=p(c))==null||I.show(A,p(i),U=>{if(U.status!="closed"&&U.status!="canceled"){const Y=p(i).findIndex(ee=>A.date==ee.date);v(p(i).toSpliced(Y,1,U))}})},b=()=>{o.value=[X.getDefaultTrade(p(i)[0]),...o.value]},E=async()=>{K(d,!0);try{await p(s).set(p(i))&&(o.value=[])}catch(A){alert(A)}K(d,!1)};var h=ci(),P=le(h),S=$(N(P),2);wr(S);var _=$(S,2);_.__click=b;var y=$(_,2);y.__click=E;var O=N(y);{var k=A=>{eo(A,{})},w=A=>{var I=_e("Sync");L(A,I)};re(O,A=>{p(d)?A(k):A(w,!1)})}x(y),x(P);var G=$(P,2),C=N(G);Uo(C,{get trades(){return p(i)},onchange:v,ondblclick:f}),x(G);var D=$(G,2);br(vo(D,{}),A=>K(c,ue(A)),()=>p(c)),j(()=>y.disabled=!p(a)||p(d)),yr(S,()=>t.value,A=>t.value=A),L(e,h),oe()}Ce(["click"]);export{Pi as component};

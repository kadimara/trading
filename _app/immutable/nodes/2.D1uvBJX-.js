var is=Object.defineProperty;var Br=e=>{throw TypeError(e)};var as=(e,r,t)=>r in e?is(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t;var $=(e,r,t)=>as(e,typeof r!="symbol"?r+"":r,t),Mr=(e,r,t)=>r.has(e)||Br("Cannot "+t);var ie=(e,r,t)=>(Mr(e,r,"read from private field"),t?t.call(e):r.get(e)),ke=(e,r,t)=>r.has(e)?Br("Cannot add the same private member more than once"):r instanceof WeakSet?r.add(e):r.set(e,t),Hr=(e,r,t,o)=>(Mr(e,r,"write to private field"),o?o.call(e,t):r.set(e,t),t);import{a as x,t as M,n as gt,c as Le,b as Ie}from"../chunks/disclose-version.BibnFRCd.js";import{R as ht,Q as ir,J as cs,h as K,a as mt,as as ft,at as ls,au as us,b as _t,p as Et,e as pr,f as Te,U as ps,D as ds,s as Ke,aq as vt,H as gs,r as Wr,c as Je,av as xe,d as Tt,G as Vr,aw as zr,ax as hs,ap as ms,ay as fs,C as _s,F as Es,am as vs,ag as Ts,X as bs,az as dr,aA as gr,aa as ws,L as Kr,aB as bt,aC as ys,aD as ks,ak as Ps,aE as Gs,aF as Os,aG as Rs,q as As,W as Ss,V as wt,g as le,k as B,m as I,l as q,t as H,x as u,j as ue,z as W,i as me,ae as re,N as J,n as yt}from"../chunks/runtime.BCcXHmBy.js";import{d as Fs,i as Cs,e as Us,f as $e,g as Ds,n as Ls,j as Is,l as kt,a as ce,k as Pt}from"../chunks/store.D6zCbj6_.js";import{i as se}from"../chunks/if.CXXDT0Y1.js";import{i as xs,p as Z,r as hr,b as mr,o as js,a as fe}from"../chunks/index-client.CRlUgUcE.js";import{i as Gt}from"../chunks/legacy.CMF9vnzL.js";const qs=[];function Ot(e,r=!1){return je(e,new Map,"",qs)}function je(e,r,t,o,s=null){if(typeof e=="object"&&e!==null){const a=r.get(e);if(a!==void 0)return a;if(e instanceof Map)return new Map(e);if(e instanceof Set)return new Set(e);if(ht(e)){const c=[];r.set(e,c),s!==null&&r.set(s,c);for(let g=0;g<e.length;g+=1)c.push(je(e[g],r,t,o));return c}if(ir(e)===cs){const c={};r.set(e,c),s!==null&&r.set(s,c);for(var i in e)c[i]=je(e[i],r,t,o);return c}if(e instanceof Date)return structuredClone(e);if(typeof e.toJSON=="function")return je(e.toJSON(),r,t,o,e)}if(e instanceof EventTarget)return e;try{return structuredClone(e)}catch{return e}}function Ns(e,r,t){K&&mt();var o=e,s=ps,i,a=ft()?ls:us;_t(()=>{a(s,s=r())&&(i&&Et(i),i=pr(()=>t(o)))}),K&&(o=Te)}function Ne(e,r){return r}function $s(e,r,t,o){for(var s=[],i=r.length,a=0;a<i;a++)hs(r[a].e,s,!0);var c=i>0&&s.length===0&&t!==null;if(c){var g=t.parentNode;ms(g),g.append(t),o.clear(),pe(e,r[0].prev,r[i-1].next)}fs(s,()=>{for(var E=0;E<i;E++){var m=r[E];c||(o.delete(m.k),pe(e,m.prev,m.next)),_s(m.e,!c)}})}function Ae(e,r,t,o,s,i=null){var a=e,c={flags:r,items:new Map,first:null},g=(r&bt)!==0;if(g){var E=e;a=K?Ke(Es(E)):E.appendChild(ds())}K&&mt();var m=null,T=!1;_t(()=>{var b=t(),f=ht(b)?b:b==null?[]:vt(b),O=f.length;if(T&&O===0)return;T=O===0;let P=!1;if(K){var _=a.data===gs;_!==(O===0)&&(a=Wr(),Ke(a),Je(!1),P=!0)}if(K){for(var y=null,k,S=0;S<O;S++){if(Te.nodeType===8&&Te.data===vs){a=Te,P=!0,Je(!1);break}var w=f[S],R=o(w,S);k=Rt(Te,c,y,null,w,R,S,s,r),c.items.set(R,k),y=k}O>0&&Ke(Wr())}if(!K){var D=Ts;Bs(f,c,a,s,r,(D.f&xe)!==0,o)}i!==null&&(O===0?m?Tt(m):m=pr(()=>i(a)):m!==null&&Et(m,()=>{m=null})),P&&Je(!0),t()}),K&&(a=Te)}function Bs(e,r,t,o,s,i,a){var X,de,ae,te;var c=(s&ys)!==0,g=(s&(dr|gr))!==0,E=e.length,m=r.items,T=r.first,b=T,f,O=null,P,_=[],y=[],k,S,w,R;if(c)for(R=0;R<E;R+=1)k=e[R],S=a(k,R),w=m.get(S),w!==void 0&&((X=w.a)==null||X.measure(),(P??(P=new Set)).add(w));for(R=0;R<E;R+=1){if(k=e[R],S=a(k,R),w=m.get(S),w===void 0){var D=b?b.e.nodes_start:t;O=Rt(D,r,O,O===null?r.first:O.next,k,S,R,o,s),m.set(S,O),_=[],y=[],b=O.next;continue}if(g&&Ms(w,k,R,s),w.e.f&xe&&(Tt(w.e),c&&((de=w.a)==null||de.unfix(),(P??(P=new Set)).delete(w))),w!==b){if(f!==void 0&&f.has(w)){if(_.length<y.length){var U=y[0],F;O=U.prev;var j=_[0],N=_[_.length-1];for(F=0;F<_.length;F+=1)Jr(_[F],U,t);for(F=0;F<y.length;F+=1)f.delete(y[F]);pe(r,j.prev,N.next),pe(r,O,j),pe(r,N,U),b=U,O=N,R-=1,_=[],y=[]}else f.delete(w),Jr(w,b,t),pe(r,w.prev,w.next),pe(r,w,O===null?r.first:O.next),pe(r,O,w),O=w;continue}for(_=[],y=[];b!==null&&b.k!==S;)(i||!(b.e.f&xe))&&(f??(f=new Set)).add(b),y.push(b),b=b.next;if(b===null)continue;w=b}_.push(w),O=w,b=w.next}if(b!==null||f!==void 0){for(var C=f===void 0?[]:vt(f);b!==null;)(i||!(b.e.f&xe))&&C.push(b),b=b.next;var V=C.length;if(V>0){var ee=s&bt&&E===0?t:null;if(c){for(R=0;R<V;R+=1)(ae=C[R].a)==null||ae.measure();for(R=0;R<V;R+=1)(te=C[R].a)==null||te.fix()}$s(r,C,ee,m)}}c&&bs(()=>{var ge;if(P!==void 0)for(w of P)(ge=w.a)==null||ge.apply()}),Vr.first=r.first&&r.first.e,Vr.last=O&&O.e}function Ms(e,r,t,o){o&dr&&zr(e.v,r),o&gr?zr(e.i,t):e.i=t}function Rt(e,r,t,o,s,i,a,c,g){var E=(g&dr)!==0,m=(g&ks)===0,T=E?m?ws(s):Kr(s):s,b=g&gr?Kr(a):a,f={i:b,v:T,k:i,a:null,e:null,prev:t,next:o};try{return f.e=pr(()=>c(e,T,b),K),f.e.prev=t&&t.e,f.e.next=o&&o.e,t===null?r.first=f:(t.next=f,t.e.next=f.e),o!==null&&(o.prev=f,o.e.prev=f.e),f}finally{}}function Jr(e,r,t){for(var o=e.next?e.next.e.nodes_start:t,s=r?r.e.nodes_start:t,i=e.e.nodes_start;i!==o;){var a=Ps(i);s.before(i),i=a}}function pe(e,r,t){r===null?e.first=t:(r.next=t,r.e.next=t&&t.e),t!==null&&(t.prev=r,t.e.prev=r&&r.e)}function fr(e){if(K){var r=!1,t=()=>{if(!r){if(r=!0,e.hasAttribute("value")){var o=e.value;oe(e,"value",null),e.value=o}if(e.hasAttribute("checked")){var s=e.checked;oe(e,"checked",null),e.checked=s}}};e.__on_r=t,Gs(t),Fs()}}function oe(e,r,t,o){var s=e.__attributes??(e.__attributes={});K&&(s[r]=e.getAttribute(r),r==="src"||r==="srcset"||r==="href"&&e.nodeName==="LINK")||s[r]!==(s[r]=t)&&(r==="style"&&"__styles"in e&&(e.__styles={}),r==="loading"&&(e[Os]=t),t==null?e.removeAttribute(r):typeof t!="string"&&At(e).includes(r)?e[r]=t:e.setAttribute(r,t))}function _r(e,r,t,o,s=!1,i=!1,a=!1){var c=r||{},g=e.tagName==="OPTION";for(var E in r)E in t||(t[E]=null);o!==void 0&&(t.class=t.class?t.class+" "+o:o);var m=At(e),T=e.__attributes??(e.__attributes={});for(const _ in t){let y=t[_];if(g&&_==="value"&&y==null){e.value=e.__value="",c[_]=y;continue}var b=c[_];if(y!==b){c[_]=y;var f=_[0]+_[1];if(f!=="$$"){if(f==="on"){const k={},S="$$"+_;let w=_.slice(2);var O=Is(w);if(Cs(w)&&(w=w.slice(0,-7),k.capture=!0),!O&&b){if(y!=null)continue;e.removeEventListener(w,c[S],k),c[S]=null}if(y!=null)if(O)e[`__${w}`]=y,$e([w]);else{let R=function(D){c[_].call(this,D)};c[S]=Us(w,e,R,k)}else O&&(e[`__${w}`]=void 0)}else if(_==="style"&&y!=null)e.style.cssText=y+"";else if(_==="autofocus")Ds(e,!!y);else if(_==="__value"||_==="value"&&y!=null)e.value=e[_]=e.__value=y;else{var P=_;s||(P=Ls(P)),y==null&&!i?(T[_]=null,e.removeAttribute(_)):m.includes(P)&&(i||typeof y!="string")?e[P]=y:typeof y!="function"&&(K&&(P==="src"||P==="href"||P==="srcset")||oe(e,P,y))}_==="style"&&"__styles"in e&&(e.__styles={})}}}return c}var Qr=new Map;function At(e){var r=Qr.get(e.nodeName);if(r)return r;Qr.set(e.nodeName,r=[]);for(var t,o=ir(e),s=Element.prototype;s!==o;){t=Rs(o);for(var i in t)t[i].set&&r.push(i);o=ir(o)}return r}function St(e,r){var t=e.__className,o=Ft(r);K&&e.getAttribute("class")===o?e.__className=o:(t!==o||K&&e.getAttribute("class")!==o)&&(o===""?e.removeAttribute("class"):e.setAttribute("class",o),e.__className=o)}function Hs(e,r){var t=e.__className,o=Ft(r);K&&e.className===o?e.__className=o:(t!==o||K&&e.className!==o)&&(r==null?e.removeAttribute("class"):e.className=o,e.__className=o)}function Ft(e){return e??""}function Er(e,r,t=r){var o=ft();kt(e,"input",s=>{var i=s?e.defaultValue:e.value;i=Qe(e)?Ye(i):i,t(i),o&&i!==(i=r())&&(e.value=i??"")}),(K&&e.defaultValue!==e.value||As(r)==null&&e.value)&&t(Qe(e)?Ye(e.value):e.value),Ss(()=>{var s=r();Qe(e)&&s===Ye(e.value)||e.type==="date"&&!s&&!e.value||s!==e.value&&(e.value=s??"")})}function Qe(e){var r=e.type;return r==="number"||r==="range"}function Ye(e){return e===""?null:+e}function Ct(e,r,t){if(e.multiple)return zs(e,r);for(var o of e.options){var s=Oe(o);if(xs(s,r)){o.selected=!0;return}}(!t||r!==void 0)&&(e.selectedIndex=-1)}function Ws(e,r){wt(()=>{var t=new MutationObserver(()=>{var o=e.__value;Ct(e,o)});return t.observe(e,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["value"]}),()=>{t.disconnect()}})}function Vs(e,r,t=r){var o=!0;kt(e,"change",s=>{var i=s?"[selected]":":checked",a;if(e.multiple)a=[].map.call(e.querySelectorAll(i),Oe);else{var c=e.querySelector(i)??e.querySelector("option:not([disabled])");a=c&&Oe(c)}t(a)}),wt(()=>{var s=r();if(Ct(e,s,o),o&&s===void 0){var i=e.querySelector(":checked");i!==null&&(s=Oe(i),t(s))}e.__value=s,o=!1}),Ws(e)}function zs(e,r){for(var t of e.options)t.selected=~r.indexOf(Oe(t))}function Oe(e){return"__value"in e?e.__value:e.value}const Ks=["Accumulation fase","Breakout","Consolidation","Distribution fase","Downtrend","Entry in price","Gain","Impulse down","Impulse up","Long","Loss","Momentum decreases","Pullback","Range high","Range low","Resistance","Reversal","Short","Support","Trend","Uptrend","Void"],Js=["FOMO","Fear of losing profits","Front runner","No plan","Stop loss didn't cover enough","No support/resistance level"];var Qs=M('<a target="_blank"> </a>'),Ys=M("<input>"),Xs=M('<div class="flex-column gap-1 svelte-1ywe1ky"><!> <img tabindex="-1" alt="Chart" class="svelte-1ywe1ky"></div>');function Yr(e,r){le(r,!0);let t=Z(r,"value",15),o=hr(r,["$$slots","$$events","$$legacy","value","disabled"]),s=W(()=>{var f;if(!t())return"";const m=t().match(new RegExp("(?<=https:\\/\\/www.tradingview.com\\/x\\/)(.*)(?=\\/)","g")),T=m==null?void 0:m[0];return`https://s3.tradingview.com/snapshots/${(f=T==null?void 0:T[0])==null?void 0:f.toLowerCase()}/${T}.png`});var i=Xs(),a=B(i);{var c=m=>{var T=Qs(),b=B(T,!0);q(T),H(()=>{oe(T,"href",t()),ce(b,t())}),x(m,T)},g=m=>{var T=Ys();fr(T);let b;H(()=>b=_r(T,b,{placeholder:"https://www.tradingview.com/x/HEUPOgtN/",disabled:r.disabled,...o},"svelte-1ywe1ky")),Er(T,t),x(m,T)};se(a,m=>{r.disabled?m(c):m(g,!1)})}var E=I(a,2);q(i),H(()=>oe(E,"src",u(s))),x(e,i),ue()}var Zs=gt('<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"><line x1="12" y1="2" x2="12" y2="6"></line><line x1="12" y1="18" x2="12" y2="22"></line><line x1="4.93" y1="4.93" x2="7.76" y2="7.76"></line><line x1="16.24" y1="16.24" x2="19.07" y2="19.07"></line><line x1="2" y1="12" x2="6" y2="12"></line><line x1="18" y1="12" x2="22" y2="12"></line><line x1="4.93" y1="19.07" x2="7.76" y2="16.24"></line><line x1="16.24" y1="7.76" x2="19.07" y2="4.93"></line></svg>');function eo(e,r){le(r,!1);let t=Z(r,"size",12,"24"),o=Z(r,"strokeWidth",8,2),s=Z(r,"class",8,"");t()!=="100%"&&t(t().slice(-1)==="x"?t().slice(0,t().length-1)+"em":parseInt(t())+"px"),Gt();var i=Zs();H(()=>{oe(i,"width",t()),oe(i,"height",t()),oe(i,"stroke-width",o()),St(i,`feather feather-loader ${s()??""}`)}),x(e,i),ue()}var ro=gt('<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>');function to(e,r){le(r,!1);let t=Z(r,"size",12,"24"),o=Z(r,"strokeWidth",8,2),s=Z(r,"class",8,"");t()!=="100%"&&t(t().slice(-1)==="x"?t().slice(0,t().length-1)+"em":parseInt(t())+"px"),Gt();var i=ro();H(()=>{oe(i,"width",t()),oe(i,"height",t()),oe(i,"stroke-width",o()),St(i,`feather feather-x ${s()??""}`)}),x(e,i),ue()}var so=(e,r,t)=>r(u(t)),oo=M('<button class="svelte-1ave2xl"> </button>'),no=M('<div class="suggestions svelte-1ave2xl"></div>'),io=M("<div><input> <!></div>"),ao=M('<span class="icon svelte-1ave2xl"><!></span>'),co=M('<div class="tag svelte-1ave2xl"> <!></div>'),lo=M('<div class="tag svelte-1ave2xl"> </div>'),uo=M('<!> <div class="flex-row flex-wrap gap-1"><!> <!></div>',1);function Xr(e,r){le(r,!0);let t=Z(r,"value",15),o=hr(r,["$$slots","$$events","$$legacy","value","suggestions","disabled"]),s=re(void 0),i=re(""),a=W(()=>{var k,S;return typeof t()=="string"?(S=(k=t().split(".")||[])==null?void 0:k.map(w=>w.trim()))==null?void 0:S.filter(w=>w!==""):[]}),c=W(()=>{var k;return u(i)?(k=r.suggestions)==null?void 0:k.filter(S=>S.toLowerCase().includes(u(i).toLowerCase())):[]});const g=k=>{t([...u(a),k].join(". ")),J(i,"")},E=k=>{t(u(a).toSpliced(k,1).join(". ")),J(i,"")},m=k=>{var S;k.key=="Enter"&&g(((S=u(c))==null?void 0:S.length)==1?u(c)[0]:u(i))};var T=uo(),b=me(T);{var f=k=>{var S=io(),w=B(S);fr(w);let R;mr(w,F=>J(s,F),()=>u(s));var D=I(w,2);{var U=F=>{var j=no();Ae(j,21,()=>u(c),Ne,(N,C)=>{var V=oo();V.__pointerdown=[so,g,C];var ee=B(V,!0);q(V),H(()=>ce(ee,u(C))),x(N,V)}),q(j),x(F,j)};se(D,F=>{u(c)&&F(U)})}q(S),H(()=>R=_r(w,R,{type:"text",onkeyup:m,...o},"svelte-1ave2xl")),Er(w,()=>u(i),F=>J(i,F)),x(k,S)};se(b,k=>{r.disabled||k(f)})}var O=I(b,2),P=B(O);Ae(P,17,()=>u(a),Ne,(k,S,w)=>{var R=co(),D=B(R),U=I(D);{var F=j=>{var N=ao();N.__click=()=>E(w);var C=B(N);to(C,{}),q(N),x(j,N)};se(U,j=>{r.disabled||j(F)})}q(R),H(()=>ce(D,`${u(S)??""} `)),x(k,R)});var _=I(P,2);{var y=k=>{var S=lo(),w=B(S,!0);q(S),H(()=>ce(w,u(i))),x(k,S)};se(_,k=>{u(i)&&k(y)})}q(O),x(e,T),ue()}$e(["pointerdown","click"]);var po=M('<div class="flex-column gap-1 svelte-qf2jfx"><!> <!> <hr> <div class="flex-row gap-1 charts svelte-qf2jfx"><!> <hr class="vertical"> <!></div></div>'),go=M('<dialog class="svelte-qf2jfx"><!></dialog>');function ho(e,r){le(r,!0);let t=re(void 0),o=re(void 0),s=re([]),i=re(f=>{}),a=W(()=>u(o)==null||u(o).status=="closed"||u(o).status=="canceled");const c=()=>{var f;u(i)(u(o)),(f=u(t))==null||f.close()},g=(f,O,P)=>{var _;J(o,fe(f)),J(s,O),J(i,fe(P)),(_=u(t))==null||_.showModal()},E=f=>{if(u(a)&&(f.code=="ArrowLeft"||f.code=="ArrowRight")){const O=u(s).findIndex(y=>{var k;return((k=u(o))==null?void 0:k.date)==y.date}),P=f.code=="ArrowLeft"?-1:1,_=Math.min(Math.max(O+P,0),u(s).length-1);J(o,fe(u(s)[_]))}};js(()=>{var f;(f=u(t))==null||f.addEventListener("keydown",E)});var m=go(),T=B(m);{var b=f=>{var O=Le(),P=me(O);Ns(P,()=>{var _;return(_=u(o))==null?void 0:_.date},_=>{var y=po(),k=B(y);Xr(k,{suggestions:Ks,placeholder:"Plan of the trade",get disabled(){return u(a)},get value(){return u(o).plan},set value(U){u(o).plan=U}});var S=I(k,2);Xr(S,{suggestions:Js,placeholder:"Reflection of the trade",get disabled(){return u(a)},get value(){return u(o).reflection},set value(U){u(o).reflection=U}});var w=I(S,4),R=B(w);Yr(R,{placeholder:"Higher time frame https://www.tradingview.com/x/HEUPOgtN/",get disabled(){return u(a)},get value(){return u(o).htfLink},set value(U){u(o).htfLink=U}});var D=I(R,4);Yr(D,{placeholder:"Link https://www.tradingview.com/x/HEUPOgtN/",get disabled(){return u(a)},get value(){return u(o).link},set value(U){u(o).link=U}}),q(w),q(y),x(_,y)}),x(f,O)};se(T,f=>{u(o)&&f(b)})}return q(m),mr(m,f=>J(t,f),()=>u(t)),Pt("close",m,c),x(e,m),ue({show:g})}const mo=5e-4,fo=["created","open","reflecting","closed","canceled"],_o=["btc","eth","ada"],Eo=["1min","3min","5min","15min"];function Ut(e=null){return{status:"created",date:Date.now(),link:"",htfLink:"",plan:"",reflection:"",symbol:(e==null?void 0:e.symbol)||"btc",timeFrame:(e==null?void 0:e.timeFrame)||"5min",longShort:"long",risk:0,riskRewardRatio:"",account:(e==null?void 0:e.account)||0,amount:0,entry:0,takeProfit:0,stopLoss:0,pnl:0,taker:mo,maker:0}}function vo(e,r,t,o){if(!o||!t)return 0;const s=Math.abs(o/t-1);return Dt(r/e*s,4)}function To(e,r){return r<e?"long":"short"}function Zr(e,r,t,o){if(!r||!t||!o)return 0;const s=r-o/t*r;return Dt(e=="long"?s*-1:s,2)}function bo(e,r,t){const o=Math.abs(e-t),s=Math.abs(e-r),i=Math.min(o,s),a=Math.round(o/i*10)/10,c=Math.round(s/i*10)/10;return a+" / "+c}function Dt(e,r){return parseFloat(e.toFixed(r))}class ar{static combineChanges(r,t){const o=[...t];for(const s of r){const i=o.findIndex(a=>a.date===s.date);i!==-1?o[i]={...o[i],...s}:o.push({...Ut(),...s})}return o.sort((s,i)=>i.date-s.date)}static getChanges(r,t){var i;const o=[],s=new Map;for(const a of t)s.set(a.date.toString(),a);for(const a of r){const c=s.get((i=a.date)==null?void 0:i.toString());if(c){const g={};for(const E in a)a[E]!==c[E]&&(g.date=a.date,g[E]=a[E]);Object.keys(g).length>0&&o.push(g)}else o.push(a)}return o}static getTotalPnl(r){return parseFloat(r.filter(t=>t.status!="canceled").reduce((t,o)=>t+o.pnl,0).toFixed(2))}}var wo=M("<option> </option>"),yo=M('<select class="svelte-1lhzzgw"></select>'),ko=M("<td><!></td>");function Y(e,r){le(r,!0);let t=Z(r,"value",15),o=Z(r,"disabled",3,!0),s=Z(r,"options",19,()=>[]),i=Z(r,"color",3,""),a=hr(r,["$$slots","$$events","$$legacy","value","type","disabled","options","color"]);const c=P=>{const _=P.currentTarget,y=document.createRange();y.selectNodeContents(_);const k=window.getSelection();k==null||k.removeAllRanges(),k==null||k.addRange(y)},g=P=>{switch(r.type){case"text":t(P.currentTarget.innerText);break;case"currency":t(Number(P.currentTarget.innerText));break;case"date":t(new Date(P.currentTarget.innerText).valueOf());break}const _=new Event("change",{bubbles:!0});P.currentTarget.dispatchEvent(_)};var E=ko(),m=P=>!o()&&P.stopPropagation();let T;var b=B(E);{var f=P=>{var _=Ie();H(()=>ce(_,t())),x(P,_)},O=P=>{var _=Le(),y=me(_);{var k=w=>{var R=Ie();H(()=>ce(R,new Date(Number(t())).toLocaleString("en-GB",{timeZone:"UTC"}))),x(w,R)},S=w=>{var R=Le(),D=me(R);{var U=F=>{var j=Le(),N=me(j);{var C=ee=>{var X=Ie();H(()=>ce(X,t())),x(ee,X)},V=ee=>{var X=yo();Ae(X,21,s,Ne,(de,ae)=>{var te=wo(),ge={},Me=B(te,!0);q(te),H(()=>{ge!==(ge=u(ae))&&(te.value=(te.__value=u(ae))==null?"":u(ae)),ce(Me,u(ae))}),x(de,te)}),q(X),H(()=>X.disabled=o()),Vs(X,t),x(ee,X)};se(N,ee=>{o()?ee(C):ee(V,!1)})}x(F,j)};se(D,F=>{r.type=="select"&&F(U)},!0)}x(w,R)};se(y,w=>{r.type=="date"?w(k):w(S,!1)},!0)}x(P,_)};se(b,P=>{r.type=="text"||r.type=="currency"?P(f):P(O,!1)})}q(E),H(()=>T=_r(E,T,{contenteditable:o()||r.type=="select"?!1:"plaintext-only",class:`${r.type}	${i()}`,onfocus:c,onblur:g,ondblclick:m,...a},"svelte-1lhzzgw")),x(e,E),ue()}var Po=(e,r,t)=>r()(Ot(u(t))),Go=M("<tr><!><!><!><!><!><!><!><!><!><!><!><!><!><!></tr>");function Oo(e,r){le(r,!0);let t=Z(r,"onchange",3,()=>{}),o=Z(r,"ondblclick",3,()=>{}),s=re(fe(r.trade));yt(()=>{J(s,fe(r.trade))});let i=W(()=>u(s).status=="reflecting"||u(s).status=="closed"||u(s).status=="canceled");const a=()=>{const C=Zr(u(s).longShort,u(s).amount/2,u(s).entry,u(s).exit),V=Zr(u(s).longShort,u(s).amount/2,u(s).entry,u(s).takeProfitHalf||u(s).exit);J(s,fe({...u(s),longShort:To(u(s).entry,u(s).stopLoss),risk:vo(u(s).account,u(s).amount,u(s).entry,u(s).stopLoss),riskRewardRatio:bo(u(s).entry,u(s).takeProfit,u(s).stopLoss),pnl:C+V})),t()(Ot(u(s)))};var c=Go();c.__dblclick=[Po,o,s],c.__change=a;var g=B(c);Y(g,{type:"select",options:fo,disabled:!1,get value(){return u(s).status},set value(C){u(s).status=C}});var E=I(g);Y(E,{type:"date",get value(){return u(s).date}});var m=I(E);Y(m,{type:"select",options:_o,get disabled(){return u(i)},get value(){return u(s).symbol},set value(C){u(s).symbol=C}});var T=I(m);Y(T,{type:"select",options:Eo,get disabled(){return u(i)},get value(){return u(s).timeFrame},set value(C){u(s).timeFrame=C}});var b=I(T),f=W(()=>u(s).longShort=="short"?"red":"green");Y(b,{type:"text",get value(){return u(s).longShort},get color(){return u(f)}});var O=I(b);Y(O,{type:"currency",get disabled(){return u(i)},get value(){return u(s).account},set value(C){u(s).account=C}});var P=I(O);Y(P,{type:"currency",get disabled(){return u(i)},get value(){return u(s).amount},set value(C){u(s).amount=C}});var _=I(P);Y(_,{type:"currency",get disabled(){return u(i)},get value(){return u(s).entry},set value(C){u(s).entry=C}});var y=I(_);Y(y,{type:"currency",get disabled(){return u(i)},get value(){return u(s).takeProfit},set value(C){u(s).takeProfit=C}});var k=I(y);Y(k,{type:"currency",get disabled(){return u(i)},get value(){return u(s).stopLoss},set value(C){u(s).stopLoss=C}});var S=I(k);Y(S,{type:"currency",get disabled(){return u(i)},get value(){return u(s).takeProfitHalf},set value(C){u(s).takeProfitHalf=C}});var w=I(S);Y(w,{type:"currency",get disabled(){return u(i)},get value(){return u(s).exit},set value(C){u(s).exit=C}});var R=I(w),D=W(()=>"%"+(u(s).risk*100).toFixed(2));Y(R,{type:"text",get value(){return u(D)}});var U=I(R),F=W(()=>u(s).pnl.toFixed(2)),j=W(()=>u(s).pnl==0?"":u(s).pnl<0?"red":"green"),N=W(()=>(100/u(s).account*u(s).pnl).toFixed(2)+"%");Y(U,{type:"currency",get value(){return u(F)},get color(){return u(j)},get title(){return u(N)}}),q(c),H(()=>Hs(c,`${u(s).status??""} svelte-1x45f01`)),Pt("blur",c,a),x(e,c),ue()}$e(["dblclick","change"]);var Ro=M('<tr class="summary svelte-90fhec"><td colspan="13"> </td><!></tr> <!>',1),Ao=M("<table><thead><tr><th>STATUS</th><th>DATE</th><th>SYMBOL</th><th>TF</th><th>L / S</th><th>ACCOUNT</th><th>AMOUNT</th><th>ENTRY</th><th>TP</th><th>SL</th><th>TP 1/2</th><th>EXIT</th><th>RISK</th><th>PNL</th></tr></thead><tbody></tbody></table>");function So(e,r){le(r,!0);const t=(c,g)=>{r.onchange(r.trades.toSpliced(c,1,g))},o=W(()=>{const c=new Map;return r.trades.forEach(g=>{var m;const E=new Date(g.date).toLocaleString("default",{month:"long"});c.has(E)||c.set(E,[]),(m=c.get(E))==null||m.push(g)}),c});var s=Ao(),i=I(B(s));Ae(i,21,()=>u(o),Ne,(c,g)=>{let E=()=>u(g)[0],m=()=>u(g)[1];var T=Ro();const b=W(()=>ar.getTotalPnl(m())),f=W(()=>100/m()[m().length-1].account*u(b));var O=me(T),P=B(O),_=B(P);H(()=>ce(_,`${E().toUpperCase()??""} (${m().length??""})`)),q(P);var y=I(P),k=W(()=>u(b)>0?"green":"red"),S=W(()=>u(f).toFixed(2)+"%");Y(y,{type:"currency",get value(){return u(b)},get color(){return u(k)},get title(){return u(S)}}),q(O);var w=I(O,2);Ae(w,19,m,R=>R.date,(R,D,U)=>{Oo(R,{get trade(){return u(D)},onchange:F=>t(u(U),F),get ondblclick(){return r.ondblclick}})}),x(c,T)}),q(i),q(s),x(e,s),ue()}const Xe="trading",Ze="trades.json",er="database";class rr{static async getUser(r){try{const{data:t}=await r.rest.users.getAuthenticated();return console.log("Token is valid. Authenticated as:",t.login),t}catch(t){return console.error("An error occurred:",t),null}}static async getTrades(r,t){try{const{data:o}=await r.rest.repos.getContent({owner:t||"",repo:Xe,path:Ze,ref:er,headers:{"If-None-Match":""}});return"content"in o?JSON.parse(atob(o.content)):[]}catch(o){return console.error("An error occurred while fetching trades:",o),[]}}static async setTrades(r,t,o){try{const{data:s}=await r.rest.repos.getContent({owner:t||"",repo:Xe,path:Ze,ref:er}),i=Array.isArray(s)?s[0]:s;if("sha"in i){const a=btoa(JSON.stringify(o));return await r.rest.repos.createOrUpdateFileContents({owner:t,repo:Xe,path:Ze,branch:er,message:"Trades synced",content:a,sha:i.sha}),console.log("File updated successfully!"),!0}}catch(s){console.error("An error occurred while setting trades:",s)}return!1}}function Be(){return typeof navigator=="object"&&"userAgent"in navigator?navigator.userAgent:typeof process=="object"&&process.version!==void 0?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}function vr(e,r,t,o){if(typeof t!="function")throw new Error("method for before hook must be a function");return o||(o={}),Array.isArray(r)?r.reverse().reduce((s,i)=>vr.bind(null,e,i,s,o),t)():Promise.resolve().then(()=>e.registry[r]?e.registry[r].reduce((s,i)=>i.hook.bind(null,s,o),t)():t(o))}function Fo(e,r,t,o){const s=o;e.registry[t]||(e.registry[t]=[]),r==="before"&&(o=(i,a)=>Promise.resolve().then(s.bind(null,a)).then(i.bind(null,a))),r==="after"&&(o=(i,a)=>{let c;return Promise.resolve().then(i.bind(null,a)).then(g=>(c=g,s(c,a))).then(()=>c)}),r==="error"&&(o=(i,a)=>Promise.resolve().then(i.bind(null,a)).catch(c=>s(c,a))),e.registry[t].push({hook:o,orig:s})}function Co(e,r,t){if(!e.registry[r])return;const o=e.registry[r].map(s=>s.orig).indexOf(t);o!==-1&&e.registry[r].splice(o,1)}const et=Function.bind,rt=et.bind(et);function Lt(e,r,t){const o=rt(Co,null).apply(null,t?[r,t]:[r]);e.api={remove:o},e.remove=o,["before","error","after","wrap"].forEach(s=>{const i=t?[r,s,t]:[r,s];e[s]=e.api[s]=rt(Fo,null).apply(null,i)})}function Uo(){const e=Symbol("Singular"),r={registry:{}},t=vr.bind(null,r,e);return Lt(t,r,e),t}function Do(){const e={registry:{}},r=vr.bind(null,e);return Lt(r,e),r}const Lo={Singular:Uo,Collection:Do};var Io="0.0.0-development",xo=`octokit-endpoint.js/${Io} ${Be()}`,jo={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":xo},mediaType:{format:""}};function qo(e){return e?Object.keys(e).reduce((r,t)=>(r[t.toLowerCase()]=e[t],r),{}):{}}function No(e){if(typeof e!="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]")return!1;const r=Object.getPrototypeOf(e);if(r===null)return!0;const t=Object.prototype.hasOwnProperty.call(r,"constructor")&&r.constructor;return typeof t=="function"&&t instanceof t&&Function.prototype.call(t)===Function.prototype.call(e)}function It(e,r){const t=Object.assign({},e);return Object.keys(r).forEach(o=>{No(r[o])?o in e?t[o]=It(e[o],r[o]):Object.assign(t,{[o]:r[o]}):Object.assign(t,{[o]:r[o]})}),t}function tt(e){for(const r in e)e[r]===void 0&&delete e[r];return e}function cr(e,r,t){var s;if(typeof r=="string"){let[i,a]=r.split(" ");t=Object.assign(a?{method:i,url:a}:{url:i},t)}else t=Object.assign({},r);t.headers=qo(t.headers),tt(t),tt(t.headers);const o=It(e||{},t);return t.url==="/graphql"&&(e&&((s=e.mediaType.previews)!=null&&s.length)&&(o.mediaType.previews=e.mediaType.previews.filter(i=>!o.mediaType.previews.includes(i)).concat(o.mediaType.previews)),o.mediaType.previews=(o.mediaType.previews||[]).map(i=>i.replace(/-preview/,""))),o}function $o(e,r){const t=/\?/.test(e)?"&":"?",o=Object.keys(r);return o.length===0?e:e+t+o.map(s=>s==="q"?"q="+r.q.split("+").map(encodeURIComponent).join("+"):`${s}=${encodeURIComponent(r[s])}`).join("&")}var Bo=/\{[^}]+\}/g;function Mo(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function Ho(e){const r=e.match(Bo);return r?r.map(Mo).reduce((t,o)=>t.concat(o),[]):[]}function st(e,r){const t={__proto__:null};for(const o of Object.keys(e))r.indexOf(o)===-1&&(t[o]=e[o]);return t}function xt(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(r){return/%[0-9A-Fa-f]/.test(r)||(r=encodeURI(r).replace(/%5B/g,"[").replace(/%5D/g,"]")),r}).join("")}function be(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(r){return"%"+r.charCodeAt(0).toString(16).toUpperCase()})}function Pe(e,r,t){return r=e==="+"||e==="#"?xt(r):be(r),t?be(t)+"="+r:r}function Ee(e){return e!=null}function tr(e){return e===";"||e==="&"||e==="?"}function Wo(e,r,t,o){var s=e[t],i=[];if(Ee(s)&&s!=="")if(typeof s=="string"||typeof s=="number"||typeof s=="boolean")s=s.toString(),o&&o!=="*"&&(s=s.substring(0,parseInt(o,10))),i.push(Pe(r,s,tr(r)?t:""));else if(o==="*")Array.isArray(s)?s.filter(Ee).forEach(function(a){i.push(Pe(r,a,tr(r)?t:""))}):Object.keys(s).forEach(function(a){Ee(s[a])&&i.push(Pe(r,s[a],a))});else{const a=[];Array.isArray(s)?s.filter(Ee).forEach(function(c){a.push(Pe(r,c))}):Object.keys(s).forEach(function(c){Ee(s[c])&&(a.push(be(c)),a.push(Pe(r,s[c].toString())))}),tr(r)?i.push(be(t)+"="+a.join(",")):a.length!==0&&i.push(a.join(","))}else r===";"?Ee(s)&&i.push(be(t)):s===""&&(r==="&"||r==="?")?i.push(be(t)+"="):s===""&&i.push("");return i}function Vo(e){return{expand:zo.bind(null,e)}}function zo(e,r){var t=["+","#",".","/",";","?","&"];return e=e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(o,s,i){if(s){let c="";const g=[];if(t.indexOf(s.charAt(0))!==-1&&(c=s.charAt(0),s=s.substr(1)),s.split(/,/g).forEach(function(E){var m=/([^:\*]*)(?::(\d+)|(\*))?/.exec(E);g.push(Wo(r,c,m[1],m[2]||m[3]))}),c&&c!=="+"){var a=",";return c==="?"?a="&":c!=="#"&&(a=c),(g.length!==0?c:"")+g.join(a)}else return g.join(",")}else return xt(i)}),e==="/"?e:e.replace(/\/$/,"")}function jt(e){var m;let r=e.method.toUpperCase(),t=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),o=Object.assign({},e.headers),s,i=st(e,["method","baseUrl","url","headers","request","mediaType"]);const a=Ho(t);t=Vo(t).expand(i),/^http/.test(t)||(t=e.baseUrl+t);const c=Object.keys(e).filter(T=>a.includes(T)).concat("baseUrl"),g=st(i,c);if(!/application\/octet-stream/i.test(o.accept)&&(e.mediaType.format&&(o.accept=o.accept.split(/,/).map(T=>T.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`)).join(",")),t.endsWith("/graphql")&&(m=e.mediaType.previews)!=null&&m.length)){const T=o.accept.match(/[\w-]+(?=-preview)/g)||[];o.accept=T.concat(e.mediaType.previews).map(b=>{const f=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${b}-preview${f}`}).join(",")}return["GET","HEAD"].includes(r)?t=$o(t,g):"data"in g?s=g.data:Object.keys(g).length&&(s=g),!o["content-type"]&&typeof s<"u"&&(o["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(r)&&typeof s>"u"&&(s=""),Object.assign({method:r,url:t,headers:o},typeof s<"u"?{body:s}:null,e.request?{request:e.request}:null)}function Ko(e,r,t){return jt(cr(e,r,t))}function qt(e,r){const t=cr(e,r),o=Ko.bind(null,t);return Object.assign(o,{DEFAULTS:t,defaults:qt.bind(null,t),merge:cr.bind(null,t),parse:jt})}var Jo=qt(null,jo),ot=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function Qo(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var ve={},nt;function Yo(){if(nt)return ve;nt=1;const e=function(){};e.prototype=Object.create(null);const r=/; *([!#$%&'*+.^\w`|~-]+)=("(?:[\v\u0020\u0021\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\v\u0020-\u00ff])*"|[!#$%&'*+.^\w`|~-]+) */gu,t=/\\([\v\u0020-\u00ff])/gu,o=/^[!#$%&'*+.^\w|~-]+\/[!#$%&'*+.^\w|~-]+$/u,s={type:"",parameters:new e};Object.freeze(s.parameters),Object.freeze(s);function i(c){if(typeof c!="string")throw new TypeError("argument header is required and must be a string");let g=c.indexOf(";");const E=g!==-1?c.slice(0,g).trim():c.trim();if(o.test(E)===!1)throw new TypeError("invalid media type");const m={type:E.toLowerCase(),parameters:new e};if(g===-1)return m;let T,b,f;for(r.lastIndex=g;b=r.exec(c);){if(b.index!==g)throw new TypeError("invalid parameter format");g+=b[0].length,T=b[1].toLowerCase(),f=b[2],f[0]==='"'&&(f=f.slice(1,f.length-1),t.test(f)&&(f=f.replace(t,"$1"))),m.parameters[T]=f}if(g!==c.length)throw new TypeError("invalid parameter format");return m}function a(c){if(typeof c!="string")return s;let g=c.indexOf(";");const E=g!==-1?c.slice(0,g).trim():c.trim();if(o.test(E)===!1)return s;const m={type:E.toLowerCase(),parameters:new e};if(g===-1)return m;let T,b,f;for(r.lastIndex=g;b=r.exec(c);){if(b.index!==g)return s;g+=b[0].length,T=b[1].toLowerCase(),f=b[2],f[0]==='"'&&(f=f.slice(1,f.length-1),t.test(f)&&(f=f.replace(t,"$1"))),m.parameters[T]=f}return g!==c.length?s:m}return ve.default={parse:i,safeParse:a},ve.parse=i,ve.safeParse=a,ve.defaultContentType=s,ve}var Xo=Yo();class Ge extends Error{constructor(t,o,s){super(t);$(this,"name");$(this,"status");$(this,"request");$(this,"response");this.name="HttpError",this.status=Number.parseInt(o),Number.isNaN(this.status)&&(this.status=0),"response"in s&&(this.response=s.response);const i=Object.assign({},s.request);s.request.headers.authorization&&(i.headers=Object.assign({},s.request.headers,{authorization:s.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),i.url=i.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=i}}var Zo="0.0.0-development",en={headers:{"user-agent":`octokit-request.js/${Zo} ${Be()}`}};function rn(e){if(typeof e!="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]")return!1;const r=Object.getPrototypeOf(e);if(r===null)return!0;const t=Object.prototype.hasOwnProperty.call(r,"constructor")&&r.constructor;return typeof t=="function"&&t instanceof t&&Function.prototype.call(t)===Function.prototype.call(e)}async function it(e){var T,b,f,O,P;const r=((T=e.request)==null?void 0:T.fetch)||globalThis.fetch;if(!r)throw new Error("fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing");const t=((b=e.request)==null?void 0:b.log)||console,o=((f=e.request)==null?void 0:f.parseSuccessResponseBody)!==!1,s=rn(e.body)||Array.isArray(e.body)?JSON.stringify(e.body):e.body,i=Object.fromEntries(Object.entries(e.headers).map(([_,y])=>[_,String(y)]));let a;try{a=await r(e.url,{method:e.method,body:s,redirect:(O=e.request)==null?void 0:O.redirect,headers:i,signal:(P=e.request)==null?void 0:P.signal,...e.body&&{duplex:"half"}})}catch(_){let y="Unknown Error";if(_ instanceof Error){if(_.name==="AbortError")throw _.status=500,_;y=_.message,_.name==="TypeError"&&"cause"in _&&(_.cause instanceof Error?y=_.cause.message:typeof _.cause=="string"&&(y=_.cause))}const k=new Ge(y,500,{request:e});throw k.cause=_,k}const c=a.status,g=a.url,E={};for(const[_,y]of a.headers)E[_]=y;const m={url:g,status:c,headers:E,data:""};if("deprecation"in E){const _=E.link&&E.link.match(/<([^>]+)>; rel="deprecation"/),y=_&&_.pop();t.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${E.sunset}${y?`. See ${y}`:""}`)}if(c===204||c===205)return m;if(e.method==="HEAD"){if(c<400)return m;throw new Ge(a.statusText,c,{response:m,request:e})}if(c===304)throw m.data=await sr(a),new Ge("Not modified",c,{response:m,request:e});if(c>=400)throw m.data=await sr(a),new Ge(tn(m.data),c,{response:m,request:e});return m.data=o?await sr(a):a.body,m}async function sr(e){var o;const r=e.headers.get("content-type");if(!r)return e.text().catch(()=>"");const t=Xo.safeParse(r);if(t.type==="application/json"){let s="";try{return s=await e.text(),JSON.parse(s)}catch{return s}}else return t.type.startsWith("text/")||((o=t.parameters.charset)==null?void 0:o.toLowerCase())==="utf-8"?e.text().catch(()=>""):e.arrayBuffer().catch(()=>new ArrayBuffer(0))}function tn(e){if(typeof e=="string")return e;if(e instanceof ArrayBuffer)return"Unknown error";if("message"in e){const r="documentation_url"in e?` - ${e.documentation_url}`:"";return Array.isArray(e.errors)?`${e.message}: ${e.errors.map(t=>JSON.stringify(t)).join(", ")}${r}`:`${e.message}${r}`}return`Unknown error: ${JSON.stringify(e)}`}function lr(e,r){const t=e.defaults(r);return Object.assign(function(s,i){const a=t.merge(s,i);if(!a.request||!a.request.hook)return it(t.parse(a));const c=(g,E)=>it(t.parse(t.merge(g,E)));return Object.assign(c,{endpoint:t,defaults:lr.bind(null,t)}),a.request.hook(c,a)},{endpoint:t,defaults:lr.bind(null,t)})}var ur=lr(Jo,en),sn="0.0.0-development";function on(e){return`Request failed due to following response errors:
`+e.errors.map(r=>` - ${r.message}`).join(`
`)}var nn=class extends Error{constructor(r,t,o){super(on(o));$(this,"name","GraphqlResponseError");$(this,"errors");$(this,"data");this.request=r,this.headers=t,this.response=o,this.errors=o.errors,this.data=o.data,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},an=["method","baseUrl","url","headers","request","query","mediaType"],cn=["query","method","url"],at=/\/api\/v3\/?$/;function ln(e,r,t){if(t){if(typeof r=="string"&&"query"in t)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(const a in t)if(cn.includes(a))return Promise.reject(new Error(`[@octokit/graphql] "${a}" cannot be used as variable name`))}const o=typeof r=="string"?Object.assign({query:r},t):r,s=Object.keys(o).reduce((a,c)=>an.includes(c)?(a[c]=o[c],a):(a.variables||(a.variables={}),a.variables[c]=o[c],a),{}),i=o.baseUrl||e.endpoint.DEFAULTS.baseUrl;return at.test(i)&&(s.url=i.replace(at,"/api/graphql")),e(s).then(a=>{if(a.data.errors){const c={};for(const g of Object.keys(a.headers))c[g]=a.headers[g];throw new nn(s,c,a.data)}return a.data.data})}function Tr(e,r){const t=e.defaults(r);return Object.assign((s,i)=>ln(t,s,i),{defaults:Tr.bind(null,t),endpoint:t.endpoint})}Tr(ur,{headers:{"user-agent":`octokit-graphql.js/${sn} ${Be()}`},method:"POST",url:"/graphql"});function un(e){return Tr(e,{method:"POST",url:"/graphql"})}var pn=/^v1\./,dn=/^ghs_/,gn=/^ghu_/;async function hn(e){const r=e.split(/\./).length===3,t=pn.test(e)||dn.test(e),o=gn.test(e);return{type:"token",token:e,tokenType:r?"app":t?"installation":o?"user-to-server":"oauth"}}function mn(e){return e.split(/\./).length===3?`bearer ${e}`:`token ${e}`}async function fn(e,r,t,o){const s=r.endpoint.merge(t,o);return s.headers.authorization=mn(e),r(s)}var _n=function(r){if(!r)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if(typeof r!="string")throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return r=r.replace(/^(token|bearer) +/i,""),Object.assign(hn.bind(null,r),{hook:fn.bind(null,r)})};const Nt="6.1.2",ct=()=>{},En=console.warn.bind(console),vn=console.error.bind(console),lt=`octokit-core.js/${Nt} ${Be()}`;var De;let Tn=(De=class{constructor(r={}){$(this,"request");$(this,"graphql");$(this,"log");$(this,"hook");$(this,"auth");const t=new Lo.Collection,o={baseUrl:ur.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},r.request,{hook:t.bind(null,"request")}),mediaType:{previews:[],format:""}};if(o.headers["user-agent"]=r.userAgent?`${r.userAgent} ${lt}`:lt,r.baseUrl&&(o.baseUrl=r.baseUrl),r.previews&&(o.mediaType.previews=r.previews),r.timeZone&&(o.headers["time-zone"]=r.timeZone),this.request=ur.defaults(o),this.graphql=un(this.request).defaults(o),this.log=Object.assign({debug:ct,info:ct,warn:En,error:vn},r.log),this.hook=t,r.authStrategy){const{authStrategy:i,...a}=r,c=i(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:a},r.auth));t.wrap("request",c.hook),this.auth=c}else if(!r.auth)this.auth=async()=>({type:"unauthenticated"});else{const i=_n(r.auth);t.wrap("request",i.hook),this.auth=i}const s=this.constructor;for(let i=0;i<s.plugins.length;++i)Object.assign(this,s.plugins[i](this,r))}static defaults(r){return class extends this{constructor(...o){const s=o[0]||{};if(typeof r=="function"){super(r(s));return}super(Object.assign({},r,s,s.userAgent&&r.userAgent?{userAgent:`${s.userAgent} ${r.userAgent}`}:null))}}}static plugin(...r){var s;const t=this.plugins;return s=class extends this{},$(s,"plugins",t.concat(r.filter(i=>!t.includes(i)))),s}},$(De,"VERSION",Nt),$(De,"plugins",[]),De);var bn="0.0.0-development";function wn(e){if(!e.data)return{...e,data:[]};if(!("total_count"in e.data&&!("url"in e.data)))return e;const t=e.data.incomplete_results,o=e.data.repository_selection,s=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;const i=Object.keys(e.data)[0],a=e.data[i];return e.data=a,typeof t<"u"&&(e.data.incomplete_results=t),typeof o<"u"&&(e.data.repository_selection=o),e.data.total_count=s,e}function br(e,r,t){const o=typeof r=="function"?r.endpoint(t):e.request.endpoint(r,t),s=typeof r=="function"?r:e.request,i=o.method,a=o.headers;let c=o.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!c)return{done:!0};try{const g=await s({method:i,url:c,headers:a}),E=wn(g);return c=((E.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:E}}catch(g){if(g.status!==409)throw g;return c="",{value:{status:200,headers:{},data:[]}}}}})}}function $t(e,r,t,o){return typeof t=="function"&&(o=t,t=void 0),Bt(e,[],br(e,r,t)[Symbol.asyncIterator](),o)}function Bt(e,r,t,o){return t.next().then(s=>{if(s.done)return r;let i=!1;function a(){i=!0}return r=r.concat(o?o(s.value,a):s.value.data),i?r:Bt(e,r,t,o)})}Object.assign($t,{iterator:br});function Mt(e){return{paginate:Object.assign($t.bind(null,e),{iterator:br.bind(null,e)})}}Mt.VERSION=bn;var yn=(e,r)=>`The cursor at "${e.join(",")}" did not change its value "${r}" after a page transition. Please make sure your that your query is set up correctly.`,kn=class extends Error{constructor(r,t){super(yn(r.pathInQuery,t));$(this,"name","MissingCursorChangeError");this.pageInfo=r,this.cursorValue=t,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},Pn=class extends Error{constructor(r){super(`No pageInfo property found in response. Please make sure to specify the pageInfo in your query. Response-Data: ${JSON.stringify(r,null,2)}`);$(this,"name","MissingPageInfo");this.response=r,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},Gn=e=>Object.prototype.toString.call(e)==="[object Object]";function Ht(e){const r=Wt(e,"pageInfo");if(r.length===0)throw new Pn(e);return r}var Wt=(e,r,t=[])=>{for(const o of Object.keys(e)){const s=[...t,o],i=e[o];if(Gn(i)){if(i.hasOwnProperty(r))return s;const a=Wt(i,r,s);if(a.length>0)return a}}return[]},Re=(e,r)=>r.reduce((t,o)=>t[o],e),or=(e,r,t)=>{const o=r[r.length-1],s=[...r].slice(0,-1),i=Re(e,s);typeof t=="function"?i[o]=t(i[o]):i[o]=t},On=e=>{const r=Ht(e);return{pathInQuery:r,pageInfo:Re(e,[...r,"pageInfo"])}},Vt=e=>e.hasOwnProperty("hasNextPage"),Rn=e=>Vt(e)?e.endCursor:e.startCursor,An=e=>Vt(e)?e.hasNextPage:e.hasPreviousPage,zt=e=>(r,t={})=>{let o=!0,s={...t};return{[Symbol.asyncIterator]:()=>({async next(){if(!o)return{done:!0,value:{}};const i=await e.graphql(r,s),a=On(i),c=Rn(a.pageInfo);if(o=An(a.pageInfo),o&&c===s.cursor)throw new kn(a,c);return s={...s,cursor:c},{done:!1,value:i}}})}},Sn=(e,r)=>{if(Object.keys(e).length===0)return Object.assign(e,r);const t=Ht(e),o=[...t,"nodes"],s=Re(r,o);s&&or(e,o,g=>[...g,...s]);const i=[...t,"edges"],a=Re(r,i);a&&or(e,i,g=>[...g,...a]);const c=[...t,"pageInfo"];return or(e,c,Re(r,c)),e},Fn=e=>{const r=zt(e);return async(t,o={})=>{let s={};for await(const i of r(t,o))s=Sn(s,i);return s}};function Cn(e){return{graphql:Object.assign(e.graphql,{paginate:Object.assign(Fn(e),{iterator:zt(e)})})}}const Un="13.2.6",Dn={actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createEnvironmentVariable:["POST /repos/{owner}/{repo}/environments/{environment_name}/variables"],createOrUpdateEnvironmentSecret:["PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createOrgVariable:["POST /orgs/{org}/actions/variables"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createRepoVariable:["POST /repos/{owner}/{repo}/actions/variables"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],deleteEnvironmentVariable:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteRepoVariable:["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],forceCancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"],generateRunnerJitconfigForOrg:["POST /orgs/{org}/actions/runners/generate-jitconfig"],generateRunnerJitconfigForRepo:["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getCustomOidcSubClaimForRepo:["GET /repos/{owner}/{repo}/actions/oidc/customization/sub"],getEnvironmentPublicKey:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],getEnvironmentVariable:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getOrgVariable:["GET /orgs/{org}/actions/variables/{name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getRepoVariable:["GET /repos/{owner}/{repo}/actions/variables/{name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets"],listEnvironmentVariables:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listOrgVariables:["GET /orgs/{org}/actions/variables"],listRepoOrganizationSecrets:["GET /repos/{owner}/{repo}/actions/organization-secrets"],listRepoOrganizationVariables:["GET /repos/{owner}/{repo}/actions/organization-variables"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoVariables:["GET /repos/{owner}/{repo}/actions/variables"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedReposForOrgVariable:["GET /orgs/{org}/actions/variables/{name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],reviewCustomGatesForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setCustomOidcSubClaimForRepo:["PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedReposForOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"],updateEnvironmentVariable:["PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],updateOrgVariable:["PATCH /orgs/{org}/actions/variables/{name}"],updateRepoVariable:["PATCH /repos/{owner}/{repo}/actions/variables/{name}"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsDone:["DELETE /notifications/threads/{thread_id}"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallationRequestsForAuthenticatedApp:["GET /app/installation-requests"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getCodeqlDatabase:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getDefaultSetup:["GET /repos/{owner}/{repo}/code-scanning/default-setup"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listCodeqlDatabases:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],updateDefaultSetup:["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],checkPermissionsForDevcontainer:["GET /repos/{owner}/{repo}/codespaces/permissions_check"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getCodespacesForUserInOrg:["GET /orgs/{org}/members/{username}/codespaces"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getOrgPublicKey:["GET /orgs/{org}/codespaces/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listOrgSecrets:["GET /orgs/{org}/codespaces/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],preFlightWithRepoForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/new"],publishForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/publish"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},copilot:{addCopilotSeatsForTeams:["POST /orgs/{org}/copilot/billing/selected_teams"],addCopilotSeatsForUsers:["POST /orgs/{org}/copilot/billing/selected_users"],cancelCopilotSeatAssignmentForTeams:["DELETE /orgs/{org}/copilot/billing/selected_teams"],cancelCopilotSeatAssignmentForUsers:["DELETE /orgs/{org}/copilot/billing/selected_users"],getCopilotOrganizationDetails:["GET /orgs/{org}/copilot/billing"],getCopilotSeatDetailsForUser:["GET /orgs/{org}/members/{username}/copilot"],listCopilotSeats:["GET /orgs/{org}/copilot/billing/seats"],usageMetricsForEnterprise:["GET /enterprises/{enterprise}/copilot/usage"],usageMetricsForOrg:["GET /orgs/{org}/copilot/usage"],usageMetricsForTeam:["GET /orgs/{org}/team/{team_slug}/copilot/usage"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getAlert:["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/dependabot/alerts"],listAlertsForOrg:["GET /orgs/{org}/dependabot/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/dependabot/alerts"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],updateAlert:["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],exportSbom:["GET /repos/{owner}/{repo}/dependency-graph/sbom"]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],checkUserCanBeAssignedToIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getAllVersions:["GET /versions"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"]},oidc:{getOidcCustomSubTemplateForOrg:["GET /orgs/{org}/actions/oidc/customization/sub"],updateOidcCustomSubTemplateForOrg:["PUT /orgs/{org}/actions/oidc/customization/sub"]},orgs:{addSecurityManagerTeam:["PUT /orgs/{org}/security-managers/teams/{team_slug}"],assignTeamToOrgRole:["PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],assignUserToOrgRole:["PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createCustomOrganizationRole:["POST /orgs/{org}/organization-roles"],createInvitation:["POST /orgs/{org}/invitations"],createOrUpdateCustomProperties:["PATCH /orgs/{org}/properties/schema"],createOrUpdateCustomPropertiesValuesForRepos:["PATCH /orgs/{org}/properties/values"],createOrUpdateCustomProperty:["PUT /orgs/{org}/properties/schema/{custom_property_name}"],createWebhook:["POST /orgs/{org}/hooks"],delete:["DELETE /orgs/{org}"],deleteCustomOrganizationRole:["DELETE /orgs/{org}/organization-roles/{role_id}"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],enableOrDisableSecurityProductOnAllOrgRepos:["POST /orgs/{org}/{security_product}/{enablement}"],get:["GET /orgs/{org}"],getAllCustomProperties:["GET /orgs/{org}/properties/schema"],getCustomProperty:["GET /orgs/{org}/properties/schema/{custom_property_name}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getOrgRole:["GET /orgs/{org}/organization-roles/{role_id}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listCustomPropertiesValuesForRepos:["GET /orgs/{org}/properties/values"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOrgRoleTeams:["GET /orgs/{org}/organization-roles/{role_id}/teams"],listOrgRoleUsers:["GET /orgs/{org}/organization-roles/{role_id}/users"],listOrgRoles:["GET /orgs/{org}/organization-roles"],listOrganizationFineGrainedPermissions:["GET /orgs/{org}/organization-fine-grained-permissions"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPatGrantRepositories:["GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"],listPatGrantRequestRepositories:["GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"],listPatGrantRequests:["GET /orgs/{org}/personal-access-token-requests"],listPatGrants:["GET /orgs/{org}/personal-access-tokens"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listSecurityManagerTeams:["GET /orgs/{org}/security-managers"],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],patchCustomOrganizationRole:["PATCH /orgs/{org}/organization-roles/{role_id}"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeCustomProperty:["DELETE /orgs/{org}/properties/schema/{custom_property_name}"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],removeSecurityManagerTeam:["DELETE /orgs/{org}/security-managers/teams/{team_slug}"],reviewPatGrantRequest:["POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"],reviewPatGrantRequestsInBulk:["POST /orgs/{org}/personal-access-token-requests"],revokeAllOrgRolesTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}"],revokeAllOrgRolesUser:["DELETE /orgs/{org}/organization-roles/users/{username}"],revokeOrgRoleTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],revokeOrgRoleUser:["DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updatePatAccess:["POST /orgs/{org}/personal-access-tokens/{pat_id}"],updatePatAccesses:["POST /orgs/{org}/personal-access-tokens"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listDockerMigrationConflictingPackagesForAuthenticatedUser:["GET /user/docker/conflicts"],listDockerMigrationConflictingPackagesForOrganization:["GET /orgs/{org}/docker/conflicts"],listDockerMigrationConflictingPackagesForUser:["GET /users/{username}/docker/conflicts"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}"],createCard:["POST /projects/columns/{column_id}/cards"],createColumn:["POST /projects/{project_id}/columns"],createForAuthenticatedUser:["POST /user/projects"],createForOrg:["POST /orgs/{org}/projects"],createForRepo:["POST /repos/{owner}/{repo}/projects"],delete:["DELETE /projects/{project_id}"],deleteCard:["DELETE /projects/columns/cards/{card_id}"],deleteColumn:["DELETE /projects/columns/{column_id}"],get:["GET /projects/{project_id}"],getCard:["GET /projects/columns/cards/{card_id}"],getColumn:["GET /projects/columns/{column_id}"],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission"],listCards:["GET /projects/columns/{column_id}/cards"],listCollaborators:["GET /projects/{project_id}/collaborators"],listColumns:["GET /projects/{project_id}/columns"],listForOrg:["GET /orgs/{org}/projects"],listForRepo:["GET /repos/{owner}/{repo}/projects"],listForUser:["GET /users/{username}/projects"],moveCard:["POST /projects/columns/cards/{card_id}/moves"],moveColumn:["POST /projects/columns/{column_id}/moves"],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}"],update:["PATCH /projects/{project_id}"],updateCard:["PATCH /projects/columns/cards/{card_id}"],updateColumn:["PATCH /projects/columns/{column_id}"]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],cancelPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"],checkAutomatedSecurityFixes:["GET /repos/{owner}/{repo}/automated-security-fixes"],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkPrivateVulnerabilityReporting:["GET /repos/{owner}/{repo}/private-vulnerability-reporting"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentBranchPolicy:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],createDeploymentProtectionRule:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateCustomPropertiesValues:["PATCH /repos/{owner}/{repo}/properties/values"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createOrgRuleset:["POST /orgs/{org}/rulesets"],createPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createRepoRuleset:["POST /repos/{owner}/{repo}/rulesets"],createTagProtection:["POST /repos/{owner}/{repo}/tags/protection"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDeploymentBranchPolicy:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deleteOrgRuleset:["DELETE /orgs/{org}/rulesets/{ruleset_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteRepoRuleset:["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],deleteTagProtection:["DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableDeploymentProtectionRule:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],disablePrivateVulnerabilityReporting:["DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enablePrivateVulnerabilityReporting:["PUT /repos/{owner}/{repo}/private-vulnerability-reporting"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllDeploymentProtectionRules:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getBranchRules:["GET /repos/{owner}/{repo}/rules/branches/{branch}"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getCustomDeploymentProtectionRule:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],getCustomPropertiesValues:["GET /repos/{owner}/{repo}/properties/values"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentBranchPolicy:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getOrgRuleSuite:["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],getOrgRuleSuites:["GET /orgs/{org}/rulesets/rule-suites"],getOrgRuleset:["GET /orgs/{org}/rulesets/{ruleset_id}"],getOrgRulesets:["GET /orgs/{org}/rulesets"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesDeployment:["GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getRepoRuleSuite:["GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"],getRepoRuleSuites:["GET /repos/{owner}/{repo}/rulesets/rule-suites"],getRepoRuleset:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],getRepoRulesets:["GET /repos/{owner}/{repo}/rulesets"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listActivities:["GET /repos/{owner}/{repo}/activity"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listCustomDeploymentRuleIntegrations:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentBranchPolicies:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTagProtection:["GET /repos/{owner}/{repo}/tags/protection"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateDeploymentBranchPolicy:["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateOrgRuleset:["PUT /orgs/{org}/rulesets/{ruleset_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateRepoRuleset:["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},securityAdvisories:{createFork:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"],createPrivateVulnerabilityReport:["POST /repos/{owner}/{repo}/security-advisories/reports"],createRepositoryAdvisory:["POST /repos/{owner}/{repo}/security-advisories"],createRepositoryAdvisoryCveRequest:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"],getGlobalAdvisory:["GET /advisories/{ghsa_id}"],getRepositoryAdvisory:["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],listGlobalAdvisories:["GET /advisories"],listOrgRepositoryAdvisories:["GET /orgs/{org}/security-advisories"],listRepositoryAdvisories:["GET /repos/{owner}/{repo}/security-advisories"],updateRepositoryAdvisory:["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects"],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],addSocialAccountForAuthenticatedUser:["POST /user/social_accounts"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],createSshSigningKeyForAuthenticatedUser:["POST /user/ssh_signing_keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],deleteSocialAccountForAuthenticatedUser:["DELETE /user/social_accounts"],deleteSshSigningKeyForAuthenticatedUser:["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],getSshSigningKeyForAuthenticatedUser:["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],listSocialAccountsForAuthenticatedUser:["GET /user/social_accounts"],listSocialAccountsForUser:["GET /users/{username}/social_accounts"],listSshSigningKeysForAuthenticatedUser:["GET /user/ssh_signing_keys"],listSshSigningKeysForUser:["GET /users/{username}/ssh_signing_keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};var Ln=Dn;const _e=new Map;for(const[e,r]of Object.entries(Ln))for(const[t,o]of Object.entries(r)){const[s,i,a]=o,[c,g]=s.split(/ /),E=Object.assign({method:c,url:g},i);_e.has(e)||_e.set(e,new Map),_e.get(e).set(t,{scope:e,methodName:t,endpointDefaults:E,decorations:a})}const In={has({scope:e},r){return _e.get(e).has(r)},getOwnPropertyDescriptor(e,r){return{value:this.get(e,r),configurable:!0,writable:!0,enumerable:!0}},defineProperty(e,r,t){return Object.defineProperty(e.cache,r,t),!0},deleteProperty(e,r){return delete e.cache[r],!0},ownKeys({scope:e}){return[..._e.get(e).keys()]},set(e,r,t){return e.cache[r]=t},get({octokit:e,scope:r,cache:t},o){if(t[o])return t[o];const s=_e.get(r).get(o);if(!s)return;const{endpointDefaults:i,decorations:a}=s;return a?t[o]=jn(e,r,o,i,a):t[o]=e.request.defaults(i),t[o]}};function xn(e){const r={};for(const t of _e.keys())r[t]=new Proxy({octokit:e,scope:t,cache:{}},In);return r}function jn(e,r,t,o,s){const i=e.request.defaults(o);function a(...c){let g=i.endpoint.merge(...c);if(s.mapToData)return g=Object.assign({},g,{data:g[s.mapToData],[s.mapToData]:void 0}),i(g);if(s.renamed){const[E,m]=s.renamed;e.log.warn(`octokit.${r}.${t}() has been renamed to octokit.${E}.${m}()`)}if(s.deprecated&&e.log.warn(s.deprecated),s.renamedParameters){const E=i.endpoint.merge(...c);for(const[m,T]of Object.entries(s.renamedParameters))m in E&&(e.log.warn(`"${m}" parameter is deprecated for "octokit.${r}.${t}()". Use "${T}" instead`),T in E||(E[T]=E[m]),delete E[m]);return i(E)}return i(...c)}return Object.assign(a,i)}function Kt(e){return{rest:xn(e)}}Kt.VERSION=Un;var qe={exports:{}},qn=qe.exports,ut;function Nn(){return ut||(ut=1,function(e,r){(function(t,o){e.exports=o()})(qn,function(){var t=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof ot<"u"?ot:typeof self<"u"?self:{};function o(A){return A&&A.default||A}var s=function(A,l,n={}){var p,d,h;for(p in l)h=l[p],n[p]=(d=A[p])!=null?d:h;return n},i=function(A,l,n={}){var p,d;for(p in A)d=A[p],l[p]!==void 0&&(n[p]=d);return n},a={load:s,overwrite:i},c;c=class{constructor(l,n){this.incr=l,this.decr=n,this._first=null,this._last=null,this.length=0}push(l){var n;this.length++,typeof this.incr=="function"&&this.incr(),n={value:l,prev:this._last,next:null},this._last!=null?(this._last.next=n,this._last=n):this._first=this._last=n}shift(){var l;if(this._first!=null)return this.length--,typeof this.decr=="function"&&this.decr(),l=this._first.value,(this._first=this._first.next)!=null?this._first.prev=null:this._last=null,l}first(){if(this._first!=null)return this._first.value}getArray(){var l,n,p;for(l=this._first,p=[];l!=null;)p.push((n=l,l=l.next,n.value));return p}forEachShift(l){var n;for(n=this.shift();n!=null;)l(n),n=this.shift()}debug(){var l,n,p,d,h;for(l=this._first,h=[];l!=null;)h.push((n=l,l=l.next,{value:n.value,prev:(p=n.prev)!=null?p.value:void 0,next:(d=n.next)!=null?d.value:void 0}));return h}};var g=c,E;E=class{constructor(l){if(this.instance=l,this._events={},this.instance.on!=null||this.instance.once!=null||this.instance.removeAllListeners!=null)throw new Error("An Emitter already exists for this object");this.instance.on=(n,p)=>this._addListener(n,"many",p),this.instance.once=(n,p)=>this._addListener(n,"once",p),this.instance.removeAllListeners=(n=null)=>n!=null?delete this._events[n]:this._events={}}_addListener(l,n,p){var d;return(d=this._events)[l]==null&&(d[l]=[]),this._events[l].push({cb:p,status:n}),this.instance}listenerCount(l){return this._events[l]!=null?this._events[l].length:0}async trigger(l,...n){var p,d;try{return l!=="debug"&&this.trigger("debug",`Event triggered: ${l}`,n),this._events[l]==null?void 0:(this._events[l]=this._events[l].filter(function(h){return h.status!=="none"}),d=this._events[l].map(async h=>{var v,G;if(h.status!=="none"){h.status==="once"&&(h.status="none");try{return G=typeof h.cb=="function"?h.cb(...n):void 0,typeof(G!=null?G.then:void 0)=="function"?await G:G}catch(L){return v=L,this.trigger("error",v),null}}}),(await Promise.all(d)).find(function(h){return h!=null}))}catch(h){return p=h,this.trigger("error",p),null}}};var m=E,T,b,f;T=g,b=m,f=class{constructor(l){this.Events=new b(this),this._length=0,this._lists=(function(){var n,p,d;for(d=[],n=1,p=l;1<=p?n<=p:n>=p;1<=p?++n:--n)d.push(new T(()=>this.incr(),()=>this.decr()));return d}).call(this)}incr(){if(this._length++===0)return this.Events.trigger("leftzero")}decr(){if(--this._length===0)return this.Events.trigger("zero")}push(l){return this._lists[l.options.priority].push(l)}queued(l){return l!=null?this._lists[l].length:this._length}shiftAll(l){return this._lists.forEach(function(n){return n.forEachShift(l)})}getFirst(l=this._lists){var n,p,d;for(n=0,p=l.length;n<p;n++)if(d=l[n],d.length>0)return d;return[]}shiftLastFrom(l){return this.getFirst(this._lists.slice(l).reverse()).shift()}};var O=f,P;P=class extends Error{};var _=P,y,k,S,w,R;w=10,k=5,R=a,y=_,S=class{constructor(l,n,p,d,h,v,G,L){this.task=l,this.args=n,this.rejectOnDrop=h,this.Events=v,this._states=G,this.Promise=L,this.options=R.load(p,d),this.options.priority=this._sanitizePriority(this.options.priority),this.options.id===d.id&&(this.options.id=`${this.options.id}-${this._randomIndex()}`),this.promise=new this.Promise((z,Q)=>{this._resolve=z,this._reject=Q}),this.retryCount=0}_sanitizePriority(l){var n;return n=~~l!==l?k:l,n<0?0:n>w-1?w-1:n}_randomIndex(){return Math.random().toString(36).slice(2)}doDrop({error:l,message:n="This job has been dropped by Bottleneck"}={}){return this._states.remove(this.options.id)?(this.rejectOnDrop&&this._reject(l??new y(n)),this.Events.trigger("dropped",{args:this.args,options:this.options,task:this.task,promise:this.promise}),!0):!1}_assertStatus(l){var n;if(n=this._states.jobStatus(this.options.id),!(n===l||l==="DONE"&&n===null))throw new y(`Invalid job status ${n}, expected ${l}. Please open an issue at https://github.com/SGrondin/bottleneck/issues`)}doReceive(){return this._states.start(this.options.id),this.Events.trigger("received",{args:this.args,options:this.options})}doQueue(l,n){return this._assertStatus("RECEIVED"),this._states.next(this.options.id),this.Events.trigger("queued",{args:this.args,options:this.options,reachedHWM:l,blocked:n})}doRun(){return this.retryCount===0?(this._assertStatus("QUEUED"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),this.Events.trigger("scheduled",{args:this.args,options:this.options})}async doExecute(l,n,p,d){var h,v,G;this.retryCount===0?(this._assertStatus("RUNNING"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),v={args:this.args,options:this.options,retryCount:this.retryCount},this.Events.trigger("executing",v);try{if(G=await(l!=null?l.schedule(this.options,this.task,...this.args):this.task(...this.args)),n())return this.doDone(v),await d(this.options,v),this._assertStatus("DONE"),this._resolve(G)}catch(L){return h=L,this._onFailure(h,v,n,p,d)}}doExpire(l,n,p){var d,h;return this._states.jobStatus(this.options.id==="RUNNING")&&this._states.next(this.options.id),this._assertStatus("EXECUTING"),h={args:this.args,options:this.options,retryCount:this.retryCount},d=new y(`This job timed out after ${this.options.expiration} ms.`),this._onFailure(d,h,l,n,p)}async _onFailure(l,n,p,d,h){var v,G;if(p())return v=await this.Events.trigger("failed",l,n),v!=null?(G=~~v,this.Events.trigger("retry",`Retrying ${this.options.id} after ${G} ms`,n),this.retryCount++,d(G)):(this.doDone(n),await h(this.options,n),this._assertStatus("DONE"),this._reject(l))}doDone(l){return this._assertStatus("EXECUTING"),this._states.next(this.options.id),this.Events.trigger("done",l)}};var D=S,U,F,j;j=a,U=_,F=class{constructor(l,n,p){this.instance=l,this.storeOptions=n,this.clientId=this.instance._randomIndex(),j.load(p,p,this),this._nextRequest=this._lastReservoirRefresh=this._lastReservoirIncrease=Date.now(),this._running=0,this._done=0,this._unblockTime=0,this.ready=this.Promise.resolve(),this.clients={},this._startHeartbeat()}_startHeartbeat(){var l;return this.heartbeat==null&&(this.storeOptions.reservoirRefreshInterval!=null&&this.storeOptions.reservoirRefreshAmount!=null||this.storeOptions.reservoirIncreaseInterval!=null&&this.storeOptions.reservoirIncreaseAmount!=null)?typeof(l=this.heartbeat=setInterval(()=>{var n,p,d,h,v;if(h=Date.now(),this.storeOptions.reservoirRefreshInterval!=null&&h>=this._lastReservoirRefresh+this.storeOptions.reservoirRefreshInterval&&(this._lastReservoirRefresh=h,this.storeOptions.reservoir=this.storeOptions.reservoirRefreshAmount,this.instance._drainAll(this.computeCapacity())),this.storeOptions.reservoirIncreaseInterval!=null&&h>=this._lastReservoirIncrease+this.storeOptions.reservoirIncreaseInterval&&({reservoirIncreaseAmount:n,reservoirIncreaseMaximum:d,reservoir:v}=this.storeOptions,this._lastReservoirIncrease=h,p=d!=null?Math.min(n,d-v):n,p>0))return this.storeOptions.reservoir+=p,this.instance._drainAll(this.computeCapacity())},this.heartbeatInterval)).unref=="function"?l.unref():void 0:clearInterval(this.heartbeat)}async __publish__(l){return await this.yieldLoop(),this.instance.Events.trigger("message",l.toString())}async __disconnect__(l){return await this.yieldLoop(),clearInterval(this.heartbeat),this.Promise.resolve()}yieldLoop(l=0){return new this.Promise(function(n,p){return setTimeout(n,l)})}computePenalty(){var l;return(l=this.storeOptions.penalty)!=null?l:15*this.storeOptions.minTime||5e3}async __updateSettings__(l){return await this.yieldLoop(),j.overwrite(l,l,this.storeOptions),this._startHeartbeat(),this.instance._drainAll(this.computeCapacity()),!0}async __running__(){return await this.yieldLoop(),this._running}async __queued__(){return await this.yieldLoop(),this.instance.queued()}async __done__(){return await this.yieldLoop(),this._done}async __groupCheck__(l){return await this.yieldLoop(),this._nextRequest+this.timeout<l}computeCapacity(){var l,n;return{maxConcurrent:l,reservoir:n}=this.storeOptions,l!=null&&n!=null?Math.min(l-this._running,n):l!=null?l-this._running:n??null}conditionsCheck(l){var n;return n=this.computeCapacity(),n==null||l<=n}async __incrementReservoir__(l){var n;return await this.yieldLoop(),n=this.storeOptions.reservoir+=l,this.instance._drainAll(this.computeCapacity()),n}async __currentReservoir__(){return await this.yieldLoop(),this.storeOptions.reservoir}isBlocked(l){return this._unblockTime>=l}check(l,n){return this.conditionsCheck(l)&&this._nextRequest-n<=0}async __check__(l){var n;return await this.yieldLoop(),n=Date.now(),this.check(l,n)}async __register__(l,n,p){var d,h;return await this.yieldLoop(),d=Date.now(),this.conditionsCheck(n)?(this._running+=n,this.storeOptions.reservoir!=null&&(this.storeOptions.reservoir-=n),h=Math.max(this._nextRequest-d,0),this._nextRequest=d+h+this.storeOptions.minTime,{success:!0,wait:h,reservoir:this.storeOptions.reservoir}):{success:!1}}strategyIsBlock(){return this.storeOptions.strategy===3}async __submit__(l,n){var p,d,h;if(await this.yieldLoop(),this.storeOptions.maxConcurrent!=null&&n>this.storeOptions.maxConcurrent)throw new U(`Impossible to add a job having a weight of ${n} to a limiter having a maxConcurrent setting of ${this.storeOptions.maxConcurrent}`);return d=Date.now(),h=this.storeOptions.highWater!=null&&l===this.storeOptions.highWater&&!this.check(n,d),p=this.strategyIsBlock()&&(h||this.isBlocked(d)),p&&(this._unblockTime=d+this.computePenalty(),this._nextRequest=this._unblockTime+this.storeOptions.minTime,this.instance._dropAllQueued()),{reachedHWM:h,blocked:p,strategy:this.storeOptions.strategy}}async __free__(l,n){return await this.yieldLoop(),this._running-=n,this._done+=n,this.instance._drainAll(this.computeCapacity()),{running:this._running}}};var N=F,C,V;C=_,V=class{constructor(l){this.status=l,this._jobs={},this.counts=this.status.map(function(){return 0})}next(l){var n,p;if(n=this._jobs[l],p=n+1,n!=null&&p<this.status.length)return this.counts[n]--,this.counts[p]++,this._jobs[l]++;if(n!=null)return this.counts[n]--,delete this._jobs[l]}start(l){var n;return n=0,this._jobs[l]=n,this.counts[n]++}remove(l){var n;return n=this._jobs[l],n!=null&&(this.counts[n]--,delete this._jobs[l]),n!=null}jobStatus(l){var n;return(n=this.status[this._jobs[l]])!=null?n:null}statusJobs(l){var n,p,d,h,v;if(l!=null){if(p=this.status.indexOf(l),p<0)throw new C(`status must be one of ${this.status.join(", ")}`);d=this._jobs,h=[];for(n in d)v=d[n],v===p&&h.push(n);return h}else return Object.keys(this._jobs)}statusCounts(){return this.counts.reduce((l,n,p)=>(l[this.status[p]]=n,l),{})}};var ee=V,X,de;X=g,de=class{constructor(l,n){this.schedule=this.schedule.bind(this),this.name=l,this.Promise=n,this._running=0,this._queue=new X}isEmpty(){return this._queue.length===0}async _tryToRun(){var l,n,p,d,h,v,G;if(this._running<1&&this._queue.length>0)return this._running++,{task:G,args:l,resolve:h,reject:d}=this._queue.shift(),n=await async function(){try{return v=await G(...l),function(){return h(v)}}catch(L){return p=L,function(){return d(p)}}}(),this._running--,this._tryToRun(),n()}schedule(l,...n){var p,d,h;return h=d=null,p=new this.Promise(function(v,G){return h=v,d=G}),this._queue.push({task:l,args:n,resolve:h,reject:d}),this._tryToRun(),p}};var ae=de,te="2.19.5",ge={version:te},Me=Object.freeze({version:te,default:ge}),yr=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),kr=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),Zt=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),Pr,Gr,Or,Rr,Ar,Ue;Ue=a,Pr=m,Rr=yr,Or=kr,Ar=Zt,Gr=(function(){class A{constructor(n={}){this.deleteKey=this.deleteKey.bind(this),this.limiterOptions=n,Ue.load(this.limiterOptions,this.defaults,this),this.Events=new Pr(this),this.instances={},this.Bottleneck=Nr,this._startAutoCleanup(),this.sharedConnection=this.connection!=null,this.connection==null&&(this.limiterOptions.datastore==="redis"?this.connection=new Rr(Object.assign({},this.limiterOptions,{Events:this.Events})):this.limiterOptions.datastore==="ioredis"&&(this.connection=new Or(Object.assign({},this.limiterOptions,{Events:this.Events}))))}key(n=""){var p;return(p=this.instances[n])!=null?p:(()=>{var d;return d=this.instances[n]=new this.Bottleneck(Object.assign(this.limiterOptions,{id:`${this.id}-${n}`,timeout:this.timeout,connection:this.connection})),this.Events.trigger("created",d,n),d})()}async deleteKey(n=""){var p,d;return d=this.instances[n],this.connection&&(p=await this.connection.__runCommand__(["del",...Ar.allKeys(`${this.id}-${n}`)])),d!=null&&(delete this.instances[n],await d.disconnect()),d!=null||p>0}limiters(){var n,p,d,h;p=this.instances,d=[];for(n in p)h=p[n],d.push({key:n,limiter:h});return d}keys(){return Object.keys(this.instances)}async clusterKeys(){var n,p,d,h,v,G,L,z,Q;if(this.connection==null)return this.Promise.resolve(this.keys());for(G=[],n=null,Q=`b_${this.id}-`.length,p=9;n!==0;)for([z,d]=await this.connection.__runCommand__(["scan",n??0,"match",`b_${this.id}-*_settings`,"count",1e4]),n=~~z,h=0,L=d.length;h<L;h++)v=d[h],G.push(v.slice(Q,-p));return G}_startAutoCleanup(){var n;return clearInterval(this.interval),typeof(n=this.interval=setInterval(async()=>{var p,d,h,v,G,L;G=Date.now(),h=this.instances,v=[];for(d in h){L=h[d];try{await L._store.__groupCheck__(G)?v.push(this.deleteKey(d)):v.push(void 0)}catch(z){p=z,v.push(L.Events.trigger("error",p))}}return v},this.timeout/2)).unref=="function"?n.unref():void 0}updateSettings(n={}){if(Ue.overwrite(n,this.defaults,this),Ue.overwrite(n,n,this.limiterOptions),n.timeout!=null)return this._startAutoCleanup()}disconnect(n=!0){var p;if(!this.sharedConnection)return(p=this.connection)!=null?p.disconnect(n):void 0}}return A.prototype.defaults={timeout:1e3*60*5,connection:null,Promise,id:"group-key"},A}).call(t);var es=Gr,Sr,Fr,Cr;Cr=a,Fr=m,Sr=(function(){class A{constructor(n={}){this.options=n,Cr.load(this.options,this.defaults,this),this.Events=new Fr(this),this._arr=[],this._resetPromise(),this._lastFlush=Date.now()}_resetPromise(){return this._promise=new this.Promise((n,p)=>this._resolve=n)}_flush(){return clearTimeout(this._timeout),this._lastFlush=Date.now(),this._resolve(),this.Events.trigger("batch",this._arr),this._arr=[],this._resetPromise()}add(n){var p;return this._arr.push(n),p=this._promise,this._arr.length===this.maxSize?this._flush():this.maxTime!=null&&this._arr.length===1&&(this._timeout=setTimeout(()=>this._flush(),this.maxTime)),p}}return A.prototype.defaults={maxTime:null,maxSize:null,Promise},A}).call(t);var rs=Sr,ts=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),ss=o(Me),Ur,Dr,He,We,Lr,Ve,Ir,xr,jr,ze,ne,qr=[].splice;Ve=10,Dr=5,ne=a,Ir=O,We=D,Lr=N,xr=ts,He=m,jr=ee,ze=ae,Ur=(function(){class A{constructor(n={},...p){var d,h;this._addToQueue=this._addToQueue.bind(this),this._validateOptions(n,p),ne.load(n,this.instanceDefaults,this),this._queues=new Ir(Ve),this._scheduled={},this._states=new jr(["RECEIVED","QUEUED","RUNNING","EXECUTING"].concat(this.trackDoneStatus?["DONE"]:[])),this._limiter=null,this.Events=new He(this),this._submitLock=new ze("submit",this.Promise),this._registerLock=new ze("register",this.Promise),h=ne.load(n,this.storeDefaults,{}),this._store=(function(){if(this.datastore==="redis"||this.datastore==="ioredis"||this.connection!=null)return d=ne.load(n,this.redisStoreDefaults,{}),new xr(this,h,d);if(this.datastore==="local")return d=ne.load(n,this.localStoreDefaults,{}),new Lr(this,h,d);throw new A.prototype.BottleneckError(`Invalid datastore type: ${this.datastore}`)}).call(this),this._queues.on("leftzero",()=>{var v;return(v=this._store.heartbeat)!=null&&typeof v.ref=="function"?v.ref():void 0}),this._queues.on("zero",()=>{var v;return(v=this._store.heartbeat)!=null&&typeof v.unref=="function"?v.unref():void 0})}_validateOptions(n,p){if(!(n!=null&&typeof n=="object"&&p.length===0))throw new A.prototype.BottleneckError("Bottleneck v2 takes a single object argument. Refer to https://github.com/SGrondin/bottleneck#upgrading-to-v2 if you're upgrading from Bottleneck v1.")}ready(){return this._store.ready}clients(){return this._store.clients}channel(){return`b_${this.id}`}channel_client(){return`b_${this.id}_${this._store.clientId}`}publish(n){return this._store.__publish__(n)}disconnect(n=!0){return this._store.__disconnect__(n)}chain(n){return this._limiter=n,this}queued(n){return this._queues.queued(n)}clusterQueued(){return this._store.__queued__()}empty(){return this.queued()===0&&this._submitLock.isEmpty()}running(){return this._store.__running__()}done(){return this._store.__done__()}jobStatus(n){return this._states.jobStatus(n)}jobs(n){return this._states.statusJobs(n)}counts(){return this._states.statusCounts()}_randomIndex(){return Math.random().toString(36).slice(2)}check(n=1){return this._store.__check__(n)}_clearGlobalState(n){return this._scheduled[n]!=null?(clearTimeout(this._scheduled[n].expiration),delete this._scheduled[n],!0):!1}async _free(n,p,d,h){var v,G;try{if({running:G}=await this._store.__free__(n,d.weight),this.Events.trigger("debug",`Freed ${d.id}`,h),G===0&&this.empty())return this.Events.trigger("idle")}catch(L){return v=L,this.Events.trigger("error",v)}}_run(n,p,d){var h,v,G;return p.doRun(),h=this._clearGlobalState.bind(this,n),G=this._run.bind(this,n,p),v=this._free.bind(this,n,p),this._scheduled[n]={timeout:setTimeout(()=>p.doExecute(this._limiter,h,G,v),d),expiration:p.options.expiration!=null?setTimeout(function(){return p.doExpire(h,G,v)},d+p.options.expiration):void 0,job:p}}_drainOne(n){return this._registerLock.schedule(()=>{var p,d,h,v,G;return this.queued()===0?this.Promise.resolve(null):(G=this._queues.getFirst(),{options:v,args:p}=h=G.first(),n!=null&&v.weight>n?this.Promise.resolve(null):(this.Events.trigger("debug",`Draining ${v.id}`,{args:p,options:v}),d=this._randomIndex(),this._store.__register__(d,v.weight,v.expiration).then(({success:L,wait:z,reservoir:Q})=>{var ye;return this.Events.trigger("debug",`Drained ${v.id}`,{success:L,args:p,options:v}),L?(G.shift(),ye=this.empty(),ye&&this.Events.trigger("empty"),Q===0&&this.Events.trigger("depleted",ye),this._run(d,h,z),this.Promise.resolve(v.weight)):this.Promise.resolve(null)})))})}_drainAll(n,p=0){return this._drainOne(n).then(d=>{var h;return d!=null?(h=n!=null?n-d:n,this._drainAll(h,p+d)):this.Promise.resolve(p)}).catch(d=>this.Events.trigger("error",d))}_dropAllQueued(n){return this._queues.shiftAll(function(p){return p.doDrop({message:n})})}stop(n={}){var p,d;return n=ne.load(n,this.stopDefaults),d=h=>{var v;return v=()=>{var G;return G=this._states.counts,G[0]+G[1]+G[2]+G[3]===h},new this.Promise((G,L)=>v()?G():this.on("done",()=>{if(v())return this.removeAllListeners("done"),G()}))},p=n.dropWaitingJobs?(this._run=function(h,v){return v.doDrop({message:n.dropErrorMessage})},this._drainOne=()=>this.Promise.resolve(null),this._registerLock.schedule(()=>this._submitLock.schedule(()=>{var h,v,G;v=this._scheduled;for(h in v)G=v[h],this.jobStatus(G.job.options.id)==="RUNNING"&&(clearTimeout(G.timeout),clearTimeout(G.expiration),G.job.doDrop({message:n.dropErrorMessage}));return this._dropAllQueued(n.dropErrorMessage),d(0)}))):this.schedule({priority:Ve-1,weight:0},()=>d(1)),this._receive=function(h){return h._reject(new A.prototype.BottleneckError(n.enqueueErrorMessage))},this.stop=()=>this.Promise.reject(new A.prototype.BottleneckError("stop() has already been called")),p}async _addToQueue(n){var p,d,h,v,G,L,z;({args:p,options:v}=n);try{({reachedHWM:G,blocked:d,strategy:z}=await this._store.__submit__(this.queued(),v.weight))}catch(Q){return h=Q,this.Events.trigger("debug",`Could not queue ${v.id}`,{args:p,options:v,error:h}),n.doDrop({error:h}),!1}return d?(n.doDrop(),!0):G&&(L=z===A.prototype.strategy.LEAK?this._queues.shiftLastFrom(v.priority):z===A.prototype.strategy.OVERFLOW_PRIORITY?this._queues.shiftLastFrom(v.priority+1):z===A.prototype.strategy.OVERFLOW?n:void 0,L!=null&&L.doDrop(),L==null||z===A.prototype.strategy.OVERFLOW)?(L==null&&n.doDrop(),G):(n.doQueue(G,d),this._queues.push(n),await this._drainAll(),G)}_receive(n){return this._states.jobStatus(n.options.id)!=null?(n._reject(new A.prototype.BottleneckError(`A job with the same id already exists (id=${n.options.id})`)),!1):(n.doReceive(),this._submitLock.schedule(this._addToQueue,n))}submit(...n){var p,d,h,v,G,L,z;return typeof n[0]=="function"?(G=n,[d,...n]=G,[p]=qr.call(n,-1),v=ne.load({},this.jobDefaults)):(L=n,[v,d,...n]=L,[p]=qr.call(n,-1),v=ne.load(v,this.jobDefaults)),z=(...Q)=>new this.Promise(function(ye,ns){return d(...Q,function(...$r){return($r[0]!=null?ns:ye)($r)})}),h=new We(z,n,v,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),h.promise.then(function(Q){return typeof p=="function"?p(...Q):void 0}).catch(function(Q){return Array.isArray(Q)?typeof p=="function"?p(...Q):void 0:typeof p=="function"?p(Q):void 0}),this._receive(h)}schedule(...n){var p,d,h;return typeof n[0]=="function"?([h,...n]=n,d={}):[d,h,...n]=n,p=new We(h,n,d,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),this._receive(p),p.promise}wrap(n){var p,d;return p=this.schedule.bind(this),d=function(...h){return p(n.bind(this),...h)},d.withOptions=function(h,...v){return p(h,n,...v)},d}async updateSettings(n={}){return await this._store.__updateSettings__(ne.overwrite(n,this.storeDefaults)),ne.overwrite(n,this.instanceDefaults,this),this}currentReservoir(){return this._store.__currentReservoir__()}incrementReservoir(n=0){return this._store.__incrementReservoir__(n)}}return A.default=A,A.Events=He,A.version=A.prototype.version=ss.version,A.strategy=A.prototype.strategy={LEAK:1,OVERFLOW:2,OVERFLOW_PRIORITY:4,BLOCK:3},A.BottleneckError=A.prototype.BottleneckError=_,A.Group=A.prototype.Group=es,A.RedisConnection=A.prototype.RedisConnection=yr,A.IORedisConnection=A.prototype.IORedisConnection=kr,A.Batcher=A.prototype.Batcher=rs,A.prototype.jobDefaults={priority:Dr,weight:1,expiration:null,id:"<no-id>"},A.prototype.storeDefaults={maxConcurrent:null,minTime:0,highWater:null,strategy:A.prototype.strategy.LEAK,penalty:null,reservoir:null,reservoirRefreshInterval:null,reservoirRefreshAmount:null,reservoirIncreaseInterval:null,reservoirIncreaseAmount:null,reservoirIncreaseMaximum:null},A.prototype.localStoreDefaults={Promise,timeout:null,heartbeatInterval:250},A.prototype.redisStoreDefaults={Promise,timeout:null,heartbeatInterval:5e3,clientTimeout:1e4,Redis:null,clientOptions:{},clusterNodes:null,clearDatastore:!1,connection:null},A.prototype.instanceDefaults={datastore:"local",connection:null,id:"<no-id>",rejectOnDrop:!0,trackDoneStatus:!1,Promise},A.prototype.stopDefaults={enqueueErrorMessage:"This limiter has been stopped and cannot accept new jobs.",dropWaitingJobs:!0,dropErrorMessage:"This limiter has been stopped."},A}).call(t);var Nr=Ur,os=Nr;return os})}(qe)),qe.exports}var $n=Nn();const Jt=Qo($n);var Bn="0.0.0-development";async function Qt(e,r,t,o){if(!t.request||!t.request.request)throw t;if(t.status>=400&&!e.doNotRetry.includes(t.status)){const s=o.request.retries!=null?o.request.retries:e.retries,i=Math.pow((o.request.retryCount||0)+1,2);throw r.retry.retryRequest(t,s,i)}throw t}async function Mn(e,r,t,o){const s=new Jt;return s.on("failed",function(i,a){const c=~~i.request.request.retries,g=~~i.request.request.retryAfter;if(o.request.retryCount=a.retryCount+1,c>a.retryCount)return g*e.retryAfterBaseValue}),s.schedule(Hn.bind(null,e,r,t),o)}async function Hn(e,r,t,o){const s=await t(t,o);if(s.data&&s.data.errors&&s.data.errors.length>0&&/Something went wrong while executing your query/.test(s.data.errors[0].message)){const i=new Ge(s.data.errors[0].message,500,{request:o,response:s});return Qt(e,r,i,o)}return s}function Yt(e,r){const t=Object.assign({enabled:!0,retryAfterBaseValue:1e3,doNotRetry:[400,401,403,404,422,451],retries:3},r.retry);return t.enabled&&(e.hook.error("request",Qt.bind(null,t,e)),e.hook.wrap("request",Mn.bind(null,t,e))),{retry:{retryRequest:(o,s,i)=>(o.request.request=Object.assign({},o.request.request,{retries:s,retryAfter:i}),o)}}}Yt.VERSION=Bn;var Wn="0.0.0-development",nr=()=>Promise.resolve();function Vn(e,r,t){return e.retryLimiter.schedule(zn,e,r,t)}async function zn(e,r,t){const o=t.method!=="GET"&&t.method!=="HEAD",{pathname:s}=new URL(t.url,"http://github.test"),i=t.method==="GET"&&s.startsWith("/search/"),a=s.startsWith("/graphql"),g=~~r.retryCount>0?{priority:0,weight:0}:{};e.clustering&&(g.expiration=1e3*60),(o||a)&&await e.write.key(e.id).schedule(g,nr),o&&e.triggersNotification(s)&&await e.notifications.key(e.id).schedule(g,nr),i&&await e.search.key(e.id).schedule(g,nr);const E=e.global.key(e.id).schedule(g,r,t);if(a){const m=await E;if(m.data.errors!=null&&m.data.errors.some(T=>T.type==="RATE_LIMITED"))throw Object.assign(new Error("GraphQL Rate Limit Exceeded"),{response:m,data:m.data})}return E}var Kn=["/orgs/{org}/invitations","/orgs/{org}/invitations/{invitation_id}","/orgs/{org}/teams/{team_slug}/discussions","/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments","/repos/{owner}/{repo}/collaborators/{username}","/repos/{owner}/{repo}/commits/{commit_sha}/comments","/repos/{owner}/{repo}/issues","/repos/{owner}/{repo}/issues/{issue_number}/comments","/repos/{owner}/{repo}/pulls","/repos/{owner}/{repo}/pulls/{pull_number}/comments","/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies","/repos/{owner}/{repo}/pulls/{pull_number}/merge","/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers","/repos/{owner}/{repo}/pulls/{pull_number}/reviews","/repos/{owner}/{repo}/releases","/teams/{team_id}/discussions","/teams/{team_id}/discussions/{discussion_number}/comments"];function Jn(e){const t=`^(?:${e.map(o=>o.split("/").map(s=>s.startsWith("{")?"(?:.+?)":s).join("/")).map(o=>`(?:${o})`).join("|")})[^/]*$`;return new RegExp(t,"i")}var pt=Jn(Kn),Xt=pt.test.bind(pt),we={},Qn=function(e,r){we.global=new e.Group({id:"octokit-global",maxConcurrent:10,...r}),we.search=new e.Group({id:"octokit-search",maxConcurrent:1,minTime:2e3,...r}),we.write=new e.Group({id:"octokit-write",maxConcurrent:1,minTime:1e3,...r}),we.notifications=new e.Group({id:"octokit-notifications",maxConcurrent:1,minTime:3e3,...r})};function wr(e,r){const{enabled:t=!0,Bottleneck:o=Jt,id:s="no-id",timeout:i=1e3*60*2,connection:a}=r.throttle||{};if(!t)return{};const c={timeout:i};typeof a<"u"&&(c.connection=a),we.global==null&&Qn(o,c);const g=Object.assign({clustering:a!=null,triggersNotification:Xt,fallbackSecondaryRateRetryAfter:60,retryAfterBaseValue:1e3,retryLimiter:new o,id:s,...we},r.throttle);if(typeof g.onSecondaryRateLimit!="function"||typeof g.onRateLimit!="function")throw new Error(`octokit/plugin-throttling error:
        You must pass the onSecondaryRateLimit and onRateLimit error handlers.
        See https://octokit.github.io/rest.js/#throttling

        const octokit = new Octokit({
          throttle: {
            onSecondaryRateLimit: (retryAfter, options) => {/* ... */},
            onRateLimit: (retryAfter, options) => {/* ... */}
          }
        })
    `);const E={},m=new o.Events(E);return E.on("secondary-limit",g.onSecondaryRateLimit),E.on("rate-limit",g.onRateLimit),E.on("error",T=>e.log.warn("Error in throttling-plugin limit handler",T)),g.retryLimiter.on("failed",async function(T,b){const[f,O,P]=b.args,{pathname:_}=new URL(P.url,"http://github.test");if(!(_.startsWith("/graphql")&&T.status!==401||T.status===403||T.status===429))return;const k=~~O.retryCount;O.retryCount=k,P.request.retryCount=k;const{wantRetry:S,retryAfter:w=0}=await async function(){var R;if(/\bsecondary rate\b/i.test(T.message)){const D=Number(T.response.headers["retry-after"])||f.fallbackSecondaryRateRetryAfter;return{wantRetry:await m.trigger("secondary-limit",D,P,e,k),retryAfter:D}}if(T.response.headers!=null&&T.response.headers["x-ratelimit-remaining"]==="0"||(((R=T.response.data)==null?void 0:R.errors)??[]).some(D=>D.type==="RATE_LIMITED")){const D=new Date(~~T.response.headers["x-ratelimit-reset"]*1e3).getTime(),U=Math.max(Math.ceil((D-Date.now())/1e3)+1,0);return{wantRetry:await m.trigger("rate-limit",U,P,e,k),retryAfter:U}}return{}}();if(S)return O.retryCount++,w*f.retryAfterBaseValue}),e.hook.wrap("request",Vn.bind(null,g)),{}}wr.VERSION=Wn;wr.triggersNotification=Xt;var Yn="0.0.0-development",Xn=Tn.plugin(Kt,Mt,Cn,Yt,wr).defaults({userAgent:`octokit.js/${Yn}`,throttle:{onRateLimit:Zn,onSecondaryRateLimit:ei}});function Zn(e,r,t){if(t.log.warn(`Request quota exhausted for request ${r.method} ${r.url}`),r.request.retryCount===0)return t.log.info(`Retrying after ${e} seconds!`),!0}function ei(e,r,t){if(t.log.warn(`SecondaryRateLimit detected for request ${r.method} ${r.url}`),r.request.retryCount===0)return t.log.info(`Retrying after ${e} seconds!`),!0}var he,Se,Fe;class ri{constructor(r){$(this,"auth","");ke(this,he);ke(this,Se,re(null));ke(this,Fe,re([]));this.auth=r,Hr(this,he,new Xn({auth:r})),rr.getUser(ie(this,he)).then(t=>{var o;this.user=t,rr.getTrades(ie(this,he),(o=this.user)==null?void 0:o.login).then(s=>{this.trades=s})})}get user(){return u(ie(this,Se))}set user(r){J(ie(this,Se),r)}get trades(){return u(ie(this,Fe))}set trades(r){J(ie(this,Fe),r)}async set(r){var t;return this.user&&await rr.setTrades(ie(this,he),(t=this.user)==null?void 0:t.login,r)?(this.trades=r,!0):!1}}he=new WeakMap,Se=new WeakMap,Fe=new WeakMap;function ti(e){return new ri(e)}var Ce;class si{constructor(r,t){$(this,"key","");ke(this,Ce,re());this.key=r,this.value=t,this.value=localStorage[r]?JSON.parse(localStorage[r]):t,yt(()=>{this.value&&(localStorage[r]=JSON.stringify(this.value))})}get value(){return u(ie(this,Ce))}set value(r){J(ie(this,Ce),r)}}Ce=new WeakMap;function dt(e,r){return new si(e,r)}var oi=M('<header class="flex-row align-items-center gap-1 svelte-rc7rfo"><h1 class="flexible">Trading journal v5</h1> <input class="patInput svelte-rc7rfo" placeholder="Git personal access token"> <button>Add</button> <button><!></button></header> <div class="containerTable overflow-auto svelte-rc7rfo"><!></div> <!>',1);function bi(e,r){le(r,!0);const t=dt("personalAccessToken",""),o=dt("trades",[]),s=W(()=>ti(t.value)),i=W(()=>ar.combineChanges(o.value,u(s).trades)),a=W(()=>o.value.length>0&&!!u(s).user);let c=re(void 0),g=re(!1);const E=F=>{o.value=ar.getChanges(F,u(s).trades)},m=F=>{var j;(j=u(c))==null||j.show(F,u(i),N=>{if(N.status!="closed"&&N.status!="canceled"){const C=u(i).findIndex(V=>F.date==V.date);E(u(i).toSpliced(C,1,N))}})},T=()=>{o.value=[Ut(u(i)[0]),...o.value]},b=async()=>{J(g,!0);try{await u(s).set(u(i))&&(o.value=[])}catch(F){alert(F)}J(g,!1)};var f=oi(),O=me(f),P=I(B(O),2);fr(P);var _=I(P,2);_.__click=T;var y=I(_,2);y.__click=b;var k=B(y);{var S=F=>{eo(F,{})},w=F=>{var j=Ie("Sync");x(F,j)};se(k,F=>{u(g)?F(S):F(w,!1)})}q(y),q(O);var R=I(O,2),D=B(R);So(D,{get trades(){return u(i)},onchange:E,ondblclick:m}),q(R);var U=I(R,2);mr(ho(U,{}),F=>J(c,fe(F)),()=>u(c)),H(()=>y.disabled=!u(a)||u(g)),Er(P,()=>t.value,F=>t.value=F),x(e,f),ue()}$e(["click"]);export{bi as component};
